Scope
createScopeNodeNameRemoteVmConnection
openLong
toUIntDouble
toUIntShort
toUInt
Int
toUIntFloat
toUIntByte
toUInt	Char
codeLazy
getValueAny
runAny
letAny
takeUnless
Any
takeIfAny
also	Any
applyLong
toUShortByte
toUShortShort
toUShortInt
toUShortResult
getOrElseResult
throwOnFailure
Result
mapAny
runCatchingResult
getOrDefaultResult
recoverCatchingResult
recoverResult
getOrThrowResult
mapCatchingResult
onFailureResult
onSuccessResult
foldUShort
takeHighestOneBitULong
takeLowestOneBitUShort
takeLowestOneBitULong
rotateLeftUByte
countLeadingZeroBitsULong
countTrailingZeroBitsUShort
rotateRightULong
countLeadingZeroBitsUShort
countTrailingZeroBitsUByte
countTrailingZeroBitsUByte
countOneBitsUShort
countOneBitsULong
rotateRightUByte
rotateLeftUInt
rotateRightUByte
takeLowestOneBitUByte
rotateRightUInt
takeHighestOneBitUByte
takeHighestOneBitULong
takeHighestOneBitUInt
countOneBitsUInt
takeLowestOneBitULong
countOneBitsUInt
countLeadingZeroBitsUShort
rotateLeftUInt
rotateLeftUShort
countLeadingZeroBitsUInt
countTrailingZeroBitsTriple
toListAny
toPair
toListDeepRecursiveFunction
invokeShort
toULongLong
toULongByte
toULongInt
toULongDouble
toULongFloat
toULongComparable
compareToAny
hashCodeLong
toUByteShort
toUByteInt
toUByteByte
toUByteThrowable
stackTraceThrowable
addSuppressedThrowable
suppressedExceptionsThrowable
stackTraceToStringThrowable
printStackTraceKProperty1
getValueKMutableProperty0
setValueKProperty0
getValueKMutableProperty1
setValueKProperty0
isInitializedInt
rotateLeftInt
countOneBitsByte
takeHighestOneBitBigInteger
timesShort
countTrailingZeroBitsInt
modShort
countLeadingZeroBitsInt
takeLowestOneBitBigInteger
rem	Float
modDouble
isInfiniteByte
countOneBitsLong
takeHighestOneBitCompanion
fromBitsBigDecimal
remShort
countOneBitsLong
rotateRightBigInteger
invFloat
toBigDecimalDouble
toRawBitsLong
takeLowestOneBitByte
countTrailingZeroBitsLong
rotateLeftBigDecimal
divBigInteger
divByte
mod
Double
modShort
rotateRightInt
countTrailingZeroBitsLong
toBigDecimalBigDecimal
plus	Short
modBigInteger
unaryMinusByte
floorDivFloat
isNaNBigInteger
plusBigDecimal
incInt
takeHighestOneBitInt
countLeadingZeroBitsLong
toBigIntegerLong
countTrailingZeroBitsDouble
isFiniteBigInteger
incByte
rotateLeftFloat
toRawBitsBigInteger
toBigDecimalInt
rotateRightBigInteger
shlShort
floorDivLong
countOneBitsInt
floorDivLong
floorDivFloat
isInfiniteShort
takeLowestOneBitBigInteger
xorDouble
isNaNLong
countLeadingZeroBitsByte
takeLowestOneBitBigInteger
orShort
rotateLeftBigDecimal
timesBigDecimal
unaryMinusBigDecimal
minusInt
toBigDecimalShort
takeHighestOneBitByte
countLeadingZeroBitsFloat
toBitsBigInteger
minusLong
modBigInteger
shrBigInteger
andDouble
toBigDecimalBigDecimal
decFloat
isFiniteInt
toBigIntegerByte
rotateRightBigInteger
decDouble
toBitsURL
readBytesReader
copyToReader
useLinesURL
readTextReader
bufferedReader
forEachLineString
readerBufferedReader
lineSequenceWriter
bufferedReader
readTextReader
readLinesAny
toStringString
plusCloseable
closeFinallyByteArray
inputStreamInputStream
bufferedReaderOutputStream
writerOutputStream
bufferedString
byteInputStreamInputStream
readBytesBufferedInputStream
iteratorInputStream
readerInputStream
bufferedOutputStream
bufferedWriterFile
appendBytesFile
readLinesFile
bufferedWriterFile
relativeToOrSelfList
normalizeFile
rootNameFile
appendTextFile
invariantSeparatorsPathFile
outputStreamFile
readTextFile
writeBytes	File
walkFile
isRootedFile
readerFile
relativeToOrNullFile
endsWithFile
nameWithoutExtensionFile
relativeToFile
toComponentsFile
writerFile
copyTo	File
rootFile
writeTextFile
extensionFile
useLinesFile
subPathFile
toRelativeStringFile
bufferedReaderFile
toRelativeStringOrNullFilePathComponents
normalizeFile
resolveSiblingFile
inputStreamFile
startsWithFile
deleteRecursivelyFile
resolveFile
walkBottomUpFile
normalizeString
getRootLengthFile
forEachLineFile
readBytesFile
printWriterFile
copyRecursivelyFile
walkTopDownFile
forEachBlockKClass
javaObjectTypeKClass
javaAny
javaClassKClass
javaClassKClass
javaPrimitiveTypeClass
kotlinAnnotation
annotationClassArray
isArrayOfPath
appendLinesPath
inputStream
URI
toPathPath
setOwner"Path
invariantSeparatorsPathStringPath
setPosixFilePermissionsPath
writeBytesPath
bufferedWriterPath
appendTextPath
isHidden!Path
createSymbolicLinkPointingToPath
readerPath
deleteExistingPath
createDirectoriesPath
readBytesPath
relativeToPath
notExistsPath
pathStringPath
setLastModifiedTimePath
relativeToOrSelfPath
copyToPath
setAttributePath
bufferedReaderPath
readAttributesPath
relativeToOrNullPath
isSameFileAsPath
absolutePath
absolutePathStringPath
appendBytesPath
isDirectoryPath
useLinesPath
readSymbolicLinkPath
getAttributePath
forEachLinePath
existsPath
isRegularFilePath
createLinkPointingToPath
moveToPath
isSymbolicLinkPath
fileSizePath
isReadablePath
divPath
readLinesPath
fileStorePath
writerPath
listDirectoryEntriesPath
createDirectoryPath
forEachDirectoryEntryPath
createFilePath
fileAttributesViewPath
deleteIfExistsPath
getLastModifiedTime	Path
namePath
nameWithoutExtensionPath
getOwnerPath
fileAttributesViewOrNullPath
getPosixFilePermissionsPath
writeTextPath
writeLinesPath
useDirectoryEntriesPath
isExecutablePath
outputStreamPath
invariantSeparatorsPathPath
isWritablePath
readTextAutoCloseable
useAutoCloseable
closeFinallyString
toUIntULong
toStringString
toUByteOrNullString
toUShortString
toUByteString
toULongUInt
toStringUByte
toStringString
toUIntOrNullString
toUShortOrNullString
toULongOrNullUShort
toString	Float
ulpDouble
IEEEremFloat
withSignFloat
roundToIntInt
signFloat
nextUpDouble
nextDownFloat
absoluteValue
Float
signDouble
signDouble
roundToLong	Long
sign	Float
powFloat
roundToLongDouble
roundToIntDouble
withSignDouble
nextUpDouble
absoluteValueFloat
nextDownFloat
nextTowards
Double
powInt
absoluteValueLong
absoluteValue
Double
ulpDouble
nextTowardsFloat
IEEEremChar
titlecaseImplIterable
toIntMatcher
findNextMatcher
matchEntireMatchResult
rangeMatchGroupCollection
getChar
lowercaseCharChar
uppercaseCharInt
digitToChar	Char
plusChar
isJavaIdentifierStartChar
isDefinedChar
isTitleCaseChar
isJavaIdentifierPartChar
isUpperCaseChar
isSurrogateChar
directionalityChar
digitToIntChar
isLetterOrDigitChar
toTitleCaseChar
titlecaseChar
isLetterChar
toLowerCaseChar
isDigitChar
categoryChar
isWhitespaceChar
lowercaseChar
digitToIntOrNullChar
isIdentifierIgnorableChar
equalsChar
isISOControlChar
uppercaseChar
titlecaseCharChar
toUpperCaseChar
isHighSurrogateChar
isLowSurrogateTimeSource
measureTimedValueTimeSource
measureTimeDurationUnit
shortNameTimeUnit
toDurationUnitDurationUnit
toTimeUnitTimeMark
minusTimeMark
compareToLong
nanosecondsLong
microseconds	Int
timesString
substringWhileDouble
hoursInt
secondsString
skipWhileInt
daysInt
toDurationInt
minutesLong
minutesDouble
toDurationDouble
minutesDouble
microsecondsDouble
daysDouble
secondsLong
secondsLong
milliseconds	Long
daysDouble
nanoseconds
Long
hoursInt
millisecondsInt
microsecondsLong
toDuration	Int
hoursDouble
millisecondsInt
nanosecondsDouble
timesDuration
toKotlinDurationDuration
toJavaDurationRandom
nextUBytesRandom
nextUIntRandom
nextULongRandom
asKotlinRandomRandom
asJavaRandomRandom
nextLongInt
takeUpperBitsRandom
nextIntULongRange
containsUByte
coerceInULong
coerceAtMostULong
coerceInUIntProgression
reversedUByte
untilUByte
coerceAtMostULongRange
randomOrNullUShort
coerceAtMostUIntRange
containsUByte
downToUIntRange
randomOrNullUByte
coerceAtLeastUIntRange
randomULong
untilUShort
coerceInULongProgression
reversedUIntProgression
stepUShort
downToUShort
coerceAtLeastUInt
downToUInt
coerceIn
UInt
untilULongRange
randomULong
downToUShort
untilUInt
coerceAtLeastULongProgression
stepUInt
coerceAtMostULong
coerceAtLeastCharSequence
chunkedCharSequence
toCollectionString
decapitalizeString
codePointAtCharSequence
indexOfAnyByteArray
decodeToStringCharSequence
groupByToCharSequence
mapIndexedToCharSequence
singleOrNullCharSequence
onEachString
trimEndString
takeCharSequence
replaceFirstString
equalsCharSequence
filterIndexedToCharSequence
associateByToCharSequence
dropWhileCompanion
formatCharSequence
randomCharSequence
onEachIndexedCharSequence
maxWithCharSequence
lastStringBuilder
appendlnCharSequence
endsWithCharSequence
anyString
replaceFirstCharSequence
elementAtOrNullString
substringAfterLastString
encodeToByteArrayCharSequence
associateWithCharSequence
flatMapToString
replaceAfterLastCharSequence
withIndexCharSequence
maxOfOrNullAppendable
appendlnCharSequence
toHashSetString
replaceIndentCharSequence
regionMatchesImplString
toFloatOrNullAppendable
appendCharSequence
substringCharSequence
groupByCharSequence
minWithOrNullCharSequence
getOrNullString
removeRangeCharSequence
maxOrNullAppendable
appendLineString
replaceRangeCharSequence
filterNotToCharSequence
firstOrNullCharSequence
lastIndexOfAnyCharArray
concatToStringStringBuilder
deleteAtAppendable
appendElementCharSequence
runningReduceString
removeSuffixCharSequence
mapNotNullCharSequence
firstNotNullOfInt
toStringString
toBigIntegerCharSequence
isNotBlankCharSequence
maxWithOrNullCharSequence
isEmptyList
reindentCharSequence
lineSequenceStringBuilder
insertRangeString
partitionCharSequence
sumByCharSequence
removeSuffix CharSequence
mapIndexedNotNullToCharSequence
minOfOrNullString
dropWhileCharSequence
toMutableListString
replaceString
substringAfterCharSequence
linesCharSequence
mapIndexedNotNullCharSequence
iteratorString
internString
orEmptyCharSequence
isNullOrBlankCharSequence
hasSurrogatePairAtCharSequence
associateToString
toDoubleOrNullString
sliceCharSequence
singleCharSequence
scanString
toIntCharSequence
maxOfWithCharSequence
ifBlankString
codePointCountCharSequence
noneCharSequence
sliceCharSequence
minWithCharSequence
sumOfString
dropLastCharSequence
foldRightIndexedCharSequence
splitCharSequence
flatMapIndexedCharSequence
lastIndexString
toLongString
toByte!CharSequence
firstNotNullOfOrNullCharSequence
randomOrNullCharSequence
trimCharSequence
findLastAnyOfString
toPatternString
replaceFirstCharCharSequence
associateCharSequence
reversedCharSequence
toSetCharSequence
sumByDoubleCharSequence
reduceRightCharSequence
foldRightCharSequence
reduceIndexedCharSequence
maxOfCharSequence
matchesCharSequence
trimEndShort
toStringString
filterIndexedStringBuilder
setCharSequence
maxCharSequence
mapCharSequence
findAnyOfCharSequence
foldString
toBigIntegerOrNullCharSequence
findString
offsetByCodePointsStringBuilder
toCharArrayCharSequence
padStartString
nativeIndexOfString
trimMarginCharSequence
rangesDelimitedByCharSequence
toSortedSetCharSequence
flatMapCharSequence
dropString
toLowerCaseStringBuilder
clearCharSequence
replaceCharSequence
minOfWithCharSequence
removePrefixCharSequence
subSequenceStringBuilder
appendLineCharSequence
dropLastWhileCharSequence
lastIndexOfCharSequence
reduceRightOrNull(CharSequence
contentEqualsIgnoreCaseImplString
prependIndent CharSequence
reduceIndexedOrNullCharSequence
minOrNullCharSequence
getOrElseCharSequence
foldIndexedString
nativeLastIndexOfString
endsWithString
trimIndentCharSequence
indexOfString
toUpperCaseString
startsWithCharSequence
zipCharSequence
padEndString
replaceBeforeCharSequence
filterIndexedCharSequence
commonSuffixWithCharSequence
minByCharSequence
maxOfWithOrNullCharSequence
elementAtOrElseCharSequence
runningFoldString
filterNotString
uppercaseString
toFloatString
dropLastWhileCharSequence
windowedSequenceString
padEndString
contentEqualsString
toShortCharSequence
reduceRightIndexedString
reversedCharSequence
associateWithToCharSequence
contentEqualsImplCharSequence
startsWithCharSequence
toListCharSequence
minOfWithOrNullCharSequence
dropLastString
padStartCharSequence
maxByLong
toStringStringBuilder
deleteRangeString
trimStartCharSequence
takeWhilePattern
toRegexString
takeLastCharSequence
isBlankCharSequence
flatMapIndexedToCharSequence
forEachCharSequence
repeat Companion
CASE_INSENSITIVE_ORDERCharSequence
takeCharSequence
isNotEmptyCharSequence
associateByCharSequence
scanIndexed!CharSequence
runningReduceIndexedCharSequence
minCharSequence
takeLastWhileCharSequence
runningFoldIndexedString
replaceBeforeLastString
substringBeforeString
formatString
toBooleanCharSequence
findLastStringBuilder
setRangeString
subSequenceCharSequence
mapNotNullToString
lowercaseCharSequence
commonPrefixWithString
toDoubleCharSequence
reduceOrNullCharSequence
removeSurroundingCharSequence
groupingByCharSequence
filterString
takeLastWhileCharSequence
regionMatchesString
replaceIndentByMarginCharSequence
firstCharSequence
filterToCharSequence
elementAtString
trimString
takeWhileCharSequence
maxByOrNullString
toIntOrNullAppendable
appendRangeCharSequence
asIterableCharSequence
splitToSequenceCharSequence
windowedCharSequence
ifEmptyCharSequence
containsString
codePointBeforeString
removeSurroundingString
dropString
replaceAfterString
regionMatchesString
toByteOrNullCharSequence
allCharSequence
chunkedSequenceString
toShortOrNullCharSequence
removeRangeString
toLongOrNullCharSequence
filterNotString
toRegexCharSequence
asSequenceCharSequence
isNullOrEmptyString
toBigDecimalString
substringCharSequence
contentEqualsCharSequence
indexOfLastCharSequence
minByOrNullCharSequence
countCharSequence
forEachIndexedCharSequence
lastOrNullCharSequence
replaceRange%CharSequence
reduceRightIndexedOrNullCharSequence
mapToString
toBigDecimalOrNullCharSequence
takeLastStringBuilder
appendString
indentWidthString
toBooleanStrictCharSequence
reduceString
substringBeforeLastCharSequence
zipWithNextCharSequence
indicesCharSequence
partitionStringBuilder
appendRangeCharSequence
trimStartCharSequence
minOfCharSequence
mapIndexedString
filterString
removePrefixByte
toStringString
compareToCharSequence
indexOfFirstKClass
qualifiedOrSimpleNameKType
computeJavaTypeKTypeProjection
javaTypeByte
coerceAtLeastShort
coerceAtLeastDouble
toShortExactOrNullDouble
toLongExactOrNullDouble
coerceInCharRange
contains
Char
untilComparable
coerceAtLeastByte
coerceAtMostShort
coerceInDouble
rangeToInt
coerceAtMostInt
toShortExactOrNullFloat
toIntExactOrNullLong
toByteExactOrNullLong
coerceInDouble
coerceAtLeastCharRange
random
Int
downToCharProgression
stepFloat
toLongExactOrNullLong
downToLongProgression
reversedLongProgression
stepDouble
coerceAtMostInt
coerceAtLeastInt
toByteExactOrNullByte
downToCharRange
randomOrNullLong
toShortExactOrNullIntProgression
reversedFloat
toByteExactOrNull
Byte
untilFloat
coerceInShort
untilIntRange
randomComparable
coerceAtMostComparable
rangeToIntRange
randomOrNullIntProgression
stepFloat
toShortExactOrNullShort
coerceAtMostShort
downToFloat
coerceAtLeastIntRange
containsFloat
coerceAtMostDouble
toByteExactOrNullDouble
toIntExactOrNullLong
coerceAtMostCharProgression
reversed	Int
untilChar
downToClosedRange
containsLongRange
randomOrNullLongRange
randomShort
toByteExactOrNullByte
coerceInFloat
rangeTo
Long
untilLong
coerceAtLeastComparable
coerceInInt
coerceInLong
toIntExactOrNullKCallable
isAccessibleKClassifier
jvmErasureKType
jvmErasureKClass
jvmNameFunction
reflectKProperty
javaFieldKFunction
javaConstructorField
kotlinPropertyConstructor
kotlinFunctionKProperty
javaGetterKFunction
javaMethodMember
getKPackageKMutableProperty
javaSetterMethod
kotlinFunctionMethod
signatureAccessor
boundReceiver6PropertyDescriptor
isJvmFieldPropertyInCompanionObject!Accessor
computeCallerForAccessor!ClassDescriptor
readOnlyToMutableClass
getOrCreateModuleArrayValue
arrayToRuntimeValueAny
asKFunctionImplConstantValue
toRuntimeValue"DescriptorVisibility
toKVisibilityClassDescriptor
toJavaClassAny
asKCallableImplKType
isInlineClassType List
unwrapRepeatableAnnotationsAny
asKPropertyImplClass
createArrayType,CallableDescriptor
instanceReceiverParameter)AnnotationDescriptor
toAnnotationInstanceAnnotated
computeAnnotations+Caller
createInlineClassAwareCallerIfNeeded/CallableMemberDescriptor
hasInlineClassReceiver Any
coerceToExpectedReceiverTypeClass
getUnboxMethod-CallableMemberDescriptor
expectedReceiverType#DeclarationDescriptor
toInlineClassKotlinType
toInlineClassClass
getBoxMethodAny
transformKotlinToJvmCaller
arityKProperty2
getExtensionDelegateKProperty1
getExtensionDelegate KAnnotatedElement
findAnnotationKAnnotatedElement
hasAnnotation!KAnnotatedElement
findAnnotationsKCallable
valueParametersKCallable
findParameterByNameKCallable
callSuspendKCallable
instanceParameter$KCallable
extensionReceiverParameterKCallable
callSuspendByKClass
allSupertypesKClass
functionsKClass
companionObjectKClass
superclasses(KClass
declaredMemberExtensionPropertiesKClass
createInstanceKClass
memberFunctionsKClass
staticFunctionsKClass
isSuperclassOfKClass
declaredFunctionsKClass
declaredMemberPropertiesKClass
memberPropertiesKClass
primaryConstructor'KClass
declaredMemberExtensionFunctionsKClass
allSuperclasses KClass
memberExtensionPropertiesKClass
memberExtensionFunctionsKClass
defaultTypeKClass
isSubclassOfKCallableImpl
isExtensionKClass
declaredMembersKCallableImpl
isNotExtensionKClass
staticPropertiesKClass
companionObjectInstanceKClass
declaredMemberFunctionsKType
isSubtypeOfKType
withNullabilityKType
isSupertypeOfKClassifier
createTypeKClassifier
starProjectedTypeLongStream
toListDoubleStream
asSequenceDoubleStream
toListStream
asSequenceLongStream
asSequenceSequence
asStreamStream
toListIntStream
asSequenceIntStream
toListThreadLocal
getOrSetReentrantReadWriteLock
readReentrantReadWriteLock
writeTimer
scheduleAtFixedRateTimer
scheduleElement
getPolymorphicElementElement
minusPolymorphicKeySuspendFunction1
startCoroutine Continuation
resumeWithException SuspendFunction1
createCoroutine SuspendFunction0
createCoroutineContinuation
resumeSuspendFunction0
startCoroutine-BaseContinuationImpl
getStackTraceElementImpl/BaseContinuationImpl
getDebugMetadataAnnotation3BaseContinuationImpl
getSpilledVariableFieldMappingBaseContinuationImpl
getLabel-SuspendFunction0
createCoroutineUnintercepted4SuspendFunction2
startCoroutineUninterceptedOrReturn4SuspendFunction1
startCoroutineUninterceptedOrReturnContinuation
intercepted-SuspendFunction1
createCoroutineUnintercepted4SuspendFunction0
startCoroutineUninterceptedOrReturnSet
minusElementSet
orEmptySet
optimizeReadOnlySet	Set
minusSet
plusSet
plusElementSequence
associateToSequence
maxOfWithOrNullSequence
flattenIterator
asSequenceSequence
dropSequence
filterSequence
firstOrNullSequence
elementAtOrElseSequence
scanIndexedSequence
firstNotNullOfSequence
asIterableSequence
averageSequence
indexOfFirstSequence
plusSequence
runningReduceSequence
toSortedSetSequence
minOfOrNullSequence
filterIndexedToSequence
anySequence
minusSequence
sortedWithSequence
maxSequence
forEachIndexedSequence
minOfWithOrNullSequence
minOfSequence
filterIndexedSequence
countSequence
lastSequence
filterNotNullToSequence
associateWithSequence
toHashSetSequence
filterNotToSequence
dropWhileSequence
groupByToSequence
associateByToSequence
onEachIndexedSequence
associateSequence
mapIndexedNotNullSequence
firstSequence
groupBySequence
chunkedSequence
sortedDescendingSequence
forEachSequence
singleSequence
findLastSequence
maxOrNullSequence
minByOrNullSequence
flatMapSequence
takeSequence
maxWithSequence
onEachSequence
shuffledSequence
associateBySequence
flatMapToSequence
minOfWithSequence
runningFoldSequence
mapIndexedNotNullToSequence
reduceOrNullSequence
filterToSequence
mapSequence
mapIndexedToSequence
reduceSequence
ifEmptySequence
minWithSequence
reduceIndexedSequence
plusElementSequence
toMutableSetSequence
scanSequence
sumOfSequence
toMutableListSequence
singleOrNullSequence
partitionSequence
allSequence
joinToSequence
maxBySequence
maxWithOrNullSequence
maxOfWithSequence
distinctSequence
requireNoNullsSequence
filterIsInstanceToSequence
lastIndexOfSequence
containsSequence
mapIndexedSequence
minBySequence
filterNotSequence
toCollectionSequence
firstNotNullOfOrNullSequence
elementAtSequence
asSequenceSequence
sortedSequence
flatMapIndexedToSequence
reduceIndexedOrNullSequence
mapToSequence
sumByDoubleSequence
filterNotNullSequence
toSetSequence
filterIsInstanceEnumeration
asSequenceSequence
orEmptySequence
lastOrNullSequence
runningFoldIndexedSequence
sortedBySequence
minSequence
toListSequence
noneSequence
maxOfSequence
sumBySequence
elementAtOrNullSequence
maxOfOrNullSequence
sortedByDescendingSequence
associateWithToSequence
findSequence
foldIndexedSequence
joinToStringSequence
unzipSequence
zipWithNextSequence
minWithOrNullSequence
zipSequence
withIndexSequence
windowedSequence
flatMapIndexedSequence
takeWhileSequence
runningReduceIndexedSequence
distinctBySequence
mapNotNullToSequence
mapNotNullSequence
groupingBySequence
indexOfLastSequence
foldSequence
minOrNullSequence
constrainOnceSequence
indexOfSequence
maxByOrNullSequence
minusElementSequence
windowedSequenceMutableMap
getValueMutableMap
setValue!Array
convertToSetForSetOperation$Iterable
convertToSetForSetOperationCollection
safeToConvertToSet(Iterable
convertToSetForSetOperationWith$Sequence
convertToSetForSetOperationGrouping
foldToGrouping
aggregateGrouping
eachCountGrouping
reduceToGrouping
eachCountToGrouping
reduceGrouping
foldGrouping
aggregateToMutableMap
mapValuesInPlaceCollection
toUIntArrayCollection
toUByteArrayCollection
toULongArrayCollection
toUShortArrayMap
getOrDefault	Map
maxOfMap
noneMap
anyMap
maxByOrNullMap
mapNotNullTo	Map
minOfMap
minWithOrNullMap
withDefault
Map
onEachMap
getOrImplicitDefaultMutableMap
putAllMap
optimizeReadOnlyMapMap
containsMap
minOfOrNullMap
allMutableMap
minusAssignMap
plus	Map
toMapMap
asSequenceMap
flatMapToMap
filterToMap
toSingletonMapOrSelfArray
toMapConcurrentMap
getOrPutMap
toPropertiesMap
getOrElseMap
iteratorMap
getOrElseNullableMutableMap
getOrPutMutableMap
iteratorEntry
toPairMap
maxWithOrNullMap
maxOfWithMap
maxOfWithOrNullMap
forEachMap
firstNotNullOfOrNullMap
filterNotToMap
toSortedMapMap
toSingletonMap
Map
filterMap
mapKeysToMap
filterValuesMap
toMutableMapMap
flatMapMap
filterNot	Map
minByMap
asIterableMap
isNotEmptyMap
minByOrNullMutableMap
setMap
filterKeys	Map
minusMap
ifEmptyMap
orEmptySequence
toMapMap
mapKeysMap
minOfWithOrNullMap
maxWithMap
maxOfOrNullMutableMap
withDefaultMap
firstNotNullOfMap
mapNotNull
Map
toListMap
containsValueMutableMap
plusAssignMap
minWithEntry
component1Entry
component2Map
onEachIndexedIterable
toMapMap
minOfWith	Map
countMap
isNullOrEmptyMap
map	Map
mapToMap
getMap
containsKeyMap
mapValuesMap
mapValuesTo	Map
maxByCollection
toByteArrayIterator
forEachList
lastOrNullIterable
mapNotNullList
elementAtOrElseIterable
anyIterable
minWithIterable
filterIsInstanceIterable
minOrNullIterable
maxOfOrNullList
orEmptyIterable
intersectList
reduceRightOrNullIterable
takeWhileIterable
sortedWithIterable
countIterable
maxByOrNullMutableList
removeFirstOrNullCollection
containsAllList
indexOfFirstCollection
toShortArrayMutableCollection
removeIterable
scanList
takeLastCollection
plusElementMutableList
shuffleIterable
filterIndexedIterable
reduceIndexedOrNull
List
sliceIterable
minOfWithIterable
lastOrNullIterable
runningFoldIndexedIterable
elementAtOrElseArray
copyToArrayOfAnyList
component5Iterable
associateList
indexOfLastIterable
minOfOrNullList
component3Iterable
singleIterable
reduceCollection
plusIterable
reduceOrNullIterable
shuffledIterable
mapIterable
minByOrNullEnumeration
iteratorIterable
filterIterable
associateWithToMutableCollection
plusAssignCollection
isNotEmptyIterable
takeIterable
flatMapIndexedList
getOrNullCollection
toMutableListList
binarySearchByIterable
maxOfWithMutableList
sortByIterable
indexOfIterable
partitionIterable
forEachIterable
filterNotNullIterable
mapIndexedList
lastIndexOfList
component1Iterable
indexOfFirstIterable
minByList
dropLastIterable
flatMapIterable
elementAtList
singleArray
asCollectionCollection
randomList
component2List
reduceRightIndexedOrNullIterable
plusList
requireNoNullsIterable
sortedDescendingMutableList
removeLastMutableList
fillIterable
groupByMutableIterable
removeAllIterable
asSequenceIterable
associateByToIterable
sortedMutableList
asReversedIterable
noneIterator
withIndexIterable
reduceIndexedIterable
plusElementIterator
iteratorIterable
associateWithIterable
filterIndexedToMutableList
sortByDescendingIterable
subtractMutableList
sortDescendingList
findLastMutableCollection
minusAssignIterable
filterNotIterable
dropWhileIterable
dropIterable
firstOrNullIterable
minusIterable
groupingByList
reduceRightIndexedIterable
findIterable
firstNotNullOfOrNullIterable
foldIterable
collectionSizeOrNullIterable
zipIterable
asIterableIterable
toMutableSetList
asReversedMutableList
sortIterable
singleOrNullCollection
toLongArrayList
elementAtIterable
filterToIterable
runningReduceCollection
toFloatArrayIterable
scanIndexedIterable
elementAtOrNullIterable
groupByToMutableCollection
retainNothingList
reversePositionIndexIterable
chunkedIterable
indexOfLastIterable
associateToIterable
reversedList
dropLastWhileIterable
toListIterable
joinToStringIterable
toCollectionCollection
toBooleanArrayList
elementAtOrNullCollection
ifEmptyIterable
flatMapIndexedToIterable
onEachIndexedIterable
requireNoNullsList
indexOfMutableList
filterInPlaceList
firstOrNullIterable
unzipIterable
foldIndexed	List
lastIterable
runningReduceIndexedEnumeration
toList Iterable
collectionSizeOrDefaultIterable
averageCollection
toIntArrayIterable
maxOfIterable
toSortedSetIterable
maxWithOrNullIterable
withIndexIterable
lastIndexOfList
reverseElementIndexMutableIterable
filterInPlaceCollection
indicesIterable
filterIsInstanceToIterable
minOfMutableCollection
addAllIterable
toSetList
getOrElseIterable
mapIndexedToIterable
maxCollection
toDoubleArrayIterable
firstIterable
unionIterable
toMutableListMutableList
removeIterable
sortedByDescendingIterable
findLastIterable
flattenIterable
minWithOrNullIterable
sumByDoubleIterable
zipWithNextMutableList
removeLastOrNullMutableList
retainAllIterable
onEachList
binarySearchIterable
lastIterable
maxByIterable
minusElementIterable
mapToIterable
runningFoldIterable
sumOfMutableIterable
retainAllList
singleOrNullMutableList
reverseIterable
firstNotNullOfCollection
toCharArrayMutableCollection
retainAllMutableList
removeFirstIterable
minOfWithOrNullIterable
forEachIndexedCollection
countList
optimizeReadOnlyListIterable
mapIndexedNotNullToIterable
filterNotNullToList
reduceRightList
foldRightIndexedIterable
joinToIterable
allList
component4MutableList
sortWithMutableCollection
removeAll
List
firstIterable
toHashSetIterable
sortedByIterable
sumByIterable
mapNotNullToList
foldRightCollection
randomOrNullIterable
maxOfWithOrNullIterable
maxOrNullIterable
minIterable
windowedIterable
distinctIterable
maxWithIterable
associateByCollection
orEmptyIterable
filterNotToMutableList
removeAllIterable
distinctByIterable
flatMapToList
lastIndexList
takeLastWhileIterable
mapIndexedNotNullArray
resetAtArray
subarrayContentEqualsArray
subarrayContentHashCodeArray
resetRangeArray
subarrayContentToString!Array
copyOfUninitializedElementsComparator
thenComparatorComparator
reversedComparator
thenDescendingComparator
thenComparator
thenByDescendingComparator
thenByByte
inv	Short
invByte
xorByte
and	Short
and	Short
xorShort
orByte
orDuration
toDateTimePeriodDatePeriod
plusDateTimePeriod
plusString
toDatePeriodString
toDateTimePeriodDayOfWeek
isoDayNumberString
toLocalDateLocalDate
atTimeMonth
numberString
toLocalDateTimeClock
todayAtClock
asTimeSourceInstant
atZoneInstant
periodUntilInstant
toStringWithOffsetLocalDate
plusLocalDate
untilLocalDate
periodUntilLocalDate
daysUntilLocalDate
monthsUntilLocalDate
yearsUntilTimeZone
offsetAtLocalDate
atStartOfDayInLocalDateTime
toInstantZoneId
isFixedOffsetInstant
toLocalDateTimeInstant
offsetIn#LocalDateTime
toKotlinLocalDateTimeLocalDate
toJavaLocalDateTimeZone
toJavaZoneId&ZoneOffset
toKotlinFixedOffsetTimeZoneZoneOffset
toKotlinUtcOffsetZoneOffset
toKotlinZoneOffsetZoneId
toKotlinTimeZonePeriod
toKotlinDatePeriodInstant
toJavaInstantLocalDate
toKotlinLocalDateUtcOffset
toJavaZoneOffset!LocalDateTime
toJavaLocalDateTimeDatePeriod
toJavaPeriodInstant
toKotlinInstant$FixedOffsetTimeZone
toJavaZoneOffsetUtcOffset
asTimeZoneLong
clampToIntInstant
daysUntilInstant
yearsUntilInstant
isDistantPastString
toInstantInstant
isDistantFutureInstant
monthsUntilThreadLocal
asContextElementThreadLocal
ensurePresentThreadLocal
isPresentCollection
joinAllCollection
awaitAllResult
toStateCoroutineScope
ensureActiveCoroutineScope
plusCoroutineScope
cancelCoroutineScope
isActiveCompletionHandler
isHandlerOfDispatchedTask
resumeUnconfined%DispatchedTask
runUnconfinedEventLoopInt
isReusableModeDispatchedTask
dispatchDispatchedTask
resumeInt
isCancellableMode!Continuation
resumeWithStackTrace%ExecutorService
asCoroutineDispatcherExecutor
asCoroutineDispatcherCoroutineDispatcher
asExecutorULongArray
minWithUIntArray
reduceRightUByteArray
groupByToUIntArray
filterUIntArray
filterIndexedUByteArray
foldIndexedUShortArray
elementAtULongArray
forEachIndexedULongArray
maxOfOrNullUShortArray
mapUShortArray
maxOfWithULongArray
associateWithUShortArray
forEachIndexedUIntArray
mapToUIntArray
mapUIntArray
indexOfLastUIntArray
sumByDoubleULongArray
dropWhileUIntArray
getOrNullULongArray
copyIntoUIntArray
dropLastWhileULongArray
contentHashCodeUIntArray
flatMapIndexedToUByteArray
copyOfUByteArray
reduceOrNull!UShortArray
sortedArrayDescendingULongArray
scanUIntArray
sumOfUShortArray
contentToStringUShortArray
copyOfRangeUIntArray
indexOfUByteArray
maxWithOrNullUByteArray
runningReduceIndexedUIntArray
lastOrNullULongArray
takeULongArray
toTypedArrayUShortArray
filterUShortArray
minOfULongArray
withIndexUShortArray
reverseUShortArray
takeULongArray
firstUIntArray
sortedArrayULongArray
maxOrNullULongArray
reduceUIntArray
findLastUByteArray
elementAtOrNullULongArray
getOrNullUShortArray
foldRightIndexedUIntArray
lastUShortArray
foldIndexedUByteArray
groupByUIntArray
reduceOrNullUIntArray
reduceULongArray
takeLastWhileUByteArray
zipUByteArray
onEachIndexedUIntArray
plusUShortArray
takeLastWhileUIntArray
mapIndexedToUShortArray
reduceUByteArray
findLastUByteArray
randomOrNullUByteArray
reduceUIntArray
mapIndexedArray
toULongArrayUByteArray
runningReduceUIntArray
withIndexUByteArray
firstUIntArray
toTypedArrayUByteArray
maxOfWithUShortArray
singleOrNull UShortArray
runningReduceIndexedShortArray
asUShortArrayUShortArray
firstUByteArray
filterIndexedULongArray
copyOfULongArray
findUIntArray
sortUShortArray
maxUByteArray
minByOrNullULongArray
foldRightIndexedUByteArray
indexOfULongArray
sliceArrayUShortArray
findLastUShortArray
filterIndexedUIntArray
maxOfWithOrNullUShortArray
forEachUIntArray
reduceIndexedArray
toUShortArrayUShortArray
takeLastUIntArray
runningReduceIndexedULongArray
singleOrNullIntArray
asUIntArrayUShortArray
getOrElseUShortArray
flatMapToUShortArray
findULongArray
lastOrNullUByteArray
noneUIntArray
forEachIndexedUByteArray
mapIndexedToUByteArray
plusUIntArray
zipUShortArray
associateWithUShortArray
toTypedArrayUIntArray
sortedDescendingUIntArray
scanIndexedUShortArray
contentHashCodeULongArray
maxOfWithOrNullUIntArray
copyOfULongArray
minOfWithUByteArray
copyOfRangeUByteArray
minOfUShortArray
component2UByteArray
minWithOrNullULongArray
indexOfFirstULongArray
maxWithUShortArray
reduceOrNullUIntArray
dropWhileUIntArray
minByUByteArray
foldRightIndexedUByteArray
minOfWithOrNullUIntArray
filterNot#ULongArray
reduceRightIndexedOrNullUByteArray
takeLastULongArray
mapIndexedArray
toUByteArrayUShortArray
minOfWithULongArray
reduceOrNullUShortArray
reduceIndexedUShortArray
foldRightUIntArray
toIntArrayUByteArray
allUByteArray
mapToUShortArray
minWithUShortArray
indexOfFirstULongArray
foldRightUShortArray
flatMapUIntArray
sliceUIntArray
onEachIndexedUByteArray
getOrElseUShortArray
maxWithUShortArray
firstOrNullUByteArray
sortedULongArray
minOrNullULongArray
dropLastWhileUShortArray
runningFoldIndexedUIntArray
copyIntoUShortArray
component4UShortArray
component5UIntArray
indexOfFirst UByteArray
sortedArrayDescendingULongArray
onEachULongArray
contentEqualsULongArray
sumByDoubleULongArray
associateWithToUShortArray
component3UByteArray
sumOfUByteArray
component5ULongArray
anyUByteArray
associateWithToUShortArray
onEachUByteArray
minOrNullUShortArray
sliceArrayUByteArray
lastIndexULongArray
reduceRightUShortArray
maxOfOrNullUShortArray
minByUIntArray
associateWithULongArray
lastIndexOfUIntArray
firstOrNullUShortArray
countUShortArray
minByOrNullUByteArray
minOfWithULongArray
asLongArrayUIntArray
getOrElseUShortArray
getOrNullUIntArray
minOrNullUIntArray
shuffleUIntArray
firstULongArray
minOfWithOrNullUShortArray
sliceUShortArray
dropWhileUByteArray
maxByOrNullULongArray
reduceRightIndexedUIntArray
groupByULongArray
copyOfRangeUByteArray
foldULongArray
maxWithOrNullUByteArray
dropUShortArray
groupByToArray
toUIntArrayUIntArray
minOfWithOrNullUByteArray
copyIntoULongArray
runningFoldUByteArray
associateWithULongArray
runningFoldIndexedUIntArray
noneUIntArray
minOfWithUIntArray
binarySearchUIntArray
foldUIntArray
dropUIntArray
associateWithToByteArray
asUByteArrayUByteArray
lastULongArray
flatMapIndexedUShortArray
zipUIntArray
random#UByteArray
reduceRightIndexedOrNullUByteArray
foldRightShortArray
toUShortArrayULongArray
reduceIndexedOrNullUIntArray
lastIndexULongArray
sortUIntArray
foldRightUIntArray
asListUIntArray
takeLastUShortArray
sortUIntArray
reduceRightOrNullUByteArray
shuffleULongArray
filterULongArray
filterNotUShortArray
maxOfWithOrNullUByteArray
maxUShortArray
onEachIndexedUShortArray
mapIndexedUByteArray
reduceIndexedOrNullUShortArray
reduceRightOrNullUShortArray
takeWhileUShortArray
contentEqualsUByteArray
minOfOrNullULongArray
minOfULongArray
filterToULongArray
fillUIntArray
maxOfUByteArray
sortedArrayULongArray
sortedArrayUIntArray
reduceRightIndexedUByteArray
maxOfByteArray
toUByteArrayUShortArray
minOfWithOrNullULongArray
sumULongArray
sortDescendingUIntArray
sliceArrayUByteArray
singleOrNullUByteArray
reversed$UShortArray
reduceRightIndexedOrNullUIntArray
randomOrNull ULongArray
sortedArrayDescendingUShortArray
sortedDescendingUShortArray
mapIndexedToUByteArray
mapUShortArray
fillUShortArray
associateWithToULongArray
maxByOrNullUByteArray
sliceULongArray
randomUShortArray
indicesUIntArray
maxULongArray
reduceIndexedUIntArray
minByOrNullUShortArray
scanIndexedULongArray
mapIndexedToULongArray
forEachULongArray
groupByToULongArray
minUIntArray
component4ULongArray
sliceULongArray
filterNotToUIntArray
minWithUByteArray
sumByDoubleULongArray
asListUIntArray
component3UIntArray
component5UShortArray
indexOfUIntArray
dropLastUShortArray
flatMapIndexedToUByteArray
minUByteArray
filterIndexedToULongArray
runningReduceIndexedUIntArray
component2UShortArray
mapToULongArray
indexOfUByteArray
asListUIntArray
foldIndexedUShortArray
singleUShortArray
noneUShortArray
asListULongArray
flatMapToULongArray
firstOrNullULongArray
onEachIndexedUByteArray
reduceRightULongArray
noneUByteArray
dropLastULongArray
binarySearchULongArray
filterIndexedToUByteArray
flatMapUByteArray
getOrNullUShortArray
indexOfLastUByteArray
sumUByteArray
minWithUByteArray
withIndexUByteArray
reverseUIntArray
contentEqualsUIntArray
anyUShortArray
withIndexUByteArray
contentEqualsUByteArray
reversedArrayULongArray
maxULongArray
allUShortArray
anyULongArray
runningReduceUShortArray
asShortArrayUShortArray
sumByDoubleUByteArray
indexOfLastUIntArray
asIntArrayUShortArray
maxOrNullUByteArray
sumByUShortArray
reduceRightUShortArray
binarySearchUByteArray
maxByULongArray
countUIntArray
reverseUShortArray
dropLastUShortArray
sumOfUIntArray
flatMapIndexedUShortArray
maxOfUIntArray
filterTo"UIntArray
reduceRightIndexedOrNullULongArray
foldULongArray
maxOfWithUIntArray
reversedUShortArray
foldULongArray
reversedUByteArray
fillULongArray
dropUByteArray
reduceRightOrNullUShortArray
flatMapIndexedUShortArray
plusUByteArray
filterToUIntArray
flatMapUShortArray
dropUShortArray
filterToUShortArray
runningFoldUShortArray
sortedUIntArray
minOfOrNullUByteArray
singleULongArray
component5ULongArray
indicesUShortArray
filterIndexedToUByteArray
lastOrNullUIntArray
reversedArrayUByteArray
mapIndexedUIntArray
onEachULongArray
plusULongArray
component4UIntArray
minOfUShortArray
sumByUShortArray
lastIndexOfUByteArray
sliceArrayULongArray
maxOfULongArray
sumByUByteArray
runningFoldUIntArray
reduceIndexedOrNullUShortArray
reversedArrayUIntArray
takeUShortArray
filterNotToULongArray
minOfOrNullUShortArray
sortDescendingUByteArray
sortDescendingULongArray
foldIndexedUIntArray
runningFoldIndexedUShortArray
lastIndexULongArray
flatMapIndexedToULongArray
lastIndexUByteArray
sortedDescendingUIntArray
sortDescendingUByteArray
lastIndexOfULongArray
zipUIntArray
singleUByteArray
filterNotUIntArray
fillUIntArray
foldRightIndexedULongArray
singleUByteArray
takeULongArray
sortedDescendingULongArray
maxByUByteArray
dropWhileUByteArray
countULongArray
dropLastUByteArray
elementAtOrElseUIntArray
minUIntArray
runningReduceUByteArray
maxOfWithOrNullULongArray
getOrElseUByteArray
flatMapIndexedToUByteArray
component3UShortArray
minULongArray
sumOfUShortArray
maxByOrNullUByteArray
component2ULongArray
indexOfLastUIntArray
maxByUByteArray
takeWhileLongArray
asULongArrayUShortArray
sumUByteArray
scanUByteArray
takeLastWhileUByteArray
randomUByteArray
reduceIndexedUByteArray
filterNotToUShortArray
allUShortArray
lastOrNullUByteArray
component4UIntArray
elementAtUShortArray
copyIntoULongArray
component1UShortArray
maxByULongArray
contentToStringUByteArray
component1ULongArray
takeWhileUIntArray
allULongArray
filterIndexedUShortArray
randomUByteArray
onEachULongArray
toLongArrayUByteArray
flatMapIndexedUIntArray
minWithOrNullUByteArray
runningFoldIndexedUByteArray
findUIntArray
maxOfWithULongArray
sortedULongArray
component3ULongArray
elementAtOrElseUShortArray
filterNotUShortArray
component1IntArray
toUIntArrayULongArray
reduceRightOrNullUByteArray
toTypedArrayUByteArray
toByteArrayULongArray
scanIndexedULongArray
findLastUShortArray
groupByUByteArray
reduceRightIndexedUByteArray
forEachUShortArray
reduceRightIndexedUIntArray
maxWithUByteArray
sortUShortArray
minWithOrNullUIntArray
maxOfOrNullUIntArray
sortedArrayDescendingUByteArray
asByteArrayUByteArray
elementAtUByteArray
forEachIndexedUIntArray
sumULongArray
mapToUIntArray
filterNotToUShortArray
runningReduceUIntArray
countUIntArray
takeWhileUByteArray
maxOfOrNullUByteArray
maxWithULongArray
mapUShortArray
shuffleUShortArray
minOfOrNullUIntArray
forEachUShortArray
maxWithOrNullUIntArray
contentToStringULongArray
elementAtOrNullUShortArray
dropLastWhileUShortArray
copyOfUIntArray
contentHashCodeULongArray
randomOrNullULongArray
minWithOrNullUIntArray
maxOrNullUIntArray
sortedUShortArray
lastULongArray
minByOrNullULongArray
shuffleUIntArray
findUByteArray
filterUIntArray
maxWithOrNullUIntArray
filterIndexedToUIntArray
indicesUShortArray
minOrNullULongArray
flatMapUShortArray
randomOrNullUShortArray
elementAtOrElseUIntArray
elementAtOrElseUIntArray
takeLastWhileUShortArray
elementAtOrNullUByteArray
indexOfFirstULongArray
lastUIntArray
singleOrNullUShortArray
reduceIndexedOrNullLongArray
toULongArrayUByteArray
firstOrNullUIntArray
maxByOrNullUByteArray
indicesUIntArray
sumByUByteArray
binarySearchULongArray
component2UIntArray
copyOfRangeUByteArray
maxOrNullUIntArray
groupByToUByteArray
flatMapToUByteArray
scanIndexedUIntArray
runningFoldUShortArray
reversedUIntArray
component1ULongArray
reversedArrayUIntArray
elementAtOrNullULongArray
takeLastUByteArray
dropLastWhileUByteArray
contentToStringUByteArray
anyUIntArray
flatMapToUByteArray
contentHashCodeUShortArray
sortedArrayULongArray
elementAtUIntArray
scanUShortArray
toShortArrayULongArray
minByUIntArray
lastIndexOfUShortArray
scanULongArray
reverseULongArray
groupByUByteArray
minBy,CancellableContinuation
removeOnCancellation-CancellableContinuation
disposeOnCancellation)Continuation
updateUndispatchedCompletionCoroutineContext
coroutineName"CoroutineScope
newCoroutineContext*CoroutineStackFrame
undispatchedCompletionCoroutineScope
asyncCoroutineScope
launchCoroutineDispatcher
invokeAny
hexAddressAny
classSimpleNameContinuation
toDebugStringAny
unboxStateAny
boxIncompleteCoroutineContext
delayDuration
toDelayMillisSchedulerTaskContext
afterTaskSchedulerTask
taskContext Throwable
addSuppressedThrowableJob
disposeOnCompletionJob
cancelChildrenCoroutineContext
ensureActive
Job
cancel2CancellableContinuation
cancelFutureOnCancellationCoroutineContext
isActiveCoroutineContext
cancelThrowable
orCancellationJob
cancelFutureOnCompletionJob
ensureActiveCoroutineContext
jobCoroutineContext
cancelChildren CompletableDeferred
completeWithCancelHandlerBase
asHandlerCompletionHandler
invokeItCompletionHandlerBase
asHandlerDoubleArray
indexOfFirstByteArray
associateToFloatArray
forEachLongArray
associateArray
maxWithByteArray
sumOfFloatArray
reversedShortArray
maxByByteArray
toMutableListShortArray
maxOrNullArray
orEmptyBooleanArray
dropByteArray
scanIndexedByteArray
maxWithOrNullCharArray
isEmptyDoubleArray
getOrElseBooleanArray
foldByteArray
asSequenceFloatArray
runningFoldIndexedShortArray
sliceIntArray
partitionLongArray
intersectShortArray
joinToArray
copyOfRangeImplByteArray
binarySearchCharArray
binarySearchArray
copyOfRangeDoubleArray
sortByteArray
mapToFloatArray
filterToIntArray
firstArray
copyIntoArray
firstNotNullOfOrNullArray
elementAtOrNullIntArray
minByOrNullDoubleArray
maxOfOrNullCharArray
lastIndexByteArray
joinToStringCharArray
joinToStringDoubleArray
subtractLongArray
minOfOrNullFloatArray
maxByOrNullLongArray
associateWithBooleanArray
foldIndexedByteArray
flatMapFloatArray
findShortArray
asListByteArray
getOrElseDoubleArray
filterIndexedToShortArray
asIterableByteArray
indexOfLastBooleanArray
takeLastWhileCharArray
minOrNullArray
reduceIndexedCharArray
maxByteArray
flatMapIndexedIntArray
contentEqualsCharArray
allCharArray
dropLastWhileArray
intersectBooleanArray
unionByteArray
partitionBooleanArray
maxOfWithOrNullLongArray
toSet
Array
noneShortArray
containsShortArray
sumByBooleanArray
randomIntArray
associateBy!Array
contentDeepToStringInternalIntArray
copyOfArray
firstLongArray
minOrNullIntArray
distinctIntArray
firstOrNullCharArray
associateLongArray
filterIndexedToArray
containsFloatArray
lastFloatArray
groupByTo
Array
dropLongArray
binarySearch
Array
foldLongArray
asIterableFloatArray
toTypedArrayBooleanArray
flatMapIntArray
flatMapFloatArray
contentToStringByteArray
component1ShortArray
flatMapIndexedDoubleArray
lastIndexOfLongArray
withIndexShortArray
takeCharArray
sumOfCharArray
toSortedSetBooleanArray
minOfOrNullLongArray
joinToStringFloatArray
subtractShortArray
fillByteArray
filterByteArray
filterNotBooleanArray
filterIndexedByteArray
onEachIndexedDoubleArray
runningFoldArray
contentHashCodeByteArray
sortedArrayFloatArray
singleOrNullIntArray
groupByToCharArray
runningReduceIndexedDoubleArray
minByteArray
sortDescendingCharArray
toMutableListArray
mapIndexedCharArray
minOfOrNullArray
lastIndex!BooleanArray
runningReduceIndexedByteArray
runningReduceShortArray
onEachIndexed	Array
anyIntArray
forEachIndexedBooleanArray
minOfCharArray
filterDoubleArray
flatMapIndexedToShortArray
sumIntArray
joinToStringFloatArray
toCollectionIntArray
sortedArrayDescendingByteArray
sumByArray
toBooleanArrayArray
takeLastWhileArray
joinToStringDoubleArray
takeIntArray
sortedArray
shuffleBooleanArray
reduceIndexedFloatArray
scanDoubleArray
forEachShortArray
runningReduceDoubleArray
reverseByteArray
component4BooleanArray
elementAtLongArray
plusFloatArray
averageArray
contentDeepHashCodeArray
binarySearchDoubleArray
flatMapLongArray
findLastShortArray
copyOfRangeImplCharArray
copyIntoFloatArray
reduceOrNullIntArray
binarySearchArray
withIndexArray
associateDoubleArray
minOfWithCharArray
intersectFloatArray
asListLongArray
lastIndexCharArray
filterNotToArray
forEachIndexedDoubleArray
joinToCharArray
indexOfLongArray
findArray
filterCharArray
foldRightIndexedFloatArray
groupByFloatArray
reverseBooleanArray
minByShortArray
countShortArray
toMutableListDoubleArray
associateByToByteArray
sortedWithByteArray
maxOfFloatArray
dropLastBooleanArray
dropWhileByteArray
sliceIntArray
copyIntoCharArray
foldIndexedByteArray
plusShortArray
mapToShortArray
associateWithFloatArray
toListShortArray
onEachBooleanArray
reduceDoubleArray
containsShortArray
indexOfFirstDoubleArray
asListFloatArray
lastIndexCharArray
minOfCharArray
runningReduceBooleanArray
distinctByteArray
elementAtOrElseShortArray
distinctIntArray
reverseByteArray
minByDoubleArray
copyOfRangeDoubleArray
fillShortArray
reverseDoubleArray
reduceIndexedOrNullIntArray
singleOrNullCharArray
contentToStringFloatArray
intersectByteArray
maxByByteArray
contentToStringBooleanArray
sumOfByteArray
toListFloatArray
filterNotLongArray
singleFloatArray
indicesLongArray
toSortedSetShortArray
sumOfArray
sortedDescendingByteArray
firstOrNullShortArray
randomFloatArray
flatMapDoubleArray
reversedArrayFloatArray
asIterableShortArray
maxOfArray
sortedArrayDescendingArray
minWithLongArray
filterCharArray
mapIndexedBooleanArray
forEachIndexedDoubleArray
maxOfWithOrNullShortArray
sortDoubleArray
forEachIndexedCharArray
reduceRightIndexedIntArray
countBooleanArray
filterIndexedToDoubleArray
minWithOrNullByteArray
component3CharArray
associateWithToLongArray
firstBooleanArray
joinToStringFloatArray
plusCharArray
minWithFloatArray
minOrNullArray
firstOrNullDoubleArray
anyBooleanArray
withIndexCharArray
unionArray
countBooleanArray
component5Array
toListBooleanArray
sortedByDescendingDoubleArray
filterIndexedBooleanArray
isNotEmptyBooleanArray
filterNotToByteArray
distinctShortArray
flatMapBooleanArray
getOrNull FloatArray
sortedArrayDescendingIntArray
indexOfFloatArray
minWithOrNullArray
maxByLongArray
sumByDoubleBooleanArray
foldRightShortArray
scanIndexedCharArray
forEachIndexedArray
sortWithCharArray
dropLongArray
isEmptyFloatArray
toSetByteArray
foldRightIndexedByteArray
minOfWithFloatArray
sortedArrayBooleanArray
scanArray
sortByDescendingIntArray
lastIndexDoubleArray
indicesCharArray
foldLongArray
runningFoldIndexedIntArray
minOfWithArray
filterIndexedLongArray
lastLongArray
sumBooleanArray
distinctByShortArray
indexOfLastBooleanArray
reverseByteArray
lastIndexByteArray
countDoubleArray
filterNotIntArray
copyOfRangeLongArray
reduceRightArray
minByOrNullBooleanArray
maxByOrNullCharArray
reversedArrayBooleanArray
groupByLongArray
indexOfFloatArray
mapIndexedToArray
sortedByteArray
groupByLongArray
sortedByFloatArray
reversedArrayFloatArray
minOfOrNullByteArray
minByOrNullBooleanArray
maxOfBooleanArray
zipCharArray
associateWithBooleanArray
anyShortArray
runningFoldIndexedArray
reduceRightIndexedCharArray
onEachArray
minOrNullIntArray
maxByByteArray
averageIntArray
asIterableFloatArray
associateToDoubleArray
dropLast
Array
scanFloatArray
toMutableSetByteArray
singleOrNullByteArray
sortedCharArray
singleShortArray
partitionBooleanArray
indexOfFirstFloatArray
associateWithCharArray
minFloatArray
elementAtOrElseLongArray
allDoubleArray
randomFloatArray
partitionArray
unzipCharArray
groupByToDoubleArray
minByFloatArray
foldRightIndexedByteArray
component2BooleanArray
contentEqualsShortArray
filterNotLongArray
elementAtOrNullIntArray
getOrElseByteArray
reverseLongArray
reversedArrayByteArray
dropLastWhileLongArray
partitionDoubleArray
partitionCharArray
noneShortArray
firstOrNullArray
minWithOrNullFloatArray
containsArray
sumByIntArray
sliceArrayBooleanArray
maxByByteArray
contentHashCodeShortArray
flatMapToCharArray
scanBooleanArray
takeWhileIntArray
toMutableListBooleanArray
sumByDoubleFloatArray
dropLastWhileIntArray
sortedArrayArray
onEachDoubleArray
minOrNullShortArray
zipBooleanArray
sliceFloatArray
maxOrNullBooleanArray
intersectFloatArray
withIndexDoubleArray
takeWhileBooleanArray
takeLastByteArray
sortedArrayDescendingLongArray
sortDescendingDoubleArray
dropCharArray
singleOrNullDoubleArray
maxLongArray
onEachDoubleArray
foldBooleanArray
lastBooleanArray
reduceRightDoubleArray
intersectIntArray
sortDescendingBooleanArray
indexOfLastIntArray
randomOrNullDoubleArray
associateShortArray
forEachIndexedByteArray
minOrNullFloatArray
filterIndexedLongArray
maxByOrNullArray
averageArray
associateByToArray
associateToLongArray
minWithCharArray
sortedDescendingBooleanArray
associateIntArray
associateFloatArray
forEachIndexedShortArray
groupByToDoubleArray
takeLastWhileIntArray
reduceRightIndexedShortArray
maxArray
groupByLongArray
sortedArrayIntArray
zipDoubleArray
sortedByDescendingBooleanArray
minOfWithOrNullDoubleArray
sumOfCharArray
reduceIndexedOrNullIntArray
lastIndexOfIntArray
averageBooleanArray
indicesFloatArray
countCharArray
foldRightShortArray
joinToStringLongArray
runningFoldBooleanArray
onEachByteArray
takeLastIntArray
sliceFloatArray
binarySearchShortArray
mapIndexedDoubleArray
sortedShortArray
plusShortArray
minByOrNullBooleanArray
copyOfShortArray
isNotEmptyCharArray
getOrElseIntArray
associateWithToShortArray
maxOfWithCharArray
flatMapIntArray
asSequenceCharArray
asIterableCharArray
flatMapIndexedToFloatArray
firstOrNullShortArray
minOfOrNullLongArray
getOrElseLongArray
distinctBooleanArray
runningFoldIndexedIntArray
takeShortArray
allArray
randomOrNullCharArray
fillBooleanArray
find#ShortArray
reduceRightIndexedOrNullShortArray
indicesDoubleArray
indexOfIntArray
intersectShortArray
reversedArrayLongArray
reverseByteArray
sortLongArray
reduceIndexedOrNullIntArray
onEachIndexedShortArray
minByFloatArray
filterNotTo
Array
findArray
flatMapToDoubleArray
firstOrNullCharArray
sortedByDescendingFloatArray
toMutableListDoubleArray
foldRightIndexedCharArray
sliceLongArray
takeCharArray
reversedIntArray
maxOrNullIntArray
contains
Array
fillShortArray
lastOrNullArray
mapToLongArray
foldRightFloatArray
associateByCharArray
elementAtOrNullDoubleArray
copyOfLongArray
mapIndexedBooleanArray
toSortedSetLongArray
toListIntArray
runningReduceLongArray
reduceRightOrNullShortArray
asSequenceCharArray
elementAtByteArray
foldIndexedIntArray
mapFloatArray
noneCharArray
reduceRightOrNullArray
minOfWithArray
filterNotNullToArray
forEachFloatArray
reduceLongArray
reduceRightIndexedCharArray
getOrNullIntArray
mapToShortArray
groupByDoubleArray
runningFoldIndexedShortArray
toHashSetArray
toFloatArrayShortArray
elementAtOrElseArray
mapIndexedNotNullToFloatArray
minArray
filterIndexedToFloatArray
findLastShortArray
minOfIntArray
takeWhileByteArray
indicesByteArray
containsIntArray
groupByByteArray
isEmptyCharArray
indexOfFirstIntArray
lastIntArray
forEachCharArray
dropWhileIntArray
toSortedSetIntArray
flatMapIndexedToLongArray
dropLongArray
asSequenceCharArray
contentHashCodeShortArray
associateByFloatArray
mapIndexedIntArray
component3ShortArray
filterToLongArray
indexOfFirstIntArray
minWithOrNullShortArray
filterShortArray
averageIntArray
sumByDoubleArray
runningFoldIndexedBooleanArray
contains"LongArray
reduceRightIndexedOrNullByteArray
sortedByDescendingShortArray
reduceRightIndexedLongArray
reduceOrNullFloatArray
minOfWithShortArray
filterNotToByteArray
forEachIndexedIntArray
sortedDescendingFloatArray
associateIntArray
filterIndexedByteArray
takeArray
filterIsInstanceToIntArray
reduceRightIntArray
copyOfRangeImplByteArray
dropWhileIntArray
sortLongArray
lastOrNullDoubleArray
sumByDoubleArray
singleIntArray
minOfWithOrNullBooleanArray
lastOrNullBooleanArray
component4ShortArray
reduceArray
singleOrNullArray
reversedArray
maxOfWithCharArray
maxByLongArray
foldBooleanArray
isEmptyCharArray
flatMapIndexedBooleanArray
mapToByteArray
maxByOrNullLongArray
unionByteArray
sliceArrayCharArray
lastOrNullFloatArray
reduceRightOrNull%BooleanArray
reduceRightIndexedOrNullShortArray
distinctByFloatArray
indexOfLastDoubleArray
filterToBooleanArray
reversedArrayFloatArray
sumByShortArray
minOfWithLongArray
zipIntArray
anyDoubleArray
groupByToBooleanArray
sortedWithFloatArray
asSequenceArray
joinToLongArray
copyIntoBooleanArray
toHashSetFloatArray
onEachIndexedByteArray
unionBooleanArray
groupByToFloatArray
associateByToArray
toHashSetArray
asListLongArray
dropWhileLongArray
randomOrNullCharArray
sortedWithArray
filterNotToIntArray
reduceIndexedFloatArray
shuffleIntArray
toHashSetShortArray
elementAtOrNullLongArray
maxBooleanArray
filterIntArray
singleLongArray
minOfWithOrNullBooleanArray
maxWithOrNullIntArray
reduceLongArray
copyOfRangeFloatArray
minOfFloatArray
zipFloatArray
takeWhileLongArray
scanIndexedArray
reverseBooleanArray
noneDoubleArray
maxOrNullCharArray
reverseByteArray
sumByteArray
singleCharArray
isNotEmptyBooleanArray
asListCharArray
elementAtOrElseDoubleArray
toHashSetDoubleArray
reduceShortArray
foldShortArray
dropCharArray
containsBooleanArray
firstOrNullDoubleArray
withIndexLongArray
reversedFloatArray
maxOfWithOrNullLongArray
maxOfWithOrNullBooleanArray
joinToCharArray
lastIndexOfArray
associateByIntArray
associateByToCharArray
associateToLongArray
getOrNullByteArray
randomOrNullArray
contentEqualsByteArray
maxOfOrNullShortArray
takeWhileArray
plusElementLongArray
isNotEmptyArray
foldRightIndexedCharArray
mapToShortArray
anyLongArray
maxWithOrNullLongArray
component5FloatArray
minOfWithOrNullBooleanArray
copyOfRangeImplFloatArray
associateWithToIntArray
allShortArray
contentToStringLongArray
copyOfRangeImplIntArray
indexOfFirstFloatArray
fillArray
sliceArray
maxOrNullIntArray
indexOfLastCharArray
distinctShortArray
copyOfArray
filterIsInstanceIntArray
dropLastWhileLongArray
foldIndexedFloatArray
reduceIndexedFloatArray
indexOfFloatArray
randomOrNullArray
flatMapBooleanArray
dropLastFloatArray
runningReduceIndexedDoubleArray
minOfArray
groupByToCharArray
runningFoldIndexedArray
onEachIndexedShortArray
component5BooleanArray
flatMapIndexedToCharArray
maxWithOrNullShortArray
toMutableSet
Array
lastShortArray
contentHashCodeBooleanArray
maxOfWithCharArray
takeLastWhileShortArray
associateToArray
lastIndexOfLongArray
distinctByArray
sumOfShortArray
mapIndexedToShortArray
filterIndexedToByteArray
dropLastFloatArray
copyIntoShortArray
subtractByteArray
indexOfFirstArray
takeWhileShortArray
sortedByteArray
runningFoldIndexedIntArray
sumOfFloatArray
anyLongArray
flatMapLongArray
maxByByteArray
toStringBooleanArray
component2BooleanArray
flatMapToArray
distinctIntArray
minByteArray
firstDoubleArray
flatMapIndexedArray
sortByBooleanArray
associateWithToLongArray
elementAtByteArray
runningFoldCharArray
toListShortArray
takeLastWhileLongArray
sortCharArray
plusDoubleArray
sumByDoubleIntArray
findIntArray
maxOfWithIntArray
component1ShortArray
maxWithOrNullDoubleArray
toSortedSetLongArray
forEachIndexedArray
toMutableListDoubleArray
sliceArrayLongArray
maxOfOrNullByteArray
copyOfRangeFloatArray
singleShortArray
isEmptyArray
contentDeepToStringImplLongArray
associateWithToDoubleArray
reduceRightDoubleArray
maxByOrNullCharArray
filterIndexedByteArray
randomFloatArray
maxOfOrNullIntArray
elementAtBooleanArray
randomOrNullBooleanArray
reversedIntArray
maxOfWithOrNullCharArray
asSequenceBooleanArray
getOrElseIntArray
runningReduceIndexedIntArray
maxWithByteArray
filterIndexedToCharArray
randomDoubleArray
lastLongArray
takeWhileArray
associateWithIntArray
unionCharArray
indicesIntArray
dropLastDoubleArray
findShortArray
singleShortArray
lastIndexOfArray
minOfByteArray
reversedLongArray
randomShortArray
maxWithCharArray
groupByLongArray
associateByByteArray
toSortedSetLongArray
firstOrNullBooleanArray
reduceOrNullFloatArray
flatMapToShortArray
runningFoldIntArray
reversedArrayFloatArray
sortArray
randomCharArray
takeWhileShortArray
reduceRightShortArray
takeLastFloatArray
component3Array
contentDeepEqualsFloatArray
copyOfRangeImplDoubleArray
sortedWithShortArray
toCollectionShortArray
sumByDoubleLongArray
mapToArray
unionByteArray
maxOfWithIntArray
shuffleFloatArray
toHashSetFloatArray
sortedArray
reduceRightIndexedOrNullDoubleArray
component4ByteArray
dropFloatArray
component1LongArray
minByOrNullFloatArray
sumOfShortArray
withIndexLongArray
takeLastWhileFloatArray
component5ShortArray
singleOrNullIntArray
onEachBooleanArray
asIterableBooleanArray
filterTo"ByteArray
reduceRightIndexedOrNullBooleanArray
minWithDoubleArray
component2Array
ifEmptyLongArray
sumOfByteArray
elementAtDoubleArray
sortedArrayArray
asSequenceFloatArray
flatMapIndexedByteArray
foldLongArray
groupByCharArray
distinctByLongArray
indicesLongArray
sortedArrayDescending#FloatArray
reduceRightIndexedOrNullDoubleArray
foldRightLongArray
averageBooleanArray
filterNotByteArray
maxWithBooleanArray
maxWithIntArray
filterNotToDoubleArray
sumShortArray
minWithOrNullIntArray
flatMapToByteArray
subtractDoubleArray
shuffleCharArray
component1CharArray
associateByLongArray
noneByteArray
noneDoubleArray
singleOrNullShortArray
findLastFloatArray
runningFoldCharArray
reduceFloatArray
contentHashCodeFloatArray
mapTo!IntArray
reduceRightIndexedOrNull DoubleArray
runningReduceIndexedArray
indexOfFirstFloatArray
maxOfWithDoubleArray
toTypedArrayLongArray
maxOrNullShortArray
associateIntArray
reversedCharArray
component2BooleanArray
firstByteArray
sumByDoubleDoubleArray
maxOfWithByteArray
filterIndexedShortArray
reduceIndexedOrNullIntArray
minOfShortArray
maxOfOrNullShortArray
toTypedArrayFloatArray
minWithByteArray
reduceShortArray
maxOfWithOrNullArray
contentToStringArray
distinctByIntArray
foldRightIndexedLongArray
minByShortArray
filterIndexedBooleanArray
mapIndexedToShortArray
sortedWithByteArray
reduceRightBooleanArray
allShortArray
shuffleShortArray
reduceOrNullIntArray
minOfOrNullDoubleArray
indexOfLastFloatArray
allArray
minOfOrNullShortArray
minArray
dropLastWhileShortArray
component4ByteArray
mapIndexedArray
component1DoubleArray
flatMapToArray
flatMapIndexedToDoubleArray
sortedDescendingFloatArray
lastIndexOfFloatArray
component4DoubleArray
minWithCharArray
filterIndexedToIntArray
foldIndexedByteArray
toSetArray
sliceArrayArray
mapNotNullToBooleanArray
associateWithIntArray
minByBooleanArray
partitionFloatArray
copyOfRangeDoubleArray
component3Collection
toTypedArrayFloatArray
reduceRightIndexedShortArray
foldRightIndexedDoubleArray
sortedByCharArray
zipIntArray
minWithFloatArray
contentEqualsByteArray
minWithOrNullArray
minByLongArray
anyArray
flattenFloatArray
sortedWithArray
reduceArray
component5Array
foldIndexedFloatArray
distinctArray
toByteArrayArray
reversedArrayFloatArray
copyOfLongArray
sortedWithDoubleArray
maxByArray
groupingByCharArray
flatMapToArray
reduceIndexedOrNullCharArray
maxOrNullDoubleArray
scanIndexedShortArray
toSetDoubleArray
sliceBooleanArray
toSetByteArray
takeLastWhileFloatArray
sortedByDescendingByteArray
reduceIndexedCharArray
dropLastByteArray
runningReduceIndexedFloatArray
reduceRightBooleanArray
fillArray
contentDeepToStringFloatArray
runningReduceShortArray
reduceRightOrNullDoubleArray
maxWithOrNullCharArray
indexOfLastFloatArray
maxArray
mapNotNullCharArray
anyCharArray
findLastByteArray
getOrNullDoubleArray
plusShortArray
component2DoubleArray
findLastShortArray
component1FloatArray
indexOfFirstLongArray
joinToLongArray
asListBooleanArray
toMutableSetDoubleArray
takeLastCharArray
sliceArrayByteArray
minOfOrNullBooleanArray
contentHashCodeCharArray
minOfWithOrNullShortArray
findIntArray
foldRightLongArray
component1
Array
plusShortArray
component3Array
component2CharArray
forEachCharArray
minWithOrNullShortArray
minOrNullLongArray
minArray
dropLastBooleanArray
maxOfOrNullFloatArray
maxOfByteArray
associateByToCharArray
component5ShortArray
runningReduceIndexedDoubleArray
dropLastWhileCharArray
component3LongArray
contentToStringLongArray
sliceDoubleArray
toCollectionIntArray
dropWhileBooleanArray
toMutableListBooleanArray
sliceArrayBooleanArray
plusCharArray
maxOfWithShortArray
dropLastDoubleArray
countLongArray
component3Array
sortedArrayWith ShortArray
sortedArrayDescendingDoubleArray
binarySearchArray
sortDescendingIntArray
filterIntArray
associateWithIntArray
mapIndexedIntArray
component4FloatArray
sliceBooleanArray
toCollectionLongArray
minOfCharArray
firstLongArray
forEach	Array
maxByteArray
copyOfArray
component4LongArray
associateToArray
filterNotDoubleArray
joinToStringCharArray
minByOrNullLongArray
maxOfIntArray
takeLastCharArray
copyOfRangeImplLongArray
filterNotFloatArray
distinctByShortArray
sortedByDoubleArray
scanFloatArray
minByBooleanArray
elementAtOrNullArray
toShortArrayDoubleArray
runningReduceByteArray
foldRightArray
requireNoNullsArray
findLastBooleanArray
associateByByteArray
reduceOrNullLongArray
minWithOrNullArray
isNullOrEmptyArray
takeLastFloatArray
sortDescendingArray
reduceRightOrNullDoubleArray
foldIndexedLongArray
containsCharArray
toHashSetDoubleArray
contentToStringBooleanArray
subtractIntArray
distinctByArray
copyOfArray
runningReduceArray
sortedByDescendingDoubleArray
contentHashCodeByteArray
scanFloatArray
mapCharArray
scanIndexedCharArray
takeFloatArray
reduceIndexedOrNullLongArray
foldRightIndexedCharArray
takeLastDoubleArray
filterBooleanArray
runningFoldLongArray
filterIndexedByteArray
mapArray
toIntArrayCharArray
component4IntArray
toListBooleanArray
shuffleByteArray
shuffleBooleanArray
copyOfRangeIntArray
noneBooleanArray
toTypedArrayArray
elementAtOrElseFloatArray
sumByDoubleCharArray
firstOrNullByteArray
filterToIntArray
findLastArray
flatMapIndexedShortArray
scanDoubleArray
randomOrNull BooleanArray
reduceIndexedOrNullBooleanArray
minOfWithArray
isEmptyFloatArray
toSortedSetBooleanArray
elementAtOrElseFloatArray
maxWithByteArray
maxDoubleArray
maxWithCharArray
maxOfWithOrNullIntArray
component5LongArray
elementAtOrElseIntArray
getOrNullLongArray
mapIndexedToIntArray
withIndexArray
component3FloatArray
sortedByDoubleArray
reduceRightOrNullCharArray
randomOrNullShortArray
randomOrNullBooleanArray
onEachIndexedBooleanArray
lastIndexOfFloatArray
elementAtOrNullArray
indexOfLastIntArray
maxByOrNullIntArray
dropIntArray
foldArray
indexOfLongArray
component2LongArray
toMutableSetDoubleArray
component1BooleanArray
foldRightIndexedShortArray
intersectBooleanArray
lastIndexCharArray
joinToDoubleArray
elementAtOrNullIntArray
sumByLongArray
associateByToCharArray
toMutableSetByteArray
findDoubleArray
onEachArray
contentDeepEqualsImplIntArray
maxWithOrNullIntArray
scanFloatArray
lastOrNull	Array
mapBooleanArray
reduceRightOrNullArray
mapIndexedNotNullByteArray
toCollectionCharArray
sortedBooleanArray
reduceRightIndexedByteArray
anyIntArray
elementAtOrElseArray
elementAtDoubleArray
mapToByteArray
mapIndexedToArray
toLongArrayDoubleArray
copyOfRangeImplShortArray
contentEqualsDoubleArray
zipIntArray
runningFoldIndexedCharArray
minOfWithLongArray
dropLastCharArray
mapIndexedToDoubleArray
toSetByteArray
intersectFloatArray
takeLastArray
partitionArray
filterNotNullCharArray
shuffleShortArray
reversedArray
sumByDoubleIntArray
runningFoldBooleanArray
contentToStringFloatArray
joinToStringByteArray
takeWhileDoubleArray
reduceIndexedByteArray
lastShortArray
flatMapIndexedToCharArray
subtractArray
maxOfFloatArray
dropWhileLongArray
singleOrNullArray
reduceOrNullByteArray
copyOfRangeImplIntArray
isEmptyIntArray
reduceOrNullLongArray
onEachIndexedFloatArray
isNotEmptyArray
indicesShortArray
foldIndexedByteArray
elementAtOrNullCharArray
toCollectionByteArray
asIterableBooleanArray
findLastShortArray
binarySearchDoubleArray
mapIndexedDoubleArray
filterNotToShortArray
toListByteArray
reversedArrayLongArray
toTypedArrayLongArray
contentHashCodeBooleanArray
copyIntoIntArray
sortedByLongArray
lastIndexOfByteArray
onEachIntArray
maxByteArray
toTypedArrayArray
runningReduceIndexedDoubleArray
lastOrNullArray
scanIndexedBooleanArray
countFloatArray
filterIndexedToCharArray
maxWithIntArray
flatMapIndexedDoubleArray
associateByCharArray
countLongArray
runningReduceFloatArray
sliceArrayByteArray
contentEqualsArray
firstNotNullOfByteArray
associate
Array
sortShortArray
sortedDescendingLongArray
copyOfIntArray
maxOfOrNullIntArray
asListShortArray
forEachBooleanArray
indexOfByteArray
indexOfByteArray
sortedBy
Array
takeShortArray
associateWithToShortArray
copyOfRangeLongArray
filterToDoubleArray
mapShortArray
minOfWithOrNullShortArray
firstCharArray
lastDoubleArray
copyIntoFloatArray
getOrNullLongArray
shuffleFloatArray
maxByBooleanArray
toListIntArray
randomIntArray
fillCharArray
sortedArrayDescendingLongArray
flatMapToCharArray
reduceOrNullDoubleArray
associateWithToByteArray
allBooleanArray
mapIndexedIntArray
reduceRightOrNullDoubleArray
groupByBooleanArray
scanIndexedByteArray
reduceRightIndexedShortArray
mapDoubleArray
noneLongArray
maxOfWithDoubleArray
averageIntArray
associateToLongArray
toCollectionCharArray
partitionByteArray
withIndexArray
toCollectionLongArray
flatMapIndexedCharArray
sumByFloatArray
sumDoubleArray
minByOrNullFloatArray
filterFloatArray
foldRightArray
foldRightCharArray
filterNotByteArray
fillFloatArray
dropArray
toSortedSetFloatArray
foldDoubleArray
elementAtOrElseIntArray
isNotEmptyLongArray
mapByteArray
toMutableSetDoubleArray
maxOfArray
subtractCharArray
contentEqualsIntArray
minOrNull	Array
zipBooleanArray
takeDoubleArray
minOfWithOrNullDoubleArray
distinctShortArray
sortedByDescendingArray
reduceRightDoubleArray
reduceOrNullArray
maxWithOrNullCharArray
sortDoubleArray
toListIntArray
sortedByDescendingArray
getOrElseCharArray
toTypedArrayBooleanArray
associateByToCharArray
asListArray
asIterableLongArray
indexOfLastDoubleArray
isNotEmptyBooleanArray
sortedByBooleanArray
associateToArray
toDoubleArrayLongArray
sortedByDescending!DoubleArray
sortedArrayDescendingCharArray
maxOfOrNullByteArray
reduceIndexedOrNullFloatArray
randomLongArray
minOfWithDoubleArray
associateWithDoubleArray
lastIndexLongArray
component4FloatArray
minByOrNullCharArray
onEachIndexedBooleanArray
asSequenceByteArray
copyIntoLongArray
runningReduceIndexedFloatArray
firstDoubleArray
dropWhileByteArray
joinToShortArray
lastIndexByteArray
toHashSet	Array
minDoubleArray
asSequenceCharArray
sumByDoubleLongArray
contentEqualsArray
maxOfOrNullShortArray
indexOfIntArray
lastOrNullIntArray
toMutableSetLongArray
toHashSetBooleanArray
forEachCharArray
reduceRightByteArray
forEachByteArray
lastOrNullByteArray
maxOfWithOrNullByteArray
associateWithToArray
sortedWithArray
toMutableSetCharArray
maxOfByteArray
zipCharArray
withIndex	Array
all"CharArray
reduceRightIndexedOrNullByteArray
minFloatArray
scanIndexedArray
getOrNullDoubleArray
unionDoubleArray
toMutableListArray
singleBooleanArray
flatMapIndexedIntArray
takeLastWhileIntArray
toCollectionLongArray
sumByIntArray
subtractShortArray
foldRightShortArray
associateByToLongArray
dropLastWhileDoubleArray
associateToShortArray
sortDescendingByteArray
associateByArray
mapIndexedToByteArray
minOfWithOrNullFloatArray
foldIndexedFloatArray
isEmptyCharArray
sortDescendingLongArray
sliceArrayLongArray
scanCharArray
runningFoldDoubleArray
reversedIntArray
reduceIndexedOrNullBooleanArray
dropLastWhileArray
maxOfWithOrNullShortArray
getOrElseByteArray
associateWithBooleanArray
component3IntArray
filterNotIntArray
component2CharArray
mapArray
dropWhileCharArray
copyOfRangeIntArray
mapIndexedToFloatArray
getOrElseArray
contentDeepHashCodeImplFloatArray
unionByteArray
isNotEmptyByteArray
component5LongArray
groupByToByteArray
filterNotToLongArray
maxWithLongArray
reduceCharArray
sortedByArray
sortedByIntArray
scanIndexedShortArray
reduceIndexedBooleanArray
minWithOrNullShortArray
toSortedSetArray
lastOrNullBooleanArray
component1IntArray
elementAtOrNull$DoubleArray
reduceRightIndexedOrNullCharArray
toSetByteArray
asListShortArray
noneDoubleArray
getOrNullBooleanArray
singleLongArray
subtractIntArray
sortedWithBooleanArray
singleOrNullShortArray
minWithFloatArray
maxWithOrNullFloatArray
takeLongArray
takeLastArray
toSetByteArray
distinctByDoubleArray
sortDescendingFloatArray
elementAtLongArray
flatMapIndexedToByteArray
lastIndexOfDoubleArray
toMutableSetDoubleArray
reduceRightIndexedDoubleArray
isEmptyLongArray
toMutableListShortArray
getOrNullBooleanArray
mapArray
toCharArrayFloatArray
takeLastWhileArray
sortedArrayShortArray
lastIntArray
sumDoubleArray
allIntArray
maxOfArray
runningFoldFloatArray
onEachShortArray
maxByOrNullBooleanArray
runningReduceIntArray
plusDoubleArray
firstArray
associateWithToArray
minOfWithOrNullIntArray
toSetLongArray
sortedCharArray
reduceIndexedLongArray
fillDoubleArray
distinctByByteArray
minWithLongArray
countShortArray
elementAtFloatArray
flatMapIndexedToIntArray
joinToCharArray
maxByOrNullShortArray
sliceArrayShortArray
unionCharArray
associateByToByteArray
flatMapIndexedToIntArray
indicesCharArray
filterToDoubleArray
component5FloatArray
sortedDescendingCharArray
copyOfDoubleArray
elementAtCharArray
sortedArrayByteArray
reduceRightOrNullShortArray
dropWhileShortArray
copyIntoShortArray
dropLastWhileDoubleArray
contentEqualsLongArray
filterNotToByteArray
flatMapToDoubleArray
mapIndexedToDoubleArray
asIterableByteArray
maxOrNullCharArray
findByteArray
sortedDescendingBooleanArray
minByOrNullFloatArray
component2Array
isNotEmptyIntArray
filterIndexedToCharArray
minByBooleanArray
sumByShortArray
sortedArrayByteArray
minOfLongArray
reduceIndexedDoubleArray
onEachIndexedByteArray
groupByToFloatArray
joinToByteArray
findLastDoubleArray
minOfOrNullIntArray
toTypedArrayLongArray
sortedDescendingIntArray
contentToStringArray
maxByOrNullIntArray
filterToIntArray
contentHashCodeMutableStateFlow
updateStateFlow
fuseStateFlowMutableStateFlow
getAndUpdateMutableStateFlow
updateAndGetMutableStateFlow
incrementMutableStateFlow
asStateFlowLongArray
asFlowFlow
forEachFlow
flatMapMergeFlowCollector
invokeSafelyFlow
flatMapFlow
transformLatestFlow
broadcastInFlow
stateInFlow
transformWhileFlowCollector
emitAllFlow
filterNotNullFlow
catchImpl	Flow
scanFlow
subscribeFlow
toCollectionFlow
filterFlow
delayFlowFlow
onCompletionIterator
asFlowFlow
composeFlow
collectFlow
onEmptyArray
asFlowFlow
flattenConcatFlow
concatWithFlow
flattenFlow
filterNotFlow
flowWithFlow
retryWhenThrowable
isSameExceptionAsLongRange
asFlowFlow
takeWhileSequence
asFlowFlow
distinctUntilChangedBy	Flow
lastFlow
delayEachFlow
singleFlow
flattenMergeFlow
toListFlow
dropWhileFlow
onStartIntArray
asFlowFlow
observeOnIntRange
asFlowFlow
concatMap
Flow
catch
Flow
cacheFlow
mapNotNullFlow
runningFoldBroadcastChannel
asFlowFlow
filterIsInstance	Flow
takeCoroutineScope
launchSharingReceiveChannel
consumeAsFlowReceiveChannel
receiveAsFlowFlowCollector
emitAbortFlow
replayFlow
runningReduce$CoroutineScope
launchSharingDeferredFlow
transformFlow
configureSharingFlow
mapLatestFlow
shareInFlow
bufferFlow
debounceInternalIterable
mergeIterable
asFlowFlow
cancellableFlow
firstOrNullFlow
combineFlowCollector
ensureActive CoroutineScope
fixedPeriodTickerFlow
conflateFlow
startWith
Flow
retryFlow
withIndexFlow
onErrorResumeNextFlow
flowOnFlow
collectLatestFlow
singleOrNullFlow
launchInSuspendFunction0
asFlow	Flow
skipFlow
reduceFlow
subscribeOnFlow
zip
Flow
toSetFlowCollector
emitAllImplFlow
onErrorCollectFlow
produceInThrowable
isCancellationCauseFlow
combineTransformFlow
scanFoldFlow
onErrorReturnFlow
combineLatestFunction0
asFlowFlow
collectWhileFlow
flatMapConcatFlow
onErrorResumeFlow
distinctUntilChangedFlow
lastOrNull	Flow
dropFlow
scanReduceFlow
collectIndexedFlow
flatMapLatest	Flow
foldSharedFlow
onSubscriptionFlow
unsafeTransform
Flow
countFlow
switchMap
Flow
firstMutableSharedFlow
asSharedFlowFlow
publishOnFlow
publish
Flow
mergeArray
getBufferAtArray
setBufferAtSharedFlow
fuseSharedFlowStateFlow
distinctUntilChangedFlowCollector
cancelSharedFlow
catchSharedFlow
countSharedFlow
flowOnFlowCollector
isActiveSharedFlow
toListSharedFlow
cancellableFlowCollector
coroutineContextSharedFlow
retrySharedFlow
retryWhenStateFlow
conflateSharedFlow
toSetCompanion
WhileSubscribedFlow
asChannelFlow.FlowCollector
withUndispatchedContextCollector!AbortFlowException
checkOwnershipJob
transitiveCoroutineParentSafeCollector
checkContextFlowCollector
combineInternalCoroutineScope
flowProduceMutex
withLockSemaphore
withPermitDuration
coerceToMillisAny
markExecutionException
nonNullCauseListenableFuture
asDeferredListenableFuture
awaitDeferred
asListenableFutureStream
consumeAsFlowCompletionStage
asDeferredJob
setupCancellationDeferred
asCompletableFutureCompletionStage
awaitJob
asCompletableFutureCoroutineScope
produceProducerScope
awaitCloseReceiveChannel
broadcastCoroutineScope
broadcastChannelResult
onSuccessChannelResult
onFailureChannelResult
onClosedChannelResult
getOrElseReceiveChannel
consumeReceiveChannel
toChannelReceiveChannel
singleReceiveChannel
firstReceiveChannel
firstOrNullReceiveChannel
filterNotReceiveChannel
indexOfReceiveChannel
toSetReceiveChannel
onReceiveOrNullReceiveChannel
flatMapReceiveChannel
dropWhile ReceiveChannel
mapIndexedNotNullBroadcastChannel
consumeReceiveChannel
consumesSendChannel
trySendBlockingReceiveChannel
toListSendChannel
sendBlockingReceiveChannel
toMutableListReceiveChannel
filterIndexedReceiveChannel
dropReceiveChannel
mapNotNullReceiveChannel
mapIndexedReceiveChannel
receiveOrNullReceiveChannel
lastOrNullReceiveChannel
toMapReceiveChannel
withIndexReceiveChannel
requireNoNullsReceiveChannel
mapReceiveChannel
takeWhileReceiveChannel
filterBroadcastChannel
consumeEachReceiveChannel
takeReceiveChannel
filterNotNullToReceiveChannel
singleOrNullReceiveChannel
elementAtReceiveChannel
consumeEachReceiveChannel
distinctReceiveChannel
toMutableSetReceiveChannel
minWithReceiveChannel
lastReceiveChannel
filterNotNullReceiveChannel
distinctByReceiveChannel
noneReceiveChannel
cancelConsumedReceiveChannel
toCollectionReceiveChannel
zipReceiveChannel
countReceiveChannel
lastIndexOfReceiveChannel
anyReceiveChannel
maxWithReceiveChannel
elementAtOrNullClosed
toResultAny
toResultCoroutineScope
actorConcurrentLinkedListNode
closeSegment
findSegmentInternal<OnUndeliveredElement
callUndeliveredElementCatchingException+OnUndeliveredElement
callUndeliveredElement(OnUndeliveredElement
bindCancellationFun"Continuation
resumeCancellableWith(DispatchedContinuation
yieldUndispatched(DispatchedContinuation
executeUnconfinedReentrantLock
withLock)MainDispatcherFactory
tryCreateDispatcher!MainCoroutineDispatcher
isMissingLocalAtomicInt
value*SuspendFunction0
startCoroutineCancellable&Continuation
startCoroutineCancellable*SuspendFunction1
startCoroutineCancellable#StackTraceElement
elementWiseEqualsThrowable
initCauseThrowable
causeAndStacktraceThrowable
sanitizeStackTraceStackTraceElement
isArtificialArray
frameIndex,SuspendFunction0
startCoroutineUnintercepted5ScopeCoroutine
startUndispatchedOrReturnIgnoreTimeout,SuspendFunction1
startCoroutineUnintercepted+SuspendFunction0
startCoroutineUndispatched(ScopeCoroutine
startUndispatchedOrReturn+SuspendFunction1
startCoroutineUndispatched!ScopeCoroutine
undispatchedResultTask
isBlockingInt
forEachOneBitSequence
toImmutableListPersistentCollection
plusCharSequence
toPersistentListIterable
toImmutableSetPersistentMap
putAllPersistentCollection
intersectPersistentList
plusPersistentSet
intersectMap
toPersistentMapIterable
toPersistentHashSetMap
toImmutableMapCharSequence
toImmutableSetCharSequence
toPersistentSetPersistentList
minusMap
toPersistentHashMapPersistentCollection
minusCharSequence
toImmutableListSequence
toPersistentHashSetPersistentSet
plus CharSequence
toPersistentHashSetPersistentSet
mutatePersistentMap
mutateSequence
toPersistentSetPersistentList
mutateIterable
toPersistentSetIterable
toPersistentListSequence
toPersistentListPersistentMap
minusPersistentMap
plusIterable
toImmutableListPersistentSet
minusSequence
toImmutableSetArray
insertEntryAtIndexArray
removeNodeAtIndexArray
replaceEntryWithNodeArray
replaceNodeWithEntryArray
removeEntryAtIndexArray
addElementAtIndexArray
removeCellAtIndexStringFormat
decodeFromStringBinaryFormat
encodeToByteArray BinaryFormat
decodeFromByteArray BinaryFormat
decodeFromHexStringBinaryFormat
encodeToHexStringStringFormat
encodeToString7AbstractPolymorphicSerializer
findPolymorphicSerializer(SerializersModule
reflectiveOrContextual'SerializersModule
serializerByKTypeImpl SerializersModule
typeSerializerSerializersModule
serializerKClass
serializer#SerializersModule
builtinSerializerType
prettyClass"SerializersModule
serializerOrNull*SerializersModule
serializerByJavaTypeImpl(SerializersModule
genericArraySerializerKClass
serializerOrNullJson
decodeFromJsonElementJson
encodeToJsonElementEncoder
asJsonEncoderDecoder
asJsonDecoderJson
decodeFromStreamJson
decodeToSequenceJson
encodeToStreamJson
schemaCacheJsonPrimitive
doubleJsonElement
jsonPrimitiveJsonPrimitive
intJsonPrimitive
longJsonElement
jsonNullJsonElement
jsonObjectJsonPrimitive
longOrNullJsonPrimitive
floatJsonElement
jsonArrayJsonPrimitive
floatOrNullJsonPrimitive
contentOrNullJsonElement
errorJsonPrimitive
doubleOrNullJsonPrimitive
booleanOrNullJsonPrimitive
intOrNullJsonPrimitive
booleanJsonObjectBuilder
putJsonArrayBuilder
addJsonArrayJsonObjectBuilder
putJsonArrayJsonArrayBuilder
addJsonObjectJsonObjectBuilder
putJsonObjectJsonArrayBuilder
addStringBuilder
printQuotedJson
readPolymorphicJsonJson
readJsonCharSequence
minify2AbstractJsonLexer
throwInvalidFloatingPointDecoded$SerialDescriptor
requiresTopLevelTagJson
writeJson#SerialDescriptor
classDiscriminator!JsonEncoder
encodePolymorphically.JsonDecoder
decodeSerializableValuePolymorphic"SerialDescriptor
carrierDescriptorJson
selectMapModeJson
switchModeAbstractJsonLexer
parseString!SerialDescriptor
isUnsignedNumber&AbstractJsonLexer
tryConsumeStartArray!AbstractJsonLexer
determineFormat)SerialDescriptor
buildAlternativeNamesMapJson
tryCoerceValue!SerialDescriptor
getJsonNameIndex(SerialDescriptor
getJsonNameIndexOrThrow#SerializersModuleBuilder
contextual$SerializersModuleBuilder
polymorphic!PolymorphicModuleBuilder
subclassSerializersModule
overwriteWithSerializersModule
plusDecoder
decodeStructureEncoder
encodeStructureEncoder
encodeCollectionUnit
serializerCompanion
serializerKClass
builtinSerializerOrNullKClass
serializerNotRegisteredDeserializationStrategy
castSerializationStrategy
castKType
kclassKSerializer
cast"SerialDescriptor
cachedSerialNamesIterable
elementsHashCodeByList
compactArray&SerialDescriptor
jsonCachedSerialNamesClass
serializerNotRegistered)Class
constructSerializerForGivenTypeArgsClass
polymorphicSerializerBooleanArray
getCheckedClass
isNotAnnotatedClass
companionOrNull*KClass
constructSerializerForGivenTypeArgsClass
interfaceSerializerClass
createEnumSerializer.KClass
platformSpecificSerializerNotRegisteredKClass
compiledSerializerImplClass
findObjectSerializerArray
getCheckedArrayList
toNativeArrayImplSerialDescriptor
equalsImplSerialDescriptor
hashCodeImpl$ClassSerialDescriptorBuilder
elementSerialDescriptor
nullable+SerializersModule
getPolymorphicDescriptors)SerializersModule
getContextualDescriptorSerialDescriptor
withContextSerialDescriptor
capturedKClassSerialDescriptor
elementNames#SerialDescriptor
elementDescriptorsString
tokenizeByWhitespaceIntRange
intersectsIntRange
withLeftExpandIntRange
withRightExpandString
splitWithRangesString
takeLastNonWhitespacesString
dropWhitespacesString
takeNonWhitespacesString
takeLastWhitespacesString
dropNonWhitespacesString
dropLastNonWhitespacesString
takeWhitespacesString
dropLastWhitespacesToken
trimLeftToken
withOffset
List
toMapIterable
lettersString
splitByDelimiterFlow
singleOrStatusFlow
singleOrStatusFlowDeferred
doneValueSet
unmodifiableJob
printDebugTree&String
toUpperCasePreservingASCIIRulesString
caseInsensitiveString
chomp&String
toLowerCasePreservingASCIIRulesString
escapeHTMLDeflater
setInputBufferByteWriteChannel
deflatedByteWriteChannel
putGzipTrailerByteReadChannel
deflatedByteWriteChannel
putGzipHeaderDeflater
deflateToByteWriteChannel
deflateWhileChecksum
updateKeepPositionByteReadChannel
copyToBothByteReadChannel
splitPath
dropLeadingTopDirsPath
combineSafePath
normalizeAndRelativizeDigest
buildCoroutineScope
inflateInt
hasInflater
inflateToStringValues
filterStringValues
toMapStringValues
flattenForEach&StringValuesBuilder
appendIfNameAbsent"StringValuesBuilder
appendFilteredStringValuesBuilder
appendAllStringValues
flattenEntries.StringValuesBuilder
appendIfNameAndValueAbsentByteArray
readShortAttributes
putAllInput
asStreamFile
dropLeadingTopDirsChar
isPathSeparatorOrDotChar
isPathSeparatorFile
normalizeAndRelativizeFile
notRootedByteBuffer
copyByteBuffer
moveToByteBuffer
decodeStringByteBuffer
moveToByteArrayString
decodeBase64BytesString
decodeBase64StringByte
fromBase64ByteArray
encodeBase64Int
toBase64String
encodeBase64ByteReadPacket
encodeBase64 ByteReadPacket
decodeBase64BytesByteArray
clearFromLongRange
lengthThrowable
rootCauseByteWriteChannel
writerByteWriteChannel
bufferedWriterByteReadChannel
passByteWriteChannel
useFile
writeChannelFile
readChannelPath
readChannelCalendar
toDateGMTDate
toJvmDateGMTDate
plusGMTDate
truncateToSecondsGMTDate
minusNetworkAddress
hostnameNetworkAddress
portAny
instanceOfKType
platformTypePipeline
interceptPipeline
executeThrowable
withCause&ByteReadChannel
consumeEachBufferRange%LookAheadSession
consumeEachRemaining,LookAheadSuspendSession
consumeEachRemainingByteWriteChannel
writeCharByteWriteChannel
writeBooleanByteWriteChannel
writeByteByteWriteChannel
writeAvailable#ByteWriteChannel
writePacketSuspendByteWriteChannel
writePacket ByteWriteChannel
writeStringUtf8ByteWriteChannel
closeByteWriteChannel
writeFully+SuspendableReadSession
requestBufferSuspend%ByteReadChannel
requestBufferFallback)ByteReadChannel
completeReadingFromBufferByteReadChannel
readByteReadChannel
requestBufferByteReadChannel
readSessionFor%Throwable
unwrapCancellationException&LookAheadSession
tryCopyUntilDelimiter)ByteReadChannel
readUntilDelimiterSuspend"ByteReadChannel
readUntilDelimiter$ByteReadChannel
skipDelimiterSuspend$LookAheadSession
startsWithDelimiter#LookAheadSession
tryEnsureDelimiterByteReadChannel
skipDelimiter!ByteReadChannel
joinToImplSuspendByteReadChannel
joinToByteReadChannel
copyToImplCoroutineScope
launchChannelCoroutineScope
readerCoroutineScope
writer ByteWriteChannel
writeSessionFor ByteWriteChannel
completeWriting(ByteWriteChannel
completeWritingFallback#ByteWriteChannel
requestWriteBufferByteReadChannel
toLittleEndian%ByteReadChannel
readFloatLittleEndianByteReadChannel
readDouble$ByteReadChannel
readLongLittleEndianByteWriteChannel
writeFloat(ByteWriteChannel
writeDoubleLittleEndianByteReadChannel
readShortByteReadChannel
readLongByteWriteChannel
writeDouble#ByteReadChannel
readIntLittleEndianByteReadChannel
readFloatByteReadChannel
readInt&ByteReadChannel
readDoubleLittleEndianAny
reverseIfNeeded%ByteReadChannel
readShortLittleEndian%ByteWriteChannel
writeIntLittleEndian'ByteWriteChannel
writeShortLittleEndian&ByteWriteChannel
writeLongLittleEndianByteWriteChannel
writeLongByteWriteChannel
toLittleEndian'ByteWriteChannel
writeFloatLittleEndianByteReadChannel
readAvailableByteReadChannel
discardByteReadChannel
readUTF8LineToByteReadChannel
readUTF8LineByteReadChannel
readRemainingByteReadChannel
cancelByteReadChannel
discardExactByteReadChannel
copyAndCloseByteReadChannel
readFullyByteReadChannel
readPacketAny
preventFreezeAny
makeSharedThrowable
printStackReadableByteChannel
copyToPipe
copyToByteReadChannel
toInputStreamByteWriteChannel
toOutputStreamWritableByteChannel
asOutputReadableByteChannel
asInput"ReadableByteChannel
readPacketImpl%ReadableByteChannel
readPacketAtLeast$ReadableByteChannel
readPacketAtMostWritableByteChannel
writePacket#ReadableByteChannel
readPacketExactByteBuffer
myDuplicateByteBuffer
copyToByteBuffer
mySliceMemory
fillByteBuffer
sliceSafeByteBuffer
suppressNullCheck
Memory
get
Memory
setMemory
storeAtMemory
storeUShortAtMemory
loadUShortAtMemory
loadULongAtMemory
storeULongAtMemory
storeUIntAtMemory
loadUIntAtMemory
loadUIntArrayMemory
loadUShortArrayMemory
storeUByteArrayMemory
storeByteArrayMemory
storeUShortArrayMemory
storeULongArrayMemory
loadByteArrayMemory
loadUByteArrayMemory
loadULongArrayMemory
storeUIntArrayByteArray
useMemoryCompanion
ofDouble
reverseByteOrderFloat
reverseByteOrderLong
reverseByteOrderShort
reverseByteOrderInt
reverseByteOrderUShort
reverseByteOrderInt
highShortInt
lowShortLong
highIntShort
highByteULong
reverseByteOrderUInt
reverseByteOrderLong
lowIntShort
lowByteMemory
loadFloatAtMemory
loadIntAtMemory
storeShortAtMemory
loadShortAtMemory
loadDoubleAtMemory
storeIntAtMemory
storeLongAtMemory
loadLongAtMemory
storeFloatAtMemory
storeDoubleAtMemory
loadLongArrayMemory
storeLongArrayMemory
loadFloatArrayMemory
loadDoubleArrayByteBuffer
withOffsetMemory
loadShortArrayMemory
storeIntArrayMemory
storeFloatArrayMemory
loadIntArrayMemory
storeDoubleArrayMemory
storeShortArrayBytePacketBuilder
previewBytePacketBuilder
resetBuffer
writeBufferAppend!Buffer
writeBufferAppendUnreserveBuffer
writeBufferPrependOutput
fillOutput
writeWhileSizeOutput
writeFullyBytesTemplateOutput
writeFullyTemplateOutput
appendOutput
writeWhileOutput
writeUShortInput
readULongInput
readUShortOutput
writeULongOutput
writeUByteOutput
writeUIntInput
readUIntInput
readUByteInput
readFullyBytesTemplateInt
requireNoRemainingInput
readFullyTemplateInput
peekCharUtf8Input
forEachInput
discardInput
takeWhileSizeInput
takeWhileInput
peekCharUtf8ImplInput
discardExactInput
readUntilDelimiterInput
discardUntilDelimiterInput
readUntilDelimitersInput
discardUntilDelimitersBuffer
copyUntilByteReadPacket
readByteBufferByteReadPacket
readTextOutput
writeIntLittleEndianBuffer
writeIntLittleEndianOutput
writeLongLittleEndianOutput
writeFloatLittleEndianOutput
writeArrayTemplateBuffer
writeShortLittleEndianBuffer
writeFullyLittleEndianOutput
writeDoubleLittleEndianOutput
writeFullyLittleEndianOutput
writeShortLittleEndianBuffer
writeArrayTemplateBuffer
writeDoubleLittleEndianBuffer
writeFloatLittleEndianBuffer
writeLongLittleEndian Buffer
readUntilDelimitersDirectBuffer
readUntilDelimiterDirectByteBuffer
copyUntilArraysBuffer
readUntilDelimiterImpl Buffer
readUntilDelimitersArrays!Buffer
discardUntilDelimitersImplBuffer
readUntilDelimitersImpl Buffer
discardUntilDelimiterImplBuffer
readUntilDelimiterArraysByteBuffer
copyUntilDirectBuffer
copyUntilArraysByteReadPacket
isNotEmptyByteReadPacket
isEmptyInput
isEmptyInput
isNotEmptyBytePacketBuilder
writeDirectBuffer
hasArrayByteReadPacket
readFullyByteReadPacket
readDirect'BytePacketBuilder
writeByteBufferDirectInput
readDirect#ByteReadPacket
readAsMuchAsPossibleByteReadPacket
readAvailable
Input
readOutput
writeShortFallbackOutput
writeLongFallback%Output
writePrimitiveFallbackTemplateOutput
writeIntFallbackOutput
writeIntByteByByteOutput
writePrimitiveTemplateChunkBuffer
writeDirectBuffer
writeDirectChunkBuffer
readDirect#ChunkBuffer
resetFromContentToWriteBuffer
readDirectChunkBuffer
forEachChunkBuffer
peekToChunkBuffer
isEmptyChunkBuffer
copyAllLong
coerceAtMostMaxIntOrFailChunkBuffer
findTailChunkBuffer
releaseAllLong
coerceAtMostMaxIntBuffer
readBytesChunkBuffer
remainingAllString
getCharsInternalBuffer
readLongLittleEndianBuffer
readFullyLittleEndianInput
readFloatLittleEndianInput
readIntLittleEndianBuffer
readFloatLittleEndianInput
readLongLittleEndianInput
readFullyLittleEndianBuffer
readDoubleLittleEndianInput
readShortLittleEndianInput
readDoubleLittleEndianInput
readAvailableLittleEndian Buffer
readAvailableLittleEndianBuffer
readIntLittleEndianBuffer
readShortLittleEndianInput
readTextExactCharactersInput
readUTF8LineToInput
readUTF8Line&Input
readUTFUntilDelimiterToSlowAsciiInput
readTextExactBytes&Input
readUTF8UntilDelimiterToSlowUtf8Input
readBytesOfInput
readBytesOutput
writeTextInput
readTextChar
isAsciiCharInput
readTextExactByteReadPacket
readUTF8LineOutput
writeTextUtf8Input
readUTF8UntilDelimiterInput
readUTF8UntilDelimiterToByteReadPacket
readBytesBuffer
write+Buffer
endGapReservationFailedDueToCapacityBuffer
canReadBuffer
restoreStartGap Buffer
startGapReservationFailed*Buffer
startGapReservationFailedDueToLimit*Buffer
endGapReservationFailedDueToContentBuffer
read+Buffer
endGapReservationFailedDueToStartGapBuffer
canWriteThrowable
addSuppressedInternalInput
copyToBuffer
appendCharsBuffer
tryPeekBuffer
makeViewChunkBuffer
makeViewBuffer
appendBuffer
fillBuffer
pushBackBuffer
flushInput
readDoubleFallbackInput
readPrimitiveFallbackInput
readLongFallbackInput
readShortFallbackInput
readFloatFallbackInput
readIntFallbackInput
readPrimitiveLong
toIntOrFailByteReadPacket
unsafeAppendOutput
prepareWriteHeadInput
prepareReadFirstHeadInput
completeReadHeadInput
prepareReadNextHeadMemory
encodeUTF8Stage1Memory
encodeUTF8Buffer
decodeASCIIBuffer
decodeUTF8Memory
encodeUTF8Stage2Memory
putUtf8CharChunkBuffer
isExclusivelyOwnedBuffer
writeUIntBuffer
readShortBuffer
writeULongBuffer
readUShortChunkBuffer
readFloatBuffer
readUIntBuffer
writeShortChunkBuffer
readLongBuffer
writeIntBuffer
readDoubleChunkBuffer
readUByteChunkBuffer
writeFullyBuffer
forEachBuffer
readFloatBuffer
readIntChunkBuffer
readShortBuffer
writeUShortBuffer
writeLongBuffer
writeDoubleChunkBuffer
writeULongChunkBuffer
writeUByteBuffer
readExactBuffer
readULongChunkBuffer
writeUShortChunkBuffer
writeIntChunkBuffer
writeDoubleChunkBuffer
readFullyChunkBuffer
writeLongChunkBuffer
writeFloatBuffer
writeUByteBuffer
readUByteChunkBuffer
readUIntChunkBuffer
readULongBuffer
readLongChunkBuffer
readAvailableChunkBuffer
writeShortChunkBuffer
readDoubleChunkBuffer
readUShortBuffer
writeFloatBuffer
writeExactChunkBuffer
writeUIntChunkBuffer
readIntObjectPool
useBorrowedObjectPool
useInstanceOutputStream
asOutputInputStream
asInputInputStream
readPacketAtLeastBytePacketBuilder
writerUTF8ByteReadPacket
inputStreamByteReadPacket
readerUTF8OutputStream
writePacketInputStream
readPacketImplBytePacketBuilder
outputStreamInputStream
readPacketAtMostInputStream
readPacketExactCharsetEncoder
encodeArrayImpl!CharsetEncoder
encodeCompleteImplCharsetEncoder
encodeCharsetEncoder
encodeToImplInput
sizeEstimate%CharsetEncoder
encodeToByteArrayImpl1$CharsetEncoder
encodeToByteArrayImplByteBuffer
decodeUTF8Line ByteBuffer
decodeUTF8Line_bufferByteBuffer
decodeUTF8Line_arrayByteBuffer
decodeUTF8_bufferByteBuffer
decodeUTF8_arrayByteBuffer
decodeUTFCharsetEncoder
charset!CoderResult
throwExceptionWrappedCharsetEncoder
encodeImplCharsetDecoder
decodeImplSlow#CharsetDecoder
decodeImplByteBufferCharset
nameCharsetDecoder
charsetCharsetEncoder
encodeComplete$CharsetEncoder
encodeToByteArraySlow CharsetEncoder
encodeToByteArrayCharsetDecoder
decodeBufferCharsetDecoder
decodeExactBytesByteBuffer
isEmptyByteBuffer
startsWithByteBuffer
putLimitedByteBuffer
indexOfPartialByteBuffer
putAtMostByteBuffer
decodeASCIILine ByteBuffer
decodeASCIILine_array!ByteBuffer
decodeASCIILine_buffer.ByteChannelSequentialBase
copyToSequentialImpl$ByteChannelSequentialBase
copyToTail$ByteChannelSequentialBase
joinToImplTimeout
withTimeoutCoroutineScope
createTimeoutCompanion
bindUDPCompanion
connectUDPTcpSocketBuilder
connectConfigurable
tcpNoDelay#CoroutineScope
attachForWritingImpl)CoroutineScope
attachForWritingDirectImpl)CoroutineScope
attachForReadingDirectImpl#CoroutineScope
attachForReadingImplByteWriteChannel
readFrom+SelectorProvider
openServerSocketChannelFor%SelectorProvider
openSocketChannelForDatagram
writeMessageToSelectableChannel
assignOptionsSelectableChannel
nonBlockingSocketAddress
toSocketAddress$Any
checkSupportForUnixDomainSocketsSocketAddress
toJavaAddressAWritable
openWriteChannelASocket
isClosedSocket
connectionASocket
awaitClosedAReadable
openReadChannelSelectorManager
buildOrCloseNewProjectWizardStep
chainLinkedSet
distinctByMaxPrefixString
dropPostfixString
dropPrefixSequence
toLinkedSetArray
toLinkedSetIterable
toLinkedSetComponent
setEmptyStateKType
erasedTypeType
erasedTypeObjectReader
readValueTyped!ObjectMapper
registerKotlinModuleObjectMapper
convertValueObjectMapper
readValueArrayNode
minusAssignClass
isUnboxableValueClassArrayNode
plusObjectNode
minusAssignObjectReader
treeToValueSimpleModule
addDeserializer!JsonMappingException
wrapWithPathObjectNode
minusArrayNode
minusJsonNode
containsObjectMapper
treeToValueInt
toBitSetObjectReader
readValuesTypedObjectMapper
readValuesArrayNode
plusAssignSimpleModule
addSerializerInt
asUShortLong
asUIntShort
asUByteBigInteger
asULongClass
isKotlinClass(JsonDeserializer
asSingletonDeserializerAnnotatedMethod
isInlineClassASTNode
getParentOfTypeASTNode
findChildOfTypeASTNode
getTextInNodeASTNode
acceptChildrenASTNode
accept"LinkGeneratingProvider
makeXssSafeURI
resolveToStringSafeArrayList
pushArrayList
pop!MarkdownConstraints
getCharsEatenMarkdownConstraints
extendsPrev2MarkdownConstraints
applyToNextLineAndAddModifiers'MarkdownConstraints
eatItselfFromString'MarkdownConstraints
containsListMarkers MarkdownConstraints
upstreamWithMarkdownConstraints
extendsListByteBuffer
getUnsignedIntByteBuffer
setUnsignedIntByteBuffer
isLittleEndianByteBuffer
getUnsignedShort!ByteBuffer
getLengthPrefixedArray&ByteArray
setUnsignedInt32LittleEndianKeyStore
getSignerInfoKeyStore
getSingleKeyEntryAliasInterval
sizeInterval
lastContentLineIntRange
hasIntersectionWithEditor
getCellsInterval
contentLinesNotebookCellLines
getCellsInterval
firstContentLineInterval
getTopMarkerDocument
getLineTextEditor
getCellByOrdinal(NotebookEditorAppearance
paintCellStripe%MutableList
mergeAndJoinIntersectionsDocument
getTextEditor
getCellGraphics
useInterval
getBottomMarker*NotebookIntervalPointerFactory
movingCells/NotebookIntervalPointerFactory
invalidatingCellEditor
cellSelectionModel#Editor
hasCellSelectionModelSupportInterval
startLogicalPositionDocument
getSelectionLines0Editor
notebookCellEditorScrollingPositionKeeperEditor
notebookAppearanceComponent
swingDeltaSizeEditorEx
textEditingAreaWidthJComponent
yOffsetFromEditorEditorEx
addComponentInlay!JComponent
outputComponentFactoryIterator
zip8EditorCustomElementRenderer
notebookInlayOutputComponent8EditorCustomElementRenderer
notebookCellOutputComponents.NotebookOutputInlayController
outputComponents2NotebookOutputInlayController
collapsingComponents6EditorGutterComponentEx
hoveredCollapsingComponentRectAnActionEvent
notebookEditor&AnActionEvent
notebookCellInlayManagerUrl
isSpecialAsyncPromise
catchErrorPromise
isPendingPromise
isRejectedPromise
awaitPromise
asDeferredInternalPromise
thenActionCallback
toPromisePromise
thenRunPromise
toActionCallbackFuture
getResultOrThrowErrorPromise
asDeferredPromise
asCompletableFutureAsyncPromise
computePromise
thenAsyncAcceptLogger
errorIfNotMessageCollection
allPromise
processedRunPromise
processedPromise
awaitInternalCollection
collectResultsPromise
thenAsyncOutMessage
writeDoubleOutMessage
writeBooleanOutMessage
writeEnumOutMessage
writeStringOutMessage
writeIntHttpRequest
isSignedRequest
Logger
logLogger
catchLogger
warnLogger
infoEnumSet
valuesThrowable
getThrowableTextByteArray
parseLongByteArray
putLongMutableMap
putUniqueArray
insertMap
firstOrNullArray
forEachReversedMutableMap
keySetMutableMap
addUniqueList
restOrNullMutableMap
getOrCreateMutableMap
blockingPutUnique	Map
firstMutableMap
putMutableCollection
addUniqueArray
removeTypedBitSlice
getBitSlice
nextSliceLowMaybe
asNullableISource
throttleLastIPropertyView
debounceNotNullISource
asPropertyTlsBoxed
forbidReentrancyAny
printlnAny
printToString	Any
printBoolean
condstrLifetime
waitTerminationLifetime
isEternalLifetime
isAliveLifetime
onTerminationLifetime
throwIfNotAliveLifetime
isNotAliveLifetime
viewNotNullLifetime
assertAliveLifetime
plusAssignLifetime
badStatusForAddActionsLifetime
viewLifetime
intersectISource
mapISource
adviseUntilISource
adviseNotNullOnceISource
adviseNotNullISource
flowIntoISource
adviseEternalISource
adviseOnceISource
adviseWithPrevIViewableList
viewableTailIViewableSet
createIsNotEmptyIViewableMap
createIsEmpty"IMutableViewableMap
toViewableListIViewableSet
createIsEmptyIViewableMap
createIsNotEmptyIVoidSource
adviseIAsyncSource
adviseOnIViewable
viewNotNullIOptPropertyView
asNullableIProperty
setValueIOptPropertyView
hasValueIVoidSignal
fireIOptProperty
valueOrDefaultIOptPropertyView
valueOrThrowIPropertyView
mapList
foldRightOptISource
distinctIterable
foldOptIPropertyView
composeIOptPropertyView
mapIMutablePropertyBase
bindIOptPropertyView
composeISource
filterIPropertyView
switchMapIViewable
whenTrueIOptPropertyView
orIPropertyView
andIPropertyView
notIOptPropertyView
hasTrueValueIViewable
whenFalseIOptPropertyView
notIPropertyView
orIOptPropertyView
andExecutor
asRdScheduler!CoroutineDispatcher
asRdSchedulerKMutableProperty0
usingValueAny
usingTrueFlagImmutableStack
tailList
toImmutableStackIRdDynamic
createExtSignalIRdTask
awaitInternalIRdTask
waitIRdTask
isFaultedIRdTask
isSucceededIRdTask
isCanceled!String
getPlatformIndependentHashLong
getPlatformIndependentHashInt
getPlatformIndependentHashAbstractBuffer
readSecureStringAbstractBuffer
writeUriAbstractBuffer
readDateTimeAbstractBuffer
writeVoidAbstractBuffer
readGuidAbstractBuffer
readRdIdAbstractBuffer
writeDateTimeAbstractBuffer
readUriAbstractBuffer
writeArrayAbstractBuffer
writeUuidAbstractBuffer
readUuidAbstractBuffer
readListAbstractBuffer
writeListAbstractBuffer
writeGuidAbstractBuffer
readBoolAbstractBuffer
writeBoolAbstractBuffer
readArrayAbstractBuffer
writeNullableAbstractBuffer
writeEnumSetAbstractBuffer
readVoidAbstractBuffer
writeRdId AbstractBuffer
writeSecureStringAbstractBuffer
readEnumSetAbstractBuffer
readEnumAbstractBuffer
readNullableAbstractBuffer
writeEnumInputStream
readInt64InputStream
readByteArrayInputStream
readInt32IWire
serverPortSerializationCtx
writeInternedISerializer
arraySerializationCtx
readInterned$SerializationCtx
withInternRootsHereISerializer
listISerializer
nullableISerializer
internedRdBindableBase
withIdRdBindableBase
staticRdBindableBase
withIdFromName
Array
bindIRdBindable
bindAny
bindPolymorphic	List
bindList
identifyAny
identifyPolymorphicIRdBindable
identifyAny
deepClonePolymorphicAny
isBindableArray
identify IRdWireable
wireSchedulerIfBoundAbstractBuffer
readInternIdAbstractBuffer
writeInternIdIRdCall
startAndAdviseSuccess IScheduler
asCoroutineDispatcherISource
nextValueISource
nextTrueValueAsyncISource
nextFalseValueAsyncISource
nextValueAsyncISource
adviseSuspendISource
nextTrueValueISource
nextNotNullValueISource
nextFalseValueISource
nextNotNullValueAsyncCompletionStage
toRdTaskDeferred
toRdTaskCompletableFuture
awaitIRdTask
awaitIRdTask
asCompletableFutureCoroutineScope
startChildAsyncLifetime
launchLifetime
waitForLifetime
createTerminatedAfterLifetime
startAsync"LifetimeDefinition
synchronizeWithCoroutineScope
launchChildJob
noAwaitCompletionException
unwrapIRdEndpoint
setSuspendComponent
componentHoverPoint"ListSelectionModel
selectedIndexesComponent
visiblePropertyJTextComponent
textPropertyJList
hoveredIndexJComboBox
addLifetimedItemJComponent
mouseClickedJLabel
tooltipForCroppedJComponent
sizePropertyJComponent
awtMousePointComponent
pressOutsideJComponent
namedPropertyGraphics2D
fillRectJList
selectedItemsJComboBox
selectedItemProperty JComponent
isInHierarchyPropertyRdTextChange
deltaRdTextChange
isNormalChangeRdTextChange
reverse!RdTextChange
assertDocumentLengthPsiParameter
isAssertionMessage"PsiMethod
isMessageOnFirstPosition!PsiMethod
isMessageOnLastPositionPsiClass
parameterOrderObjectFactory
named.BuildAttributionReportUiData
shouldAutoOpenTab#TimeWithPercentage
percentageString'TimeWithPercentage
percentageStringHtmlString
insertBRTags!TimeWithPercentage
durationString%TimeWithPercentage
durationStringHtml:JetifierUsageAnalyzerResult
createDeclaredDependenciesList<ConfigurationCachingCompatibilityProjectResult
warningsCount-JetifierUsageAnalyzerResult
shouldShowWarning@ConfigurationCachingCompatibilityProjectResult
shouldShowWarning1TimeWithPercentage
toRightAlignedNodeDurationText$PluginSourceType
toFilterUiShortName!FileASTNode
getImportedClassNamesASTNode
getSuperTypeNameASTNode
getImportedFQCNASTNode
isImportASTNode
mayContainClassFileASTNode
hasClassesExtendingASTNode
hasClassesExtendingASTNode
isImportListASTNode
getChildrenASTNode
isSuperTypeEntryASTNode
isSuperTypeListASTNode
extendsASTNode
isClassProject
hasAndroidOrApkFacetModule
hasApkFacetProject
hasApkFacetProject
hasAnyKotlinModulesAndroidFacet
namespacing"JTextField
wrapWithColorPickerIcon"JTextField
wrapWithBooleanCheckBoxState
stateToBooleanString
toState ResourceType
getScaledCellHeightResourceItem
getReferenceString$ToolWindow
displayWaitingForGoodSyncToolWindow
displayLoadingToolWindow
displayWaitingView!ToolWindow
displayWaitingForBuildCollectionParam
bindTextParam
bindIntParam
bindResourceAssetSet
designAssetsResourceResolver
resolveValueCaret
selectStringFromOffsetVirtualFile
getMetadata(ResourceRepository
getAttributeResourcesResourceItem
isValidForFilters2ResourceRepository
getNonPrivateAttributeResources.ResourceRepository
getResourcesAndApplyFilters2ResourceRepository
getPublicOnlyAttributeResourcesDefaultTableModel
setTableData#AssetPreviewManager
getAssetSetData.DefaultActionGroup
addRelatedTypeFilterActions(DefaultActionGroup
addVisibleTypeFilters%SequentialGroup
addFixedSizeComponent*DefaultActionGroup
addOtherMenuTypeFilters+ResourceType
getPreferredResourceFolderType Sequence
groupIntoDesignAssetSetSequence
findAllDesignAssetsSequence
toDesignAssetFile
getAllLeafFilesResourceValue
getReadableValueList
getReadableConfigurations&ResourceItem
getReadableConfigurationsString
truncateIcon
toScaledImageBufferedImage
scaleTo#ResourceAssetSet
versionCountStringString
pluralizeXmlTag
readAttributeOrNullFontIconData
getFontBoundsJTabbedPane
resizeTabbedPaneJList
setUILightVirtualFile
toAsset8WiFiPairingNotificationService
showPairingSuccessBalloonJEditorPane
setHtml!RandomProvider
createRandomString"AndroidFacet
findNavigationVersionAndroidFacet
isSafeArgsEnabledProject
safeArgsModeTrackerAndroidFacet
safeArgsModeXmlFile
findXmlTagByIdXmlTag
hasMatchedIdAttrXmlTag
hasMatchedNameAttrXmlTag
findChildTagElementById$XmlTag
findChildTagElementByNameAttr-XmlTag
findFirstMatchingElementByTraversingUpXmlTag
isTagIdEqualToSourceElement
withFunctionIconKotlinBuiltIns
getKotlinTypeFqName
getUnresolvedType!KotlinBuiltIns
getKotlinClassTypePsiClass
createConstructorString
parseLongPsiClass
createMethodPsiClass
createFieldString
parseIntString
toUpperCamelCaseString
parseUnsignedIntString
toCamelCaseString
parseReferenceString
parseBooleanPsiClass
annotateNullabilityString
parseFloat"ClassDescriptorImpl
createProperty%ClassDescriptorImpl
createConstructor ClassDescriptorImpl
createMethodModuleInfo
toModule.Module
getDescriptorsByModulesWithDependenciesModuleDescriptor
toModule&LookupElement
withIconFromLookupObjectFormFactor
toWizardFormFactorFormFactor
toTemplateFormFactorLayoutBuilder
verticalGapCell
labelForProject
isViewBindingSupportedProject
hasKtsUsage(FormFactor
toModuleRenderingLoggingEventTemplate
renderRecipe
renderRecipe
findReferencesRecipe
actuallyRenderRecipe
doRenderRecipeExecutor
addTests"RecipeExecutor
addTestDependenciesRecipeExecutor
copyIconsRecipeExecutor
copyMipmapFileRecipeExecutor
copyMipmapFolder'RecipeExecutor
createDefaultDirectories#RecipeExecutor
generateCommonModule RecipeExecutor
generateCMakeFile RecipeExecutor
addKotlinIfNeededRecipeExecutor
setKotlinVersion$RecipeExecutor
addKotlinDependencies'RecipeExecutor
generateBasicJniBindingsRecipeExecutor
proguardRecipe!RecipeExecutor
generateWearModuleRecipeExecutor
generateTvModule"RecipeExecutor
generatePureLibraryString
gradleToKtsIfKtsString
toKtsPropertyString
toKtsFunction$RecipeExecutor
generateAndroidModuleString
gradleSettingsToKtsIfKts#RecipeExecutor
androidProjectRecipe$RecipeExecutor
generateGenericModule&RecipeExecutor
generateBenchmarkModule'RecipeExecutor
generateAutomotiveModule+RecipeExecutor
generateDynamicFeatureModuleModule
addBuildType-RecipeExecutor
addProfileableToTargetManifest+RecipeExecutor
generateMacrobenchmarkModuleAndroidFacet
getPackageForPathAndroidFacet
getModuleTemplates%AndroidFacet
getPackageForApplication%NamedModuleTemplate
getSourceProviderFormFactor
isAvailableAndroidVersion
toBuildApiStringRepoPackage
getFeatureLevelTemplate
validateParameter
isRelatedVirtualFile
relativeToPersistentStateComponent
loadProject
annotateTypeProject
findClass#Project
createNullabilityAnnotation+SampleDataResourceItem
getDrawableResources+LocalResourceRepository
getSampleDataOfTypeModule
isSampleDataFile6SingleDeviceAndroidProcessMonitorState
isTerminalState ResourceValue
isAccessibleInCodeRenderResources
resolveLayoutPsiElement
resourceNamespace!RenderResources
resolveAsDrawable#ResourceItem
getSourceAsVirtualFile"RenderResources
makeColorWithAlphaRenderResources
resolveDrawableRenderResources
resolve#XmlElement
resolveResourceNamespace'RenderResources
resolveNullableResValueResourceItem
isAccessibleInCodeResourceItem
isAccessibleInXmlResourceItem
isIdDefinitionRenderResources
resolveAsIconRenderResources
resolveColor"RenderResources
resolveAsColorIcon#ResourceRepository
getResourceItems%RenderResources
resolveMultipleColorsResourceType
isValueBasedResourceUrl
resolveResourceValue
isAccessibleInXml"ResourceItem
isInlineIdDeclaration RenderResources
resolveStateListResourceType
isFileBased"RenderResources
resolveStringValue&AndroidFacet
getAndroidTestExtraParams,AndroidModuleModel
getAndroidTestExtraParamsSequence
merge)AndroidManifestRawText
resolvePackageName/ExecutionEnvironment
findExistingProcessHandlerExecutor
isDebugConsoleView
printShellCommandPsiAnnotation
intDefValuesKtAnnotationEntry
intDefValuesAndroidSqlFile
sqlContextPsiElement
definesRoomSchemaPsiClass
definesRoomTable*AndroidSqlDefinedTableName
isInternalTable(ProguardR8ClassMember
isParentClassKnown*ProguardR8ClassMember
resolveParentClasses#ProguardR8ClassMember
isConstructor$PsiElement
resolveScopeWithResources!PsiElement
toModelClassResolvable&LookupElementBuilder
withTypeDecoratorXmlAttribute
getAllGetterTypesXmlAttribute
getAllSetterTypesProjectDumper
dumpLintModelsContext
getPsiFileVirtualFile
getPsiFileSafelyPsiElement
isAnnotationTarget&KtElement
isNewLineNeededForAnnotationUastVisitor
visitAllDomElement
androidFacetPsiElement
androidFacetModule
androidFacet"Project
runWhenSmartAndSyncedOnEdtProject
runWhenSmartAndSyncedProject
listenUntilNextSyncPathString
bufferedStreamVirtualFile
toPathStringVirtualFile
toIoFileFile
toLibraryRootVirtualFilePathString
toVirtualFileModule
dependsOnAppCompatModule
dependsOnAndroidxModule
dependsOnOldSupportLib(Module
addDependenciesWithUiConfirmationModule
dependsOnModule
mapAndroidxName(UserDataHolderEx
computeUserDataIfAbsentDocument
toXmlStringMergedManifestInfo
errorMessageString
prependNamespace$Module
getTopLevelResourceDependents&Module
getTransitiveResourceDependents4AndroidFacet
queryCustomPermissionsFromManifestIndex/AndroidFacet
queryUsedFeaturesFromManifestIndex5AndroidFacet
queryMinSdkAndTargetSdkFromManifestIndex-AndroidFacet
queryActivitiesFromManifestIndexAndroidFacet
queryManifestIndex.AndroidFacet
queryPackageNameFromManifestIndex8AndroidFacet
queryApplicationDebuggableFromManifestIndex+AndroidFacet
queryUnionSetFromManifestIndex3AndroidFacet
queryApplicationThemeFromManifestIndex9AndroidFacet
queryCustomPermissionGroupsFromManifestIndexKXmlParser
androidNameKXmlParser
processChildTags"KXmlParser
nextWithExceptionCaughtExecution
toProtoValueOption
iconBuilder
withProjectIdAdbDeviceServices
getpropIDevice
toDeviceSelectorThrowable
asLogStringPsiFile
typeOfIssueSource
isFromNlComponent!NlModel
updateFileContentBlockingAndroidLength
timesDimension
scaleBySwingLength
divSceneContext
inlineScaleSceneComponent
isSiblingSceneComponent
inlineDrawRectSceneManager
layoutSceneManager
layoutAndRenderSceneManager
renderTarget
isAbove-SeamlessTextEditorWithPreview
setEditorLayoutDesignSurface
showPopupSceneView
selectComponentAt$WorkBench
handleLayoutlibNativeCrashCollection
findAllScanlinesBuilder
setApplicationId+KtAnnotated
getQualifierInfoFromKtAnnotatedPsiAnnotation
isQualifier=PsiModifierListOwner
getQualifierInfoFromPsiModifierListOwner AnnotationDescriptor
isQualifierPsiElement
getQualifierInfoKtAnnotationEntry
getDescriptorCollection
filterByQualifier!PsiElement
canBeLineMarkerProvideKotlinType
toPsiKtTypeReference
equalsToPsiTypePsiElement
toPsiClassPsiElement
isDaggerProviderPsiElement
isDaggerConsumer%PsiAnnotation
getClassesFromAttributePsiElement
isDaggerEntryPointPsiElement
isProvidesMethod+PsiElement
isBindsInstanceMethodOrParameterPsiElement
isDaggerComponentPsiType
unboxed/PsiElement
isDaggerComponentInstantiationMethod)PsiAnnotation
isClassPresentedInAttribute%KtNamedFunction
isInstantiationMethodPsiElement
isBindsMethod!PsiType
isSubcomponentCreatorTypePsiField
isInjected&PsiElement
isDaggerSubcomponentFactory'PsiElement
isClassOrObjectAnnotatedWithPsiElement
isDaggerSubcomponentPsiMethod
isInDaggerModule0PsiElement
isDaggerEntryPointInstantiationMethod PsiElement
isInjectedConstructorPsiClass
isParentOfPsiMethod
isInstantiationMethodPsiElement
isDaggerModuleKtAnnotated
isInjected
Class
from"GradleDslFile
getPropertiesElement$GradleScriptFile
transitivelyAppliesGradleDslElement
getBlockParentString
addQuotes*KtStringTemplateExpression
literalContentsPsiElement
isParentOfKtCallExpression
isBlockElementKtCallExpression
name%AndroidDeviceSpec
writeToJsonTempFileAndroidDeviceSpec
writeJsonIDevice
createSpec@IdeBuildTasksAndOutputInformation
getOutputListingFileOrLogError#Collection
variantOutputInformation6IdeBuildTasksAndOutputInformation
getOutputListingFile&AndroidModule
buildVariantNameResolver/ExternalSystemTaskId
isGradleResolveProjectTaskAny
LOG)AndroidModule
adjustForTestFixturesSuffixList
projectsCollection
toSyncIssueDataCollection
toV2SyncIssueDataModule
getModuleIdVariantSelectionChange
formatVariantDetails
applyChange Collection
getDefaultOrFirstItemLibraryInfo
toIdentity&Library
getJarFilesForRuntimeClasspathMutableSet
generateLibraryNameIdeAndroidSyncError
toExceptionCollection
findVersionString
removeSourceSetSuffix*String
removeSourceSetSuffixFromModuleName1String
removeSourceSetSuffixFromExternalProjectIDSdkSync
syncAndroidSdks#AndroidSdks
findMatchingSdkForAddon'AndroidSdks
computeSdkReloadingAsNeededDataNode
getSelectedVariants"DataNode
repopulateProjectDataWith!Project
getSelectedVariantAndAbisDataNode
getAndroidModules9ExternalProjectInfo
findAndSetupSelectedCachedVariantData#AndroidModules
getAffectedModuleIds(DataNode
setupAndroidDependenciesForMpss IdeArtifactLibrary
isModuleLevel%DataNode
findSourceSetDataForArtifact*DataNode
setupAndroidDependenciesForModule!DataNode
setupCompilerOutputPathsIdeSourceProvider
processAll"IdeVariant
processGeneratedSources#DataNode
setupAndroidContentEntries/DataNode
setupAndroidContentEntriesPerSourceSetProject
fixRunConfigurationsSyncIssueUsageReporter
collectInt
toGradleSyncIssueType)NotificationHyperlink
toSyncIssueQuickFix
Any
formatNdkModuleModel
formatCollection
formatGradleAndroidModel
formatNdkVariant
formatDataNode
dumpProjectDumper
headProjectDumper
prop ProjectDumper
dumpNdkModuleModelProjectDumper
dumpNdkIdeModelString
toSystemIndependentProjectDumper
dumpLibraryProjectDumper
dumpJdkProjectDumper
dumpProjectString
nullizePrefixedWith AndroidFacet
shouldDumpFullFacet3ProjectDumper
dumpAllVariantsSyncAndroidModuleModel!ProjectDumper
dumpAndroidIdeModel%BuildOutputInstantReader
peekPrevious$MatchResult
capturedRegexGroupValues,MatchResult
capturedOptionalRegexGroupValuesString
takeWhileFromIndexString
safeToIntOrDefaultListenableFuture
whenFinishedTestCompileType
getArtifacts String
indexOfFirstNonWhitespace$GradleVersion
higherOrEqualToMinimalFile
readIndexFile,GradleAndroidModel
collectAllSourceProviders1GradleAndroidModel
collectUnitTestSourceProviders5GradleAndroidModel
collectTestFixturesSourceProviders8GradleAndroidModel
collectAllTestFixturesSourceProviders7GradleAndroidModel
collectAllAndroidTestSourceProviders)GradleAndroidModel
collectAllProvidersFor4GradleAndroidModel
collectAllUnitTestSourceProviders4GradleAndroidModel
collectAndroidTestSourceProviders-GradleAndroidModel
collectMainSourceProviders-GradleAndroidModel
collectCurrentProvidersFor"GradleBuildModel
emulatorSnapshots!GradleBuildModel
failureRetentionGradleBuildModel
moduleKind2AgpUpgradeRefactoringProcessor
trackProcessorUsage;AgpUpgradeComponentRefactoringProcessor
trackComponentUsage0AgpUpgradeComponentNecessity
checkboxToolTipTextGradleVersion
upgradeLabelText(AgpUpgradeComponentNecessity
description)AgpUpgradeRefactoringProcessor
components;AgpUpgradeRefactoringProcessor
activeComponentsForNecessity%AgpUpgradeComponentNecessity
treeText GradleVersion
contentDisplayNameProject
findPluginInfo-AndroidPluginInfo
maybeRecommendPluginUpgradeProject
getModuleByGradlePath'ProjectBuildModel
getModuleByGradlePathProjectBuildModel
modules"PsQuickFix
getHyperlinkDestinationPsQuickFix
serializePsProjectImpl
testResolve;PsResolvedModuleDependency
targetModuleResolvedDependencies%PsArtifactDependencySpec
toLibraryKeyPsModule
relativeFilePsModule
resolveFileArtifactDependencyModel
toKeyFileTreeDependencyModel
toKeyModuleDependencyModel
toKey=PsResolvedDependencyCollection
matchJarDeclaredDependenciesInFileDependencyModel
toKeyCollection
combineKnownValues&GradleBuildModel
parsedModelModuleTypePsPath
parents#ModelPropertyContext
valueFormatterModelPropertyCore
getValue2ModelPropertyCore
annotateParsedResolvedMismatchByModelDescriptor
getValueResolvedPropertyModel
clear$ResolvedPropertyModel
getParsedValueResolvedPropertyModel
asInt$ResolvedPropertyModel
setParsedValueResolvedPropertyModel
asFile ResolvedPropertyModel
setDslText&ResolvedPropertyModel
setLanguageLevelResolvedPropertyModel
asAny%ResolvedPropertyModel
asLanguageLevelResolvedPropertyModel
asStringResolvedPropertyModel
asBooleanResolvedPropertyModel
asUnitResolvedPropertyModel
dslTextModelDescriptor
propertyList
toPredicate'ModelListProperty
withFileSelectionRoot)ModelSimpleProperty
withFileSelectionRoot'ResolvedPropertyModel
asParsedListValueModelDescriptor
listProperty.ResolvedPropertyModel
asResolvedPropertiesList!ResolvedPropertyModel
addListItem$ResolvedPropertyModel
deleteListItemParsedValue
maybeLiteralValueAny
annotateWithErrorParsedValue
maybeValueParsedValue
getTextAny
annotatedNotSet
annotatedAny
annotateWith'ResolvedPropertyModel
changeMapEntryKey-ResolvedPropertyModel
asResolvedPropertiesMap&ResolvedPropertyModel
asParsedMapValue$ResolvedPropertyModel
deleteMapEntry!ResolvedPropertyModel
addMapEntryModelDescriptor
mapProperty"IdeBaseConfig
kotlinUnitWorkAround ListProperty
withProFileSelector&SearchResult
toVersionValueDescriptorsString
toBooleanOrNullString
toIntOrStringPsModule
addJarDependency'ConfigurablesTreeModel
updateChildrenOfMyNode
childNodes%ConfigurablesTreeModel
initializeNodeMyNode
findChildForMyNode
getModel2ModelPropertyContext
createDefaultEditorExtensions MergingUpdateQueue
enqueueTagged!ArtifactSearchQuery
toSearchQeuryString
parseArtifactSearchQueryStatusText
toRenderer!SimpleColoredComponent
toRendererListenableFuture
invokeLaterListenableFuture
continueOnEdt#ListenableFuture
handleFailureOnEdtJBTabbedPane
selectedTitleProject
logUsageTopNavigateToShadowedTreeNode
childNodes!DefaultTreeModel
updateChildrenOfDefaultTreeModel
initializeNodeJComponent
patchScrollingJTable
addTabKeySupportToJTable
selectCellJTable
prevCellJTable
nextCellAnnotated
renderToParsedValue
renderTo#TextRenderer
toSelectedTextRendererAny
renderAnyTo,VariablesTable
createChooseVariableTypePopup#FoundArtifact
getRepositoryPriorityFuture
getResultSafelyCollection
combine"String
toWildcardMatchingPredicateKtFunction
psiType(KtAnnotationEntry
findArgumentExpressionKtClass
getQualifiedNameKtClass
insideBody&KtExpression
tryEvaluateConstantAsTextKtClass
toPsiTypeKotlinType
isSubclassOf#KtAnnotationEntry
findValueArgument"KtAnnotationEntry
getQualifiedNameKtAnnotated
hasAnnotationKtAnnotationEntry
fqNameMatches$KtExpression
getNextInQualifiedChainKtParameter
psiTypeKtProperty
psiTypeKotlinType
getQualifiedName KtExpression
tryEvaluateConstantKtNamedFunction
getClassNameEditorEx
isCaretAtBottomEditorEx
isScrollAtBottomPsiElement
toTextPsiElement
isTopLevelValueString
isSurroundedByPsiElement
asLogLevelPsiElement
asDuration)LogcatFilterLiteralExpression
toKeyFilterRangeMarker
isReallyValidRange
applyRange#DateTimeFormatterBuilder
appendTime+DatabaseInspectorMessenger
sendCommandAsync&DatabaseInspectorMessenger
sendCommandString
ellipsize#SqliteDatabaseId
isInMemoryDatabase SqliteStatement
isQueryStatementSqliteStatement
transform(DatabaseInspectorModel
getAllDatabaseIdsJLabel
setFixedWidthSqliteTable
convertToSqlTable#Connection
resolvePreparedStatement%Connection
getColumnNamesInPrimaryKeyResultSet
mapList
toSqliteSchemaListenableFuture
mapToColumnsCellValue
toSqliteColumnValueColumn
toSqliteColumn%KtAnnotationEntry
isPreviewAnnotationUAnnotation
getIntAttributeUAnnotation
isPreviewAnnotationUAnnotation
getFloatAttributeUAnnotation
toPreviewElementUAnnotated
findAnnotationUAnnotation
findClassNameValue$UAnnotation
findPreviewDefaultValues#UAnnotation
findAttributeFloatValueUAnnotation
getStringAttribute!UAnnotation
findAttributeIntValue NlDesignSurface
logSurfaceStatus(NlDesignSurface
updatePreviewsAndRefresh.NlDesignSurface
refreshExistingPreviewElementsPreviewElement
asPinnedElementPsiElement
containingPath"KtParameter
isAcceptableForPreviewKtValueArgument
exceedsLimit3ComposePreviewManager
isInStaticAndNonAnimationModeSequence
groupNames+GlobalState
preferredKotlinEditorVisibility/GlobalState
preferredComposableEditorVisibility#FileEditor
getComposePreviewManager#RenderResult
findComposeViewAdapterVirtualFile
getSourceFilePsiElement
toKeyableStringUElement
toSmartPsiPointerDuration
toDisplayStringSegment
containsOffset!RenderResult
isComposeErrorResult$DesignSurface
layoutlibSceneManagers,LayoutlibSceneManager
invalidateCompositions*LayoutlibSceneManager
requestComposeRender-LayoutlibSceneManager
changeRequiresReinflate.PreviewConfiguration
applyConfigurationForTest&KtNamedFunction
isValidPreviewLocation+PreviewElement
previewProviderClassAndIndexPreviewElement
sourceOffsetPreviewConfiguration
applyToInt
truncate%KtNamedFunction
isValidComposePreview)Collection
sortByDisplayAndSourcePositionKtClass
hasDefaultConstructor%DataContext
getPreviewElementInstanceBuildStatus
isSuccessOrUnknown&List
visibleOnlyInComposeStaticPreview*AnAction
visibleOnlyInComposeStaticPreviewDeviceConfig
toMutableConfigStringBuilder
appendSeparatorStringBuilder
appendParamValue%MutableDeviceConfig
toImmutableConfigDevice
toDeviceConfig$Collection
findOrParseFromDefinitionCollection
findByIdOrName!DeviceConfig
createDeviceInstanceEditorProvider
createEditorInspectorPanel
addSectionLabelDeviceEnumValueBuilder
addWear!DeviceEnumValueBuilder
addGenericDeviceEnumValueBuilder
addPhone DeviceEnumValueBuilder
addTabletDeviceEnumValueBuilder
addAutoDeviceEnumValueBuilder
addTvString
isHexString
isValidFormat.AnimationToolingEvent
createAndroidStudioEventSourceLocation
toNavigatablePxBounds
areaPxBounds
isNotEmptyPxBounds
containsPoint ComposeViewInfo
findHitWithDepthPxBounds
isEmptyComposeViewInfo
findDeepestHitsList
findHitWithDepth.SourceLocation
asSourceLocationWithVirtualFile#KtAnnotationEntry
providerClassName)KtNamedFunction
composePreviewFunctionFqn5ConfigurationContext
containingComposePreviewFunction Module
isNonLibraryAndroidModule#AndroidModuleSystem
isPickerEnabledMap
buildDeviceSpecStringSmartPsiElementPointer
isValid>LiveLiteralsDeploymentReportService
hasDeviceOrEmulatorRunningProject
isComposeSeverity
toNotificationSeverity2LiteralReferenceSnapshot
highlightSnapshotInEditorShortcutSet
asStringDeviceType
protoTypeProject
getLastSyncTimestampPoint
rotatedPoint
scaledDimension
scaledContainer
sizeWithoutInsetsProject
earlyDisposableInt
scaledDownInt
scaledUpDimension
rotated&Snapshot
withLogicalNameAndDescription'ListSelectionModel
isSingleItemSelected:MaterialIconsMetadataDownloadService
refreshAndGetMetadataNlModel
schemaSceneComponent
flattenSceneComponent
getPositionDataNlComponent
setClassNameAndLogNlComponent
startDestinationNlComponent
parentSequenceNlComponent
autoVerifyNlComponent
setNullableAndLogNlComponent
inclusive'NlComponent
setStartDestinationIdAndLogNlComponent
getActionTypeNlComponent
argumentNameNlComponent
isStartDestination"NlComponent
setExitAnimationAndLogNlComponent
setLayoutAndLogNlComponent
deepLinkMimeTypeNlComponent
setUriAndLogNlComponent
includeAttributeNlComponent
supportsElementNlComponent
supportsActionsNlComponent
createNestedGraphNlComponent
enterAnimationNlComponent
isActionNlComponent
containsDestinationNlComponent
isSelfActionNlComponent
exitAnimationNlComponent
startDestinationIdNlComponent
isDestination%NlComponent
setDeeplinkMimeTypeAndLog#NlComponent
setEnterAnimationAndLogNlComponent
popUpToNlComponent
actionDestinationIdNlComponent
getEffectiveSourceNlComponent
actionDestination(NlComponent
setActionDestinationIdAndLogNlComponent
setSingleTopAndLogNlComponent
layoutNlComponent
supportsArgumentsNlComponent
popExitAnimation!NlComponent
setDefaultValueAndLogNlComponent
popEnterAnimationNlComponent
classNameNlComponent
visibleDestinationsNlComponent
getArgumentNamesNlComponent
isOtherNlComponent
isNavigationNlComponent
uri NlComponent
effectiveDestinationNlComponent
includeFileNlComponent
setInclusiveAndLogNlComponent
includeFileNameNlComponent
createSelfActionNlComponent
createActionNlComponent
isActivity"NlComponent
findVisibleDestinationNlComponent
destinationTypeNlComponent
idPathNlComponent
typeAttr&NlComponent
createReturnToSourceActionNlComponent
defaultValueNlComponent
deepLinkActionNlComponent
setPopUpToAndLog%NlComponent
setPopExitAnimationAndLogNlComponent
supportsDeeplinks"NlComponent
effectiveDestinationId!NlComponent
setAsStartDestinationNlComponent
singleTop#NlComponent
setDeeplinkActionAndLogNlComponent
isArgumentNlComponent
nullableNlComponent
setTypeAndLogNlComponent
setAutoVerifyAndLogNlComponent
isFragmentNlComponent
isIncludeNlComponent
uiName&NlComponent
setPopEnterAnimationAndLog!NlComponent
setArgumentNameAndLogFileGroupNode
canRepresentFolderGroupNode
canRepresentModule
isIgnoredRootModuleList
startsWith@ProjectSystemSyncManager
maybeWaitForAnySyncOutcomeInterruptibly;ProjectSystemSyncManager
waitForAnySyncOutcomeInterruptiblyHtmlBuilder
addShowExceptionHtmlBuilder
addBuildActionMethod
toMethodTypeClass
findMethodLike"String
fromPackageNameToBinaryNameClassVisitor
uniqueId"String
fromBinaryNameToPackageName)GeneratorAdapter
writeConstantLoadingCodeString
isSystemPrefixProject
logUsagePsdActionProject
logUsageLeftNavigateTo%EmulatorController
deleteSnapshotSync+EmulatorController
pushAndLoadAndDeleteSync#EmulatorController
pushSnapshotSync#EmulatorController
loadSnapshotSync#StringParameter
uniquenessSatisfiedConstraint
toResourceFolderType"StringParameter
validateStringType4StringParameter
getErrorMessageForViolatedConstraintStringParameter
validate+TransportServiceBlockingStub
eventGroupFlowCharSequence
squishEmptyLinesInt
containsStreamObserver
onLastEventGrouping
addEventGrouping
remove%ConfigurationManager
getPreviewConfigVirtualFile
getConfiguration5NlModel
currentActivityIsDerivedFromAppCompatActivity NlModel
moduleDependsOnAppCompat$NlModel
overrideConfigurationDensity,LayoutlibSceneManager
executeInRenderSession&LayoutlibSceneManager
executeCallbacksNlComponent
createChildNlComponent
setBoundsNlComponent
getPadding"NlComponent
isMorphableToViewGroupNlComponent
xNlComponent
containsNlComponent
hNlComponent
viewHandlerNlComponent
needsDefaultId NlComponent
getMostSpecificClassNlComponent
ensureLiveIdNlComponent
getBaseline%NlComponent
isOrHasAndroidxSuperclassNlComponent
isGroupNlComponent
componentClassNameNlComponent
isOrHasSuperclassNlComponent
marginsNlComponent
yNlComponent
hasNlComponentInfoNlComponent
wNlComponent
nlComponentDataNlComponent
viewInfoNlComponent
containsYNlComponent
containsXNlComponent
paddingNlComponent
viewGroupHandler)GlobalState
preferredDrawableSurfaceState!GlobalState
preferredSurfaceState&PreferredVisibility
toTextEditorLayout"VirtualFile
hasSourceFileExtension1CustomConfigurationAttribute
toNamedConfigurationConfiguration
toTooltipsConfiguration
toHtmlTooltipDeviceGroup
orderOfOptionDesignSurface
isActionSupported ValidatorResult
toDetailedStringGraphics2D
drawMultilineStringCollection
sortByPositionCollection
maxOfCollection
sumOf#AndroidFacet
hasMaterial3DependencyPropertiesTable
getStringValueNlPropertyItem
writeValueAnchor
toDrawDirectionAnchor
toOppositeAnchorAnchor
toOppositeDrawDirectionPxBounds
toSwingRectangleSceneComponent
drawBottomSceneComponent
drawRightSceneComponent
drawCenterXSceneComponent
drawCenterYSceneComponent
drawLeftInt
toDpStringSceneComponent
drawTop,SceneComponent
retrieveBottomMarginAttribute1SceneComponent
retrieveAlignParentBottomAttribute+SceneComponent
retrieveRightMarginAttribute)SceneComponent
retrieveTopMarginAttribute'SceneComponent
retrieveToRightAttributeSceneContext
getSwingY%SceneComponent
retrieveBelowAttribute(SceneComponent
retrieveAlignTopAttribute/SceneComponent
retrieveAlignParentLeftAttribute*SceneComponent
retrieveAlignRightAttribute%SceneComponent
retrieveAboveAttribute*SceneComponent
retrieveLeftMarginAttributeSceneComponent
getRightSceneComponent
getTopSceneComponent
getDrawCenterY0SceneComponent
retrieveAlignParentRightAttributeSceneContext
getSwingX+SceneComponent
retrieveAlignBottomAttributeSceneComponent
getLeft&SceneComponent
retrieveToLeftAttributeSceneComponent
getDrawCenterX)SceneComponent
retrieveAlignLeftAttributeSceneComponent
getBottom.SceneComponent
retrieveAlignParentTopAttributeColor
withAlphaPsiClass
extendsView&FileEditor
getCustomViewPreviewManagerPsiFile
containsViewSuccessor#ReentrantLock
withLockAndReadAccessListenableFuture
transformAsync ListenableFuture
cancelOnDisposeListenableFuture
transformExecutor
executeAsyncListenableFuture
finallySync"ListenableFuture
toCompletionStageList
listenInPoolThreadListenableFuture
ignoreResultFuture
listenInPoolThread'ListenableFuture
transformAsyncNullableListenableFuture
addCallbackList
whenAllComplete"ListenableFuture
transformNullableListenableFuture
catchingListenableFuture
catchingAsyncFuture
getDoneOrNullCoroutineScope
createChildScopeDeferred
getCompletedOrNullProject
coroutineScope!AndroidFacet
isViewBindingEnabled$Project
getViewBindingEnabledTrackerProject
getViewBindingClassNameXmlFile
findVariableTagXmlFile
findIdAttributeXmlTag
findIdAttributeXmlFile
findImportTagXmlFile
findDataTag(AndroidFacet
isRelevantForScopeEnlarging!AndroidFacet
getLocalBindingScope)BindingLayoutGroup
getAggregatedVariablesServerFlag
ValueApplicationInfo
versionStringServerFlagData
isOSEnabledIDevice
getAppVersionCodeIDevice
hasPairingFeatureIDevice
getSecureSetting!IDevice
getCompanionAppIdForWatch"PairingDeviceState
toPairingDevice"PairingDevice
toPairingDeviceStateIDevice
executeShellCommandIDevice
killGmsCoreIDevice
loadNodeIDIDevice
isCompanionAppInstalledIDevice
loadCloudNetworkIDIDevice
retrieveUpTimeIDevice
runShellCommand!IDevice
refreshEmulatorConnectionIDevice
restartGmsCoreIDevice
getDeviceIDIDevice
isPhysicalPhoneAvdInfo
toPairingDeviceIDevice
toPairingDeviceIDevice
getDeviceNameAvdInfo
isWearOrPhone ArtifactCoordinate
blazeFileName%ArtifactCoordinate
toGradleCoordinate$AppInspectionApiServices
findVersionPairingDevice
isDisabledPairingDevice
getTooltipFuture
await4AppInspectorTabProvider
toIncompatibleVersionMessage/ArtifactCoordinate
toUnresolvedInspectorMessage1InspectorArtifactService
getOrResolveInspectorJar DeviceDescriptor
buildDeviceNameDeviceDescriptor
toIcon"ProcessDescriptor
buildProcessNameDeviceDescriptor
toDeviceInfoCommand
toExecuteRequestProcessDescriptor
isInspectableDevice
toDeviceDescriptorIDevice
isPackageDebuggableDevice
findDeviceDevice
isDebuggable&AppInspectorMessenger
awaitForDisposal"AppInspectionResponse
getException3LibraryCompatibilityInfo
toLibraryCompatibilityInfoFlow
scopeCollectionCoroutineScope
commandSenderHttpData
codeLocationsList
findEndIndexList
findStartIndexCoroutineScope
processEventsState
capitalizedNameString
capitalizedNameBackgroundTaskEntry
iconEvent
getId3Project
cacheByClassInvalidatingOnSyncModifications,Project
cacheInvalidatingOnSyncModificationsString
toFileString
stripPrefix,SourceProviders
buildNamedModuleTemplatesFor NamedIdeaSourceProvider
coreName!SourceProviders
buildTripletsFrom AndroidModuleSystem
getScopeTypeModule
getTestFixturesModuleModule
getMainModuleModule
isHolderModuleModule
getAllLinkedModulesModule
isAndroidTestModuleModule
getHolderModuleModule
isMainModuleModule
getAndroidTestModule#AndroidModuleSystem
getResolveScopeModule
isUnitTestModuleModule
getUnitTestModuleModule
isLinkedAndroidModuleString
convertToUrlFile
appendPackageToRootSequence
toVirtualFilesModule
getModuleSystemAndroidFacet
getModuleSystemPsiElement
getModuleSystemProject
getAndroidFacetsProject
getSyncManager#Project
getAndroidModulesForDisplayProject
getProjectSystem1AndroidFacet
getFlavorAndBuildTypeManifestsOfLibsAndroidFacet
getNavigationFiles)AndroidFacet
getTransitiveNavigationFilesSequence
flatMapWithoutNulls8AndroidModuleSystem
defaultGetMergedManifestContributors+AndroidFacet
getFlavorAndBuildTypeManifests-GradleProjectPathFromCore
toGradleProjectPath%GradleProjectPath
toGradleProjectPath%IdeModuleLibrary
getGradleProjectPath"BuildMode
toProjectSystemBuildMode&BuildStatus
toProjectSystemBuildStatusIdeaSourceProvider
containsFileIterable
findByFileSourceProviders
getForFile&IdeaSourceProvider
allSourceFolderUrls!IdeaSourceProvider
findSourceRoot IdeaSourceProvider
isContainedBy#IdeaSourceProvider
allSourceFoldersAndroidFacet
isManifestFileAndroidFacet
sourceProvidersAndroidFacet
getManifestFilesModule
isGradleVersionAtLeastModule
getGradleVersion7AssembleInvocationResult
getBuiltApksForSelectedVariantIdeAndroidArtifact
scopeType%AndroidTestResults
getRoundedDurationAndroidTestResultStats
plus&AndroidTestResults
getFullTestCaseName*AndroidTestResults
isRootAggregationResult'AndroidTestResultStats
getSummaryResult*AndroidTestResults
getRoundedTotalDuration'AndroidTestResults
getFullTestClassNameAndroidDevice
getNameLong
formatTimeString
escapeHtml+AggregationRow
toAndroidTestResultsTreeNodeTimestamp
millis AndroidTestDeviceInfo
deviceTypeTestResult
getDeviceInfo!AndroidTestDeviceInfo
displayName#TestStatus
toAndroidTestSuiteResult"TestStatus
toAndroidTestCaseResultTestCase
toTestIdentifierInt
toPxDouble
toPxInt
toDpModule
getDefaultThemeModule
getAllActivityThemeNamesModule
getThemeNameForActivityModule
getAppThemeNameAnActionEvent
treeAnActionEvent
treePanelFloat
scaleAndroidDebugBridge
findDeviceAndroidDebugBridge
findClientIDevice
findClient&AndroidDebugBridge
executeShellCommand$AndroidDebugBridge
startShellCommand Component
firstComponentWithName#JBTabbedPane
selectTabWithComponentComponent
firstComponentOfClassFoldState
convertAppContext
convertResource
convertConfiguration
convertFoldEvent
convert%ProgressCheckpoint
toAttachErrorStateFoldOrientation
convertLocale
convertType
toImageTypeKind
convertParameterReference
convertMetadata
convertProtocolVersion
toIntCellBuilder
focusInWindowIfJBPanel
paintPanelImageFloat
applyInsetsFloat
applyInsetGraphics2D
setColorAndAlphaJComponent
registerActionKey$JComponent
registerActionShortCutSetJComponent
registerAnActionKey
Int
moduloAnActionEvent
locationFromEvent'AnActionEvent
componentToRestoreFocusTo AnActionEvent
componentFromEventContent
getPositionContent
isSplittingTabContent
findFirstSplitter JComponent
wrapInDesignSurfaceUIInt
toHexStringFloat
toRoundString'CallableDescriptor
isComposableCallable+ResolvedCall
isReadOnlyComposableInvocation#ResolvedCall
isComposableInvocation'CallableDescriptor
isMarkedAsComposableList
hasComposableAnnotation KotlinType
isClassOrExtendsClass"Module
findComposeToolingNamespaceModule
hasUiPreviewArtifacts!Annotated
hasComposableAnnotationKotlinType
isSpecialTypeKotlinType
makeComposable.Annotated
hasDisallowComposableCallsAnnotation)Annotated
hasReadonlyComposableAnnotation+AnnotationDescriptor
isComposableAnnotation"KotlinType
hasComposableAnnotation!PsiElement
isInsideComposableCodePsiElement
isComposableFunction!PsiElement
isComposableAnnotation,InsertionContext
isNextElementOpenCurlyBrace-InsertionContext
isNextElementOpenParenthesis#LookupElement
getFunctionDescriptorList
hasComposableChildren)List
isLastRequiredLambdaWithNoParameters1InsertionContext
getNextElementIgnoringWhitespaceInsertionContext
inferCallType1ValueParameterDescriptor
isLambdaWithNoParameters#CompletionParameters
isForStatement1PsiElementPattern
withConstraintSetsParentAtLevel$CompletionResultSet
addLookupElement+PsiElementPattern
withPropertyParentAtLevelJRadioButton
setListModel
contains)AndroidFrameTimelineEvent
getPassiveColor(AndroidFrameTimelineEvent
getActiveColorContainer
getOpaqueContainerAny
copyFromRange
setUnlessSameAsMutableList
asTableModelCaptureNode
descendantsCpuCapture
offsetCaptureNode
rangePresentType
getTitleJankType
getTitleIterable
padded$LineChart
configureStackedFilledLineCollection
getDefault!LazyMemoryObjectTreeNode
addChildEventGroup
lastDouble
microsToNanosLong
microsToNanosList
groupedByPhaseList
renumberedJPanel
addMigrationPanelNodeType
toSearchStringNodeType
childrenOfNodeType
parentOfVirtualFile
text#List
buildMultipleEvaluationsConfigLookup
selectedWithoutPrefixList
ofSourceFile
compress	Any
chainRow
projectLocationFieldRow
hyperLink$SemRegistrar
registerUastSemProvider3PsiReferenceRegistrar
registerUastReferenceProvider6PsiReferenceRegistrar
registerReferenceProviderByUsageTaskContext
highlightRunGutters!PsiParameter
extractParameterDataPsiMethod
signatureParameter
annotations'PsiJvmModifiersOwner
extractAnnotations2SuggestedChangeSignatureData
correctParameterTypesSignature
exceptionTypesPsiMethod
extractExceptionsSignature
annotationsSignature
origArgumentsPsiMethod
visibilitySignature
visibilityList
groupActionsByType#PsiMethod
extractSetterTemplateData#PsiMethod
extractGetterTemplateDataPsiModifierListOwner
setStaticTemplateContext
setupParameters TemplateContext
setupTypeElement"TemplateContext
setupParameterNameJvmClass
toJavaClassOrNullList
orObjectKind
infoKindPsiType
toExpectedType%PsiExpression
isWithinConstructorCall"PsiExpression
isWithinStaticMemberPsiExpression
isInStaticContext$PsiExpression
isWithinStaticMemberOfUElement
createUastSmartPointerKtClass
getImplVersionKtClass
getApiVersionKtClass
isAbstractEntityKtClass
isWorkspaceEntityContainer
panel"StatusText
setEmptyTextPlaceholderJComponent
configureString
trimToNullCollection
toLinkedSetRuleMatch
toIntRangeEnumeration
toSetBoolean
orFalseBoolean
orTrueFlowContent
nbsp	TD
valignTABLE
cellpadingTABLE
cellspacingIntRange
isAtEndASTNode
noParentOfTypesPsiElement
filterForIntRange
isAtStart#PsiElementProcessor
processElementsPsiElement
toPointer#FlowOrPhrasingContent
toCorrectHtmlFlowOrPhrasingContent
toHtml%FlowOrPhrasingContent
toIncorrectHtmlExampleSentence
textRuleMatch
messageSanitizedLanguage
hasWhitespacesLanguage
toLangLang
toLanguageAny
setEmptyState!ValidationInfoBuilder
validateSdkRow
sdkComboBoxRowV1
sdkComboBox'PsiElement
findCorrespondingVirtualFile"ProcessingContext
withRequestedPsi"QuotaOptionsMessage
toQuotaOptionsQuotaStateMessage
toQuotaState0CustomPackagingElementEntity
unpackCustomElement PackagingElementEntity
toElement2CompositePackagingElementEntity
toCompositeElement%PackagingElementEntity
unknownElementList
pushTo ArtifactProperties
propertiesTag#PackagingElementEntity
sameTypeWith#PackagingElement
forThisAndFullTreeEntityStorage
get$MutableEntityStorage
mutableElementsEntityStorage
elementsLookupElement
idStringLookup
prefixLookupImpl
languageLookupImpl
queryLength(DailyAggregatedDoubleFactor
aggregateMin,DailyAggregatedDoubleFactor
aggregateAverage#DailyAggregatedDoubleFactor
onTodayMutableDoubleFactor
setOnDate(DailyAggregatedDoubleFactor
aggregateMax'DailyAggregatedDoubleFactor
aggregateBy(DailyAggregatedDoubleFactor
aggregateSumList
areSequentialPsiParameter
isAssignablePsiParameter
typeTextPsiType
isAssignableTo-PsiModifierListOwner
hasNullabilityAnnotationProblemsHolder
registerUProblemUClass
isLocalUClass
isAnonymousOrLocalPsiType
isInheritorOfUClass
allInnerClassesUFile
allClassesULambdaExpression
getReturnTypeUAnnotated
findAnnotationsBuilder
languageLevel&JavaModuleSettingsEntity
languageLevelDefType
implIjWsFileContentsKtBlock
visitRecursivelyKtAnnotations
containsKProperty
fqn
KClass
fqnKFunction
fqn	Class
fqnTStructure
allNonSystemFieldsTStructure
builderFieldsType
javaImplBuilderNameType
javaSuperTypeType
javaImplNameTStructure
fieldsToStoreType
javaImplSuperTypeType
javaBuilderNameType
javaFullNameType
javaSimpleNameType
javaImplFqnCollection
indentCollection
sumString
indentAllString
codeTemplateCollection
commaSeparatedCollection
andCollection
linesString
indentRestOnlyValueType
isRefTypeWithoutListTStructure
vfuFieldsValueType
isListValueType
getRefTypeTStructure
allRefsFieldsValueType
isRefTypeValueType
isVfuTypeMemberOrExtField
getParentFieldTStructure
refsFieldsDefType
generatedExtensionCodeDefType
generatedApiCodeField
wsBuilderApiDefType
implWsCodeField
refsConnectionMethodCode%MemberOrExtField
refsConnectionIdCode!MemberOrExtField
refsConnectionIdExtField
wsCode"KotlinWriter
addGeneratedCodeBlockKtFile
rewriteKotlinWriter
addExtensionBlockField
javaMetaNameMemberOrExtField
implFieldNameField
isOverrideField
suspendableGetterNameMemberOrExtField
javaNameString
getterWithSetterField
refNamesField
constructCodeValueType
javaBuilderTypeValueType
unsupportedTypeErrorValueType
javaTypeValueType
javaMutableTypeValueType
kotlinTypeField
builderApi	Field
apiField
implWsDataBlockCode$Field
implWsDataFieldInitializedCodeField
implWsDataBlockingCodeField
implWsDataFieldCode MemberOrExtField
referencedFieldField
implWsEntityFieldCode Field
implWsBlockingCodeOverrideField
implWsBlockingCodeField
implWsBlockCodeLinesBuilder
conditionalLineLinesBuilder
listBuilderLinesBuilder
forLinesBuilder
lineCommentLinesBuilder
listNlLinesBuilder
listLinesBuilder
lineWrappedLinesBuilder
ifElseLinesBuilder
sectionNlLinesBuilder
elseLinesBuilder
ifLinesBuilder
wrapperObjType
implWsEntityBuilderCodeObjType
operateUpdateLinkTBlob
getDataClassString
cleanObjType
operateValueType
operateTBlob
isSealedClassDefType
ispersistentIdField
hasSoftLinksObjType
hasSoftLinksValueType
processTypeTBlob
isPersistentIdTBlob
hasSoftLinksTBlob
isDataClassDefType
isSealedClassObjType
softLinksCodeObjType
implWsEntityCode#ValueType
implWsBuilderBlockingCode+LinesBuilder
implWsBuilderIsInitializedCodeValueType
addVirtualFileIndex"LinesBuilder
isInitializedBaseCodeField
implWsBuilderFieldCodeLinesBuilder
backrefSetupLinesBuilder
backrefListSetupList
noPersistentId ObjType
isEntityWithPersistentIdList
noOptionalList
noEntitySourceObjType
javaDataNameDefType
implWsDataClassCode	List
noIdList
noSnapshotList
noRefsList
noDefaultValueString
toClassNameListPopupImpl
navigateOnF4WizardPopup
onShiftReleased!TestLocator
getNavigatableElement ListPopupImpl
selectOnShiftEnterWizardPopup
onShiftPressedSuiteEntry
isMyTestList
processStringKeysJsonObjectBuilder
describeEnumPyType
getVariantsPsiElement
getAncestorsSortedMap
topResultIsVirtualFile
toNioPathOrNull)TargetEnvironmentFunction
toStringLiteralString
toStringLiteral.PythonExecution
applyHelperPackageToPythonPathATargetEnvironmentRequest
ensureProjectSdkAndModuleDirsAreOnTargetTargetedCommandLine
execute*PythonExecution
addPythonScriptAsParameterCollection
joinToPathValue(PythonExecution
disableBuiltinBreakpointPythonExecution
extendEnvs#PythonExecution
addParametersString"PythonExecution
appendToPythonPath(PythonExecution
buildTargetedCommandLine(RunProfileState
isTargetBasedSdkAssignedRunProfileState
getModuleDataContext
virtualFileVirtualFile
findPythonSdk'GeneralCommandLine
findExecutableInPath(PyRemotePathMapper
convertToRemoteOrNull,PyRemotePathMapper
extendPythonSdkPathMapperModule
basePathModule
baseDirSdk
adminPermissionsNeededSdk
associateWithModulePyDetectedSdk
setupAssociatedPyDetectedSdk
setupTargetAwareSdk
targetEnvConfigurationSdk
isSystemWideSdk
getOrCreateAdditionalDataProject
pythonSdk$Sdk
associatedPathFromAdditionalDataSdk
targetAdditionalDataSdk
sitePackagesDirectoryModule
pythonSdk!Sdk
isAssociatedWithAnotherModulePyDetectedSdk
setupSdk
isLocatedInsideModuleSdk
associatedModuleDirSdk
isAssociatedWithModuleSdk
containsModuleNameSdk
associatedModulePathSdk
isLocatedInsideBaseDir Sdk
associatedPathFromDotProjectSdk
remoteSdkAdditionalDataFile
isNotEmptyDirectorySdk
sdkFlavorProject
excludeInnerVirtualEnvModule
excludeInnerVirtualEnvSdk
remoteSourcesLocalPath"PyDetectedSdk
guessedLanguageLevel,SimpleColoredComponent
customizeWithSdkValue!SimpleColoredComponent
appendNameSdk
asComboBoxItem(PySdkPathChoosingComboBox
removeAllItems.TargetEnvironmentConfiguration
isMutableTarget1TextFieldWithBrowseButton
addBrowseFolderListener+TextFieldWithBrowseButton
withTargetBrowserSdk
packageManagerSdk
pipFileLockRequirementsModule
pipFileLockSdk
parsePipFileLockSdk
pipFileLockModule
pipFileSdk
pipFileLockSourcesPropertiesComponent
pipEnvPathSdk
isPipEnvFile
appxProductPropertiesComponent
poetryPathSdk
poetrySourcesModule
pyProjectTomlModule
poetryLockSdk
isPoetry1GeneralCommandLine
patchRemoteCommandLineIfNeeded1PyTargetAwareAdditionalData
getInterpreterVersion LanguageConsoleView
indentPrompt7GeneralCommandLine
setupPythonConsoleScriptInServerMode7GeneralCommandLine
setupPythonConsoleScriptInClientMode&ParamsGroup
appendClientModeParameters4GeneralCommandLine
initializePydevConsoleScriptGroup&ParamsGroup
appendServerModeParameters'SMTestProxy
calculateAndReturnMagnitude QualifiedName
tryResolveAndSplit*PyQualifiedNameOwner
getEmulatedQNameParts'PyQualifiedNameOwner
tryResolveAndSplitSdk
getMappingProperty
prefixedNamePyFunction
isCustomFixturePyFunction
isSubjectForFixturePyFunction
isFixturePyFunction
asFixturePyDecoratorList
hasDecoratorPyNamedParameter
isFixturePyNamedParameter
isParametrized&PyFunction
getParametersOfParametrizedPyNamedParameter
asParametrized,PyPackageManagerProvider
safeTryCreateForSdkPyPackageRepository
checkValid%RequestBuilder
withBasicAuthorizationCapture
inArgumentListCapture
inParameterListCapture
afterDefInMethodCapture
afterDefInFunctionJComboBox
withActionLinkComboBox
updateTooltipComboBox
withAddInterpreterLink+PyRemoteSdkAdditionalDataBase
executionTypeSdk
executionTypeProject
sdksSdk
pythonImplementationSdk
interpreterTypeCompletionParameters
getFileCompletionParameters
getPyClass'CompletionParameters
getTypeEvalContext#SdkModificator
associateWithProject+SdkModificator
getOrCreateSdkAdditionalData(SdkModificator
resetAssociatedModulePath"SdkModificator
associateWithModule<PyRemoteSdkAdditionalData
convertToTargetAwareAdditionalDataModule
getSdkPsiFileSystemItem
getQNameRegistryValue
asListTargetWithVariant
asPsiElementTargetWithVariant
asVirtualFileTargetWithVariant
isWellFormed+StringLiteralExpression
getCalleeIfArgumentRegExpPattern
asPatternVirtualFile
toPsiPyCallExpression
isCalleeName!PyCallExpression
isClassAttribute%FileChooserDescriptor
withPythonFilesFQNamesProvider
getFirstName!FQNamesProvider
getQualifiedNamesFQNamesProvider
isNameMatchesFQNamesProvider
getShortNames FQNamesProvider
shortNameMatchesQualifiedName
getRelativeNameTo)QualifiedName
getElementAndResolvableNameQualifiedName
resolveToElementPyFunction
getParameterPyClass
inheritsKProperty
isAnnotatedKClass
memberPropertiesCachedAny
tryDoingString
normalizeWhitespaceChar
isNewlineString
normalizeNewlinesInt
scaledAsStringInt
scaledFontSizeJTable
getCellDataWidthJTable
autosizeColumnsAtJTable
getColumnDataWidthsString
withHtmlStylingColor
toCssHexColorStringJComponent
updateAndRepaintJPopupMenu
showUnderneath+JCheckBox
setSelectedIfDifferentFromCurrentLC
scaledInsetsLC
skipInvisibleComponentsLC
noInsets	LC
insets
LC
gridGapJButton
onClickJComponent
horizontalCenterJComponent
bottomJComponent
onMouseActionJComponent
verticalCenterJComponent
topJComponent
leftJComponent
onMouseMotionJComponent
onRightClickJComponent
rightJLabel
setUnderlined0CC
compensateForHighlightableComponentMarginLeft#JTextField
addOnTextChangedListenerComponent
onVisibilityChangedComponent
onOpacityChanged!PackageSearchPanelBase
initializeToolWindow
initializeDispatchers
toolWindowManagerContentManager
addTab"CoroutineScope
computeActionsAsyncInstalled
toUiPackageModelInstalled
declaredScopesInstalled
userDefinedScopesSearchResult
toUiPackageModel1PackageVersionUtils
upgradeCandidateVersionOrNull6PackageVersionUtils
highestSensibleVersionByNameOrNullMap
partitionMap
filterNotNullValues$UnifiedDependency
matchesCoordinates&InstalledDependency
matchesCoordinates'DefaultMutableTreeNode
findPathWithData%DefaultMutableTreeNode
appendChildren*DefaultMutableTreeNode
targetModulesOrNull%JCheckBox
addSelectionChangedListener CoroutineScope
computeHeaderDataList
filterByTargetModules(SearchTextField
addOnTextChangedListenerJTable
colors#ProjectModule
installedDependenciesList
anyMatches PackageModel
toUnifiedDependency#RepositoryModel
toUnifiedRepositoryProject
dumbServiceProject
messageBusFlow#Project
coroutineModuleTransformersProject
lifecycleScope#Project
packageSearchProjectServiceProject
trustedProjectFlow)Project
packageSearchProjectCachesServiceProject
toolWindowManager Project
nativeModulesChangesFlowProject
toolWindowManagerFlowProject
uiStateSourceProject
getNativeModulesProject
lookAndFeelFlowProject
uiStateModifierProject
moduleChangesSignalFlowProject
moduleTransformersProject
filesChangedEventFlow*ContentManager
addSelectionChangedListener+String
makeBreakableAroundNonWordCharactersString
nullIfBlank)String
replaceNonWordCharactersWithSpacesIterable
parallelFilterNotFlow
catchAndLogIterable
parallelForEachMap
parallelUpdatedKeysFlow
replayOnSignalsIterable
parallelMapNotNullMap
parallelMapMutableStateFlow
whileLoadingIterable
parallelFlatMapFlow
mapLatestTimedWithLoadingFlow
batchAtIntervalsIterable
parallelMapFlow
modifiedByCollection
anyIn PsiFile
getElementAtOffsetOrNull%PsiFile
firstElementContainingExactlyModule
hashCodeOrZeroModule
isTheSameAsSupplier
invokeIterable
unsubscribeAllRunnable
invokeMutableMap
retainAllProject
getGitRootsProject
anyGitRootsForIndexing&Collection
anonymizeFilePathCollection)Collection
anonymizeVirtualFileCollectionCodeStyleSettings
tomlTomlFmtBlock
computeIndentASTNode
isArrayDelimiterASTNode
isWhitespaceOrEmptyBlock
computeSpacingTomlKey
nameTomlLiteral
kindCharSequence
tokenizeString
unescapeToml'CompositePsiElement
childOfTypeNullable"CompositePsiElement
childrenOfType&CompositePsiElement
childOfTypeNotNullChar
isWhitespaceCharPsiBuilder
rawLookupTextCommitContext
isCloseBranch%CommitContext
isCommitSubrepositoriesCommitContext
isMqNewPatchImage
toBufferedImagePsiElement
hasTypePsiElement
childrenOrNullPsiElement
childrenASTNode
siblingsASTNode
parentsASTNode
traverseASTNode
childrenPsiComment
commentBody#AnActionEvent
getWorkingCopiesPanelConflictAction
getDisplayName ConflictOperation
getDisplayNameConflictReason
getDisplayNameVcsFileRevision
svnRevisionString
trimLastSlashUnifiedCoordinates
toMavenIdMavenArtifact
resolvedDistributionInfo
getVersion,UpdateFromSourcesSettingsState
actualIdePathFormCall
isRadioButtonRow FormCall
checkConvertButtonGroupIComponent
getPropertyValue6MutableEntityStorage
addEclipseProjectPropertiesEntityBuilder
setVariable*EclipseProjectPropertiesEntity
getVariableModuleEntity
mainContentRoot@EclipseJavaCodeStyleMappingDefinitionBuilder
addOnOffTagsMappingSettingMapping
convertWrapSettingMapping
doNotImportSettingMapping
convertIntSettingMapping
convertFieldSettingMapping
alsoSetSettingMapping
importIfAllowedSettingMapping
invertSettingMapping
convertBooleanEEclipseJavaCodeStyleMappingDefinitionBuilder
addBracePositionsMapping SettingMapping
convertBlankLines#SettingMapping
convertBracePosition)SettingMapping
convertBracedCodeOnOneLineSettingMapping
convertInsertCEclipseJavaCodeStyleMappingDefinitionBuilder
addLineWrappingMappingAEclipseJavaCodeStyleMappingDefinitionBuilder
addWhitespaceMappingAEclipseJavaCodeStyleMappingDefinitionBuilder
addBlankLinesMappingBEclipseJavaCodeStyleMappingDefinitionBuilder
addIndentationMappingKEclipseJavaCodeStyleMappingDefinitionBuilder
addParenthesesPositionsMapping?EclipseJavaCodeStyleMappingDefinitionBuilder
addCommentsMapping?EclipseJavaCodeStyleMappingDefinitionBuilder
addNewLinesMapping$UastLanguagePlugin
convertWithParentUastLanguagePlugin
convertUastLanguagePlugin
convertOptUElement
parentAnywayUElement
asRecursiveLogStringUExpression
startsWithQualifiedUExpression
matchesQualifiedUExpression
getQualifiedChain$UExpression
getQualifiedParentOrThisUExpression
endsWithQualified!UExpression
getOutermostQualifiedUExpression
asQualifiedPathPsiElement
getUastParentOfTypes$PsiElement
toUElementOfExpectedTypesPsiElement
toUElementPsiElement
getUastParentOfTypePsiElement
toUElementOfTypePsiFile
findUElementAtUElement
getContainingUFileUElement
getUastContextCollection
toPsiElementsUFile
getIoFilePsiElement
findContainingUElement
skipParentOfType'UCallExpression
getParameterForArgument#UElement
isLastElementInControlFlowUElement
getLanguagePluginUElement
getContainingUClassUExpression
evaluateStringUElement
tryResolveNamedUElement
isUastChildOfPsiElement
findAnyContaining$UNamedExpression
getAnnotationMethodUElement
getParentOfType%UExpression
skipParenthesizedExprDown%UReferenceExpression
getQualifiedNameUElement
getContainingUVariableUElement
tryResolveUElement
textRangeUElement
getContainingUMethodUElement
getUCallExpression!JavaAbstractUElement
unwrapSwitch/JavaAbstractUElement
wrapSingleExpressionLambdaArray
hasAssignableFromClass
el+PsiElementFactory
createExpressionStatementPsiElement
getChildByRoleIElementType
getOperatorType PsiModifierListOwner
annotations*UElement
unwrapCompositeQualifiedReferenceUElement
isInFinallyBlockUElement
isInstanceCheck!UElement
isNewArrayWithDimensionsUElement
isTypeCastUElement
isArrayInitializerUElement
isNewArray"UElement
isNewArrayWithInitializerUElement
isMethodCallUElement
isConstructorCallUVariable
isResourceVariableUElement
isAssignmentClassSet
hasClassOfPsiElement
getHashCodeUElement
toSourcePsiFakeAwareArray
isAssignableFromKtElement
multiResolveResultsPsiElement
isJvmElementKtElement
analyzeKtExpression
getExpectedTypeDeclarationDescriptor
toSourceKotlinType
toPsiTypeKtTypeReference
toPsiTypeKotlinType
containsLocalTypesKtTypeReference
getType2KotlinULambdaExpression
getFunctionalInterfaceTypePsiClass
getMethodBySignaturePsiMethod
matchesDesc/ResolvedCall
descriptorForResolveViaConstructor2ValueParameterDescriptor
isImplicitLambdaParameter%KotlinType
getFunctionalInterfaceTypePsiClass
isEnumEntryLightClassPsiElement
getMaybeLightElement KtBlockExpression
isFunctionBodyKtElement
typeOwnerKind"KtCallElement
isAnnotationArgumentKtElement
canAnalyzeKtClassOrObject
toPsiTypeKtTypeReference
nameElement.PsiElement
destructuringDeclarationInitializerUValue
ifUndeterminedUValue
toPossibleConstants
Int
asTypePsiType
toNumeric-UExpression
extractBranchesResultAsDependency$UExpression
accumulateBranchesResultUExpression
lastExpressionUElement
ownTextRangeStringEntry
areEqualList
collapseArray
accommodateUElement
logList
acceptListUExpression
unwrapParenthesisPsiType
nameString
withMarginString
timesUElement
replace"UReferenceExpression
bindToElement%UReferenceExpression
shortenReferenceString
ofTypeUElement
generationPluginUElement
refreshedUElement
getUastElementFactory,UDeclaration
getEvaluationContextWithCaching+UElement
getContainingAnalyzableDeclarationUExpression
uValueOfUFile
analyzeAll/UastLocalUsageDependencyGraph
dumpVisualisationStringBuilder
edgeStringBuilder
indentString
escapeUElement
createEmptyStateUEvaluationInfo
merge	UValue
to%UExpression
referenceOrThisIdentifierAny
toConstantUResolvable
resolveToUElementUDeclaration
getAnchorPsi!UElement
getContainingDeclarationUElement
sourcePsiElementUElement
withContainingElementsUElement
getAsJavaPsiElementUElement
isNullLiteral%ULiteralExpression
injectedReferencesULiteralExpression
getLongValue(UExpression
allPsiLanguageInjectionHostsUElement
isInjectionHostUExpression
sourceInjectionHostUElement
isBooleanLiteralUElement
isNumberLiteralUElement
isStringLiteral+ULiteralExpression
psiLanguageInjectionHost UElement
getValueIfStringLiteralUElement
isFalseLiteralUElement
isIntegralLiteralUElement
isTrueLiteralUVariable
visitContentsUAnnotation
namePsiElementDocument
linesBetweenMemberDescription
ownerTypeMethodDescription
returnTypeFieldDescription
fieldType MethodDescription
parameterTypesjdi_Type
asTypeValue
asJdiValueType
asTypeObjectReference
asValueValue
asValueValue
jdiObjValue
jdiClassjdi_ObjectReference
asValuejdi_Value
asValueFrame
getStackTopAny
checkNull	Value
intValue
float	Value
obj
Value
longValue
booleanValue
doubleType
jdiNameJdiOperationResult
ifFailConverter
convertParameterList-PsiReferenceExpression
isQualifierEmptyOrThisPsiReferenceExpression
dotConverter
convertToKotlinAnalog)Converter
convertToKotlinAnalogIdentifier#PsiElement
getContainingConstructorPsiExpression
isNullLiteralPsiMember
isImportedPsiExpressionList
rPar#PsiModifierListOwner
accessModifierPsiMember
isConstructorPsiElement
getContainingClassPsiElement
isInSingleLine.PsiReferenceExpression
isQualifierEmptyOrClassPsiElement
getContainingMethodPsiExpressionList
lParPsiMethod
isMainMethodPsiVariable
hasWriteAccesses#PsiVariable
isInVariableInitializer!ReferenceSearcher
findMethodCallsPsiField
isVar$ReferenceSearcher
findVariableUsages%PsiExpression
getTypeConversionMethod!PsiVariable
isMainMethodParameterPsiType
needTypeConversionCodeBuilder
buildListCodeBuilder
append%CodeConverter
convertStatementOrBlock'StatementConverter
withSpecialConverter(ExpressionConverter
withSpecialConverterTextRange
toRangeMarker%Converter
convertStaticImportOnDemandConverter
convertImportConverter
convertImportListJKPostProcessingTarget
elementsJKPostProcessingTarget
filesNullability
isNullableType
isUnitMutability
isMutableConverter
convertTypeParameter"Converter
convertTypeParameterListElement
canonicalCodeElement
assignPrototypesFromElement
assignPrototypeElement
assignPrototypesElement
assignNoPrototype CodeBuilder
appendWithSpaceAfterModifiers
filterCodeBuilder
appendWithPrefixCodeBuilder
appendWithSuffixExpression
precedenceCodeBuilder
appendOperandElement
wrapToBlockIfRequired,PsiNameIdentifierOwner
declarationIdentifierFqName
isExcludedFromAutoImportAnnotated
findAnnotation"AnnotationDescriptor
getArrayValue'AnnotationDescriptor
getAnnotationValue$AnnotationDescriptor
getBooleanValueAnnotations
findAnnotation#AnnotationDescriptor
getStringValue!AnnotationDescriptor
getEnumValue	Any
letIfKtElement
isMainFunction%Project
syncPublisherWithDisposeCheckModule
shouldUseJpsOutput!Module
jsProductionOutputFilePathModule
jsTestOutputFilePathModule
asJsModuleHLApplicator
withPsiDocTag
contentPsiMember
j2kPsiElement
convertToKotlinPsiElement
j2kTextPsiExpression
j2kRunConfiguration
addBuildTaskModule
asJvmModuleVirtualFile
module0StubBasedPsiElementBase
containingKotlinFileStubStubElement
containingFileStub$StubElement
containingKotlinFileStub*StubBasedPsiElementBase
containingFileStub.DeclarationDescriptor
isExcludedFromAutoImportImportPath
isImported%FqName
isJavaClassNotToBeUsedInKotlinCall
resolveCandidatesKtElement
canAddRootPrefix)CallableId
asFqNameWithRootPrefixIfNeededFqName
quoteIfNeeded#KtModifierKeywordToken
toVisibilityFqName
thisOrParentIsRootCall
mapArgumentsToParameters#KtImportDirective
targetDescriptorsFqName
canAddRootPrefixFqName
quoteSegmentsIfNeeded)KtCallableDeclaration
canOmitDeclaredTypeImplicitReceiver
asExpressionFqName
withRootPrefixIfNeeded*FileIndex
isInTestSourceContentKotlinAware%JpsModuleSourceRootType
getSourceTypeFileIndex
getSourceType!ModuleInfo
unwrapModuleSourceInfo-DeclarationDescriptorWithVisibility
isVisible4CallableMemberDescriptor
getDeepestSuperDeclarations#DescriptorVisibility
toKeywordToken:CallableMemberDescriptor
getDirectlyOverriddenDeclarations*DeclarationDescriptor
unwrapIfFakeOverrideString
unquotePsiElement
replaced/KtExpression
dropEnclosingParenthesesIfPossiblePsiElement
copiedKtParameter
dropDefaultValueKtDeclaration
isOverridablePsiElement
deleteSingle>FunctionDescriptor
allowsMoveOfLastParameterOutsideParentheses,KtModifierListOwner
isSealedClassConstructor&KtLambdaArgument
getLambdaArgumentNameKtClass
isEffectivelyFinal$KtExpression
parentLabeledExpression KtDeclaration
implicitVisibilityKtModifierList
appendModifierKtBlockExpression
appendElement KtDeclaration
isEffectivelyFinalKtClass
isInheritable+KtModifierListOwner
isFinalClassConstructor(KtCallExpression
getLastLambdaExpression&KtSecondaryConstructor
getOrCreateBody!KtModifierListOwner
setVisibility4KtLambdaArgument
moveInsideParenthesesAndReplaceWithKtCallableDeclaration
setTypeKtParameter
setDefaultValue%KtDeclaration
predictImplicitModality&KtLambdaArgument
moveInsideParenthesesKtClass
appendDeclaration7KtModifierListOwner
isAnnotationClassPrimaryConstructorKtParameter
isOverridable"KtClassOrObject
isEffectivelyFinal0KtCallExpression
canMoveLambdaOutsideParenthesesBKtLambdaExpression
moveFunctionLiteralOutsideParenthesesIfPossible(KtBlockStringTemplateEntry
canDropBraces%KtCallableDeclaration
setReceiverTypeKtModifierList
normalizeKtDeclaration
implicitModality&PsiElement
deleteElementAndCleanParent)KtTypeParameterListOwner
addTypeParameter"KtClass
getOrCreateCompanionObject'KtDeclaration
getModalityFromDescriptorKtProperty
isOverridable6KtCallExpression
moveFunctionLiteralOutsideParentheses'KotlinType
allowsMoveOutsideParentheses"KtModifierListOwner
canBeProtected KtModifierListOwner
canBePrivate!KtModifierListOwner
canBeInternalKtDeclaration
toDescriptor%KtBlockStringTemplateEntry
dropBraces-KtNamedFunction
getOrCreateValueParameterListKtModifierListOwner
canBePublicExternalContentRoot
iconExpectedInfo
fuzzyTypeExpectedInfo
multipleFuzzyTypesEditor
unblockDocumentEditor
moveCaretTuple2
component1Tuple2
component2JTextComponent
onTextChangeDataInput
readStringDataInput
readStringListDataInput
readNullableDataOutput
writeFileDataInput
readFileListDataOutputStream
writeObjectDataInputStream
readObjectDataOutput
writeStringDataOutput
writeFileListDataOutput
writeNullableDataInput
readFileDataOutput
writeStringList#PsiElement
isClassAvailableInModule(Module
findContentRootsByExternalProject$VirtualFile
hasExplicitPackagePrefix#PsiDirectory
getNonRootFqNameOrNullPsiFile
getFqNameByDirectoryVirtualFile
pathOrNullKtFile
packageMatchesDirectoryPsiDirectory
getPackage4Module
findExistingNonGeneratedKotlinSourceRootFiles Module
createSourceRootDirectory(Module
chooseSourceRootPathHeuristicallyModule
chooseSourceRootPath*Module
findSourceRootPathByExternalProject'Module
findOrConfigureKotlinSourceRoots.PsiDirectory
getFqNameWithImplicitPrefixOrRoot(PsiDirectory
getFqNameWithImplicitPrefixSequence
toExistingFiles*Module
findNonGeneratedKotlinSourceFolders(KtFile
packageMatchesDirectoryOrImplicitFile
toPsiFileFile
toPsiDirectoryProject
cancelOnDisposal"KtCodeFragment
externalDescriptorsPsiElement
isRootPrefix-ReentrantReadWriteLock
writeWithCheckCanceledPsiElement
isMultiLineDocument
getLineCountInRangePsiElement
getLineNumber!Document
containsLineBreakInRangePsiElement
isOneLinerPsiElement
printTree$Project
runSynchronouslyWithProgressFileEditor
notificationPanelVirtualFile
withSelectedEditor-VirtualFile
applySuggestedScriptConfiguration5VirtualFile
removeScriptDependenciesNotificationPanel2VirtualFile
addScriptDependenciesNotificationPanel+VirtualFile
hasSuggestedScriptConfiguration+Application
isScriptChangesNotifierDisabled$ScriptDefinitionContributor
asSource:Application
isUnitTestModeWithoutScriptLoadingNotification4ScriptConfigurationManager
testingBackgroundExecutorProject
getKtFileFunctionDescriptor
wrapClassConstructorDescriptor
wrapPropertyDescriptor
wrap!KtModifierListOwner
makeNotActualKtModifierListOwner
makeActual*OverrideMemberChooserObject
generateMember,KtAnnotationEntry
getPropertyKeyResolvedCall#KtExpression
getBundleNameByContext'KtStringTemplateExpression
isBundleName#Annotated
getBundleNameByAnnotation)ClassifierDescriptor
isBoringBuiltinClass$Element
findClassDescriptionFromRootElement
findAnchors-Element
findElementDescriptionFromUlBlockList3Element
findClassMemberElementDescriptionFromAnchor*Element
findEnumEntryDescriptionFromAnchorAny
each
Any
insertDeclarationDescriptor
findKDocKtElement
lookupOwnedKDocKDoc
findSectionsContainingTagKtElement
lookupKDocInContainerKtElement
findKDocKtElement
lookupInheritedKDoc"KotlinLibrary
getCompatibilityInfoProject
runWhenSmart Project
runReadActionInSmartMode(Project
runWithAlternativeResolveEnabled/KotlinLibrary
createKlibPackageFragmentProviderKotlinLibrary
safeRead!TargetPlatform
toBuiltInsPlatform(VirtualFile
isKlibLibraryRootForPlatform'VirtualFile
isLegacyNativeKlibComponentProject
allModulesModifiableModel
replaceFileRootModule
findLibraryOrderEnumerator
findLibrary
Module
sdk1Exception
isItNoDescriptorForDeclarationException&PsiElement
actionUnderSafeAnalyzeBlock5Exception
returnIfNoDescriptorForDeclarationException'PsiElement
isUnderKotlinSourceRootTypes*KtPrimaryConstructor
addConstructorKeyword.Diagnostic
createIntentionForFirstParentOfTypePsiElement
isAnonymousFunction-KtCallElement
replaceOrCreateTypeArgumentList0KtNamedDeclaration
nameIdentifierTextRangeInThisKtExpression
hasNoSideEffectsKtExpression
isUnitLiteral'KtDotQualifiedExpression
hasNotReceiver&KtModifierListOwner
hasPrivateModifier.KtDotQualifiedExpression
calleeTextRangeInThis5DeclarationDescriptor
isPrimaryConstructorOfDataClass%KtModifierListOwner
hasInlineModifier#KtNamedFunction
isAnonymousFunctionPsiElement
textRangeInPsiElement
hasComments%KtPrimaryConstructor
mustHaveValOrVar&KtDeclaration
runOnExpectAndAllActuals(DeclarationDescriptor
actualsForExpected!KtDeclaration
hasMatchingExpected$MemberDescriptor
isEnumEntryInActualKtParameter
liftToExpectedModuleDescriptor
hasActualsFor$MemberDescriptor
expectedDescriptors!KtDeclaration
isEffectivelyActual$DeclarationDescriptor
liftToExpectedKtDeclaration
liftToExpected KtDeclaration
actualsForExpected!KtDeclaration
isExpectDeclaration&MemberDescriptor
isConstructorInActual!KtDeclaration
hasAtLeastOneActual#MemberDescriptor
findActualInModule7KtDeclaration
runCommandOnAllExpectAndActualDeclaration&KtDeclaration
expectedDeclarationIfAny2KtDeclaration
collectAllExpectAndActualDeclaration$MemberDescriptor
isEffectivelyActual#MemberDescriptor
expectedDescriptor$TypeSubstitutor
combineIfNoConflictsFuzzyType
nullability TypeSubstitution
hasConflictWithFuzzyType
isAlmostEverything"CallableDescriptor
fuzzyReturnTypeKotlinType
toFuzzyTypeFuzzyType
makeNotNullableFuzzyType
makeNullable-CallableDescriptor
fuzzyExtensionReceiverTypeFuzzyType
presentationType$KotlinPackageEntry
matchesImportPath.KotlinPackageEntry
isBetterMatchForPackageThanVirtualFile
isJavaFileTypeKtAnnotated
findAnnotation!KtModifierListOwner
addAnnotation*CallTypeAndReceiver
receiverTypesWithIndex!CallTypeAndReceiver
receiverTypes=SmartCastManager
getSmartCastVariantsWithLessSpecificExcluded0CallableDescriptor
substituteExtensionIfCallable)ReceiverValue
getReceiverTargetDescriptor"ReceiverValue
getThisReceiverOwnerCollection
joinWithEscapeString
collapseSpaces&KtExpression
isBackingFieldReferenceTo$KtPropertyAccessor
isRedundantSetterFqName
toJvmFqName!KtElement
getElementTextInContextKtFile
psiPackagePsiElement
reformatted"KtValVarKeywordOwner
jvmGetterName&KtAnnotated
hasAnnotationWithShortNameKtPropertyAccessor
jvmNamePsiClass
isSyntheticKotlinClassPsiClass
classIdIfNonLocalKtClassOrObject
jvmFqNameKtFile
jvmPackageFqNameKtAnnotated
findSuppressedTools'KtAnnotated
findAnnotationWithShortNameCKtCallableDeclaration
isExplicitTypeReferenceNeededForTypeInferenceKtAnnotated
findJvmNameKtPropertyAccessor
deleteBody$KtAnnotated
hasNonSuppressAnnotationKtNamedFunction
jvmName)KtPropertyAccessor
canBeCompletelyDeleted1ValueArgument
findSingleLiteralStringTemplateTextKtExpression
resultingWhens$KtPropertyAccessor
isRedundantGetter!KtAnnotated
hasSuppressAnnotation!KtClassOrObject
classIdIfNonLocal"KtAnnotated
findSuppressAnnotation"KtValVarKeywordOwner
jvmSetterName'KtCallableDeclaration
numberOfArgumentsKtFile
jvmPackage-LexicalScope
getImplicitReceiversWithInstance9LexicalScope
getImplicitReceiversWithInstanceToExpression7LexicalScope
getFactoryForImplicitReceiverWithSubtypeOf,PsiElement
leafIgnoringWhitespaceAndCommentsASTBlock
requireNodePsiElement
isLineBreakPsiElement
leaf!PsiElement
leafIgnoringWhitespace!PsiElement
getLineCountByDocument#PsiElement
containsLineBreakInChildPsiElement
isCommaStringBuilder
wrapTagStringBuilder
wrapBoolean
ifFalseBoolean
ifTrueEditor
executeEnterHandlerKtElement
getResolutionScopePsiElement
getResolutionScope.LexicalScope
getVariablesFromImplicitReceivers&LexicalScope
getAllAccessibleFunctions&LexicalScope
getAllAccessibleVariables-LexicalScope
getVariableFromImplicitReceivers'ResolutionFacade
getFileResolutionScopeModule
createPointerPsiFileSystemItem
sourceRootVirtualFile
getSourceRootVirtualFile
findModuleFileType
isKotlinBinary*FileIndex
isInSourceContentWithoutInjectedModule
sourceRoots)KotlinType
anonymousObjectSuperTypeOrNullPsiType
collectTypeParametersPsiType
resolveToKotlinTypeKotlinType
isResolvableInScopeFqName
isRedundantJvmAnnotation$KotlinTypeSubstitution
toSubstitutor(KotlinType
approximateWithResolvableTypeSubstitutable
substitute#KotlinType
approximateFlexibleTypes TypeProjection
fixTypeProjection-KotlinType
approximateNonDynamicFlexibleTypesKotlinType
isAbstractTypeSubstitutor
orEmpty&KotlinType
withoutRedundantAnnotations&KotlinType
getResolvableApproximations0KotlinExceptionWithAttachments
withPsiAttachmentProject
executeWriteCommandProject
executeCommand!Module
externalSystemTestRunTasks#LanguageVersion
coerceAtMostVersionKotlinFacet
configureFacet%CommonCompilerArguments
ignoredFieldsModule
externalSystemRunTasks&KotlinFacetSettings
initializeIfNeeded!Module
getOrCreateConfiguredFacet/Module
hasNonOverriddenExternalSdkConfigurationModule
getOrCreateFacet KotlinFacet
noVersionAutoAdvance'Module
externalSystemNativeMainRunTasksModule
removeKotlinFacetModule
configureSdkIfPossible%CommonCompilerArguments
primaryFields"Module
hasExternalSdkConfigurationKotlinPsiRange
matchesPsiElement
matchesKotlinPsiRange
matchComboBox
selectedItemTyped%Iterable
addReleaseVersionIfNecessary)AnnotationDescriptor
isExpectOfAnnotationModule
isMavenModuleDomElement
findProjectString
getRangeClosedEnd"MavenDomPlugin
isKotlinMavenPlugin!MavenDomDependency
isKotlinStdlibString
isRangeVersionDomElement
findPluginChar
isRangeEndChar
isRangeStartMavenPlugin
isKotlinPluginElement
sourceDirectoriesExecution
sourceTypeModule
kotlinImporterComponentMavenDomGoal
isJsGoalModule
hasJavaFilesList
notAtPhaseMavenPlugin
isKotlinMavenPlugin"PomFile
changeFeatureConfiguration$PomFile
changeCoroutineConfigurationXmlTag
deleteCascade%PomFile
changeConfigurationOrPropertyPomFile
changeLanguageVersion#MavenDomArtifactCoordinates
matches%MavenDomDependencies
findDependenciesMavenDomElement
createChildTagXmlTag
createChildTagMavenDomDependency
matchesProject
invalidateProjectRootsSourceRoot
pathAsUrlDataNode
findAll/Module
collectKotlinAwareDestinationSourceRoots;JpsModuleSourceRoot
getMigratedSourceRootTypeWithProperties)JpsModuleSourceRoot
getOrCreatePropertiesModule
isTestModuleKotlinFacetSettings
isMPPModule PsiElement
getPlatformModuleInfoModule
implementedModulesModule
toInfoProject
modulesByLinkedKeyModule
isKpmModuleModule
isNewMPPModuleModule
refinesFragmentIdsModuleSourceInfo
toDescriptor-Module
findOldFashionedImplementedModuleNamesModule
sourceTypeModule
isMPPModule+ModuleDescriptor
allImplementingDescriptorsTargetPlatform
isSharedNativeModule
toDescriptorModule
facetSettingsModule
implementingModules(ModuleDescriptor
implementingDescriptors'ModuleDescriptor
implementedDescriptorsModule
additionalVisibleModules$ModuleSourceInfo
getDependentModulesLibraryDependenciesFilter
union!SimplePlatform
representsSubsetOf!TargetPlatform
representsSubsetOf%Module
filterSourceModuleDependenciesOrderEntry
acceptAsDependency*Module
resolveDependenciesFromOrderEntries"Module
getSourceModuleDependenciesLibrary
asLibraryExLibrary
wrapModule
testSourceInfoModule
hasRootsOfTypeIdeaModuleInfo
isLibraryClassesModule
correspondingModuleInfosModule
productionSourceInfoTargetPlatform
canDependOnModuleSourceInfo
sourceTypeProject
libraryInfoCache#IdeaModuleInfo
projectSourceModulesModule
hasProductionRootsModule
hasTestRootsKtElement
findModuleDescriptor&KtElement
analyzeWithAllCompilerChecks'ResolutionFacade
resolveImportReference#KtFile
analyzeWithAllCompilerChecksKtElement
getResolutionFacadeKtFile
resolveImportReferenceKtElement
analyzeFully!KtDeclaration
resolveToDescriptor$LibraryInfo
isKotlinStdlibDependencyLibraryInfo
isCoreKotlinLibraryLibraryInfo
isKotlinStdlib$ModuleInfo
findSdkAcrossDependenciesCollection
lazyClosure.IdeaModuleInfo
findJvmStdlibAcrossDependencies"KtLightElement
processLightElementPsiElement
collectInfosPsiElement
getModuleInfoPsiElement
getModuleInfosPsiFile
forcedModuleInfoOrderEntry
toIdeaModuleInfo"Throwable
asInvalidModuleException'Throwable
throwAsInvalidModuleException-PsiElement
getModuleInfoPreferringJvmPlatformStringBuilder
appendElementResolutionFacade
createdFor&KtElement
safeAnalyzeNonSourceRootCode!KtExpression
computeTypeInContext%KtExpression
computeTypeInfoInContext!KtExpression
analyzeAsReplacement5KtDeclaration
safeAnalyzeWithContentNonSourceRootCodeKtExpression
analyzeInContext%ResolutionFacade
findModuleDescriptorProject
isInDumbMode6GlobalContextImpl
contextWithCompositeExceptionTracker@GlobalContextImpl
contextWithNewLockAndCompositeExceptionTracker#PsiParameter
getParameterDescriptorPsiClass
getJavaClassDescriptor!PsiMethod
getJavaMethodDescriptor)JavaDescriptorResolver
getContainingScope$JavaDescriptorResolver
resolveMethodPsiField
getJavaFieldDescriptor$PsiElement
getJavaDescriptorResolverCollection
findByJavaElementPsiElement
javaResolutionFacade#JavaDescriptorResolver
resolveField"PsiElement
hasJavaResolutionFacade!PsiMember
getJavaMemberDescriptor)PsiElement
reportCouldNotCreateJavaFacadePsiClass
resolveToDescriptor)JavaDescriptorResolver
resolveConstructor)PsiMember
getJavaOrKotlinMemberDescriptor0IdeaModuleInfo
supportsAdditionalBuiltInsMembersIdeaModuleInfo
sdk+KtClassOrObject
hasLightClassMatchingErrorsPsiMember
debugNameKtFile
addInBlockModifiedItemKtFile
inBlockModifications%KtFile
incOutOfBlockModificationCountKtFile
inBlockModificationCount!KtFile
perFileModificationTracker"KtFile
outOfBlockModificationCount KtFile
clearInBlockModificationsPsiClass
mutableWrapperPsiClass
readOnlyWrapperPsiTypeParameter
asTypePsiFile
getTemplateIfAtLiteralPsiElement
templateContentRange KtParameter
isInLambdaExpressionTextRange
startPsiElement
rangePsiElement
isWithCaretPsiElement
endLinePsiElement
startLineTextRange
end@Application
isUnitTestModeWithoutAffectedGradleProjectFilesCheck'DataNode
kotlinGradleSourceSetDataNodesGradleVersion
scopeDataNode
kotlinSourceSetDataNode
kotlinSourceSetData DataNode
kotlinAndroidSourceSets&DataNode
findChildModuleByInternalNameDataNode
findChildModuleById#KotlinDependenciesPreprocessor
plusGraph
immutableGraph
transitiveClosure-MutableGraph
putInferredTestToProductionEdgesString
isStartsWithDistPrefixProject
detectorInstance%VirtualFile
supportedScriptExtensions%EditorNotificationPanel
addHideAction#SearchScope
restrictToKotlinSourcesSearchScope
orProject
allScopePsiMethod
syntheticAccessorsPsiMethod
isTopLevelDeclaration!SearchScope
toHumanReadableStringPsiMethod
canHaveOverride#PsiMethod
canHaveSyntheticAccessors$GlobalSearchScope
restrictByFileType%SearchParameters
effectiveSearchScope PsiMethod
canHaveSyntheticSetter PsiMethod
canHaveSyntheticGetter SearchScope
excludeKotlinSourcesPsiMethod
getterNamePsiReference
isImportUsage)GlobalSearchScope
restrictToKotlinSources,PsiElement
codeUsageScopeRestrictedToProjectPsiMethod
canBeSetterSearchScope
unionSafePsiMethod
canBeGetter+PsiMethod
probablyCanHaveSyntheticAccessorsSearchScope
and9PsiSearchHelper
isCheapEnoughToSearchConsideringOperatorsPsiElement
useScopePsiMethod
isFinalPropertyProject
containsKotlinFilePsiFile
fileScope'Project
everythingScopeExcludeFileTypesSearchScope
excludeFileTypesPsiElement
codeUsageScopePsiMethod
setterNamesProject
projectScopeSearchScope
minusPsiMethod
syntheticSettersGlobalSearchScope
notGlobalSearchScope
orSearchScope
restrictByFileTypeCharSequence
ifNotEmptyPsiMethod
syntheticGetter2PsiElement
codeUsageScopeRestrictedToKotlinSources PsiElement
isPotentiallyOperator*KtObjectDeclaration
asCompanionCompilerRef(KtObjectDeclaration
asObjectCompilerRefs%KtAnnotated
hasJvmOverloadsAnnotation1KtNamedFunction
asClassMemberFunctionCompilerRefs"KtAnnotated
hasJvmStaticAnnotation#KtParameter
asParameterCompilerRefs-KtProperty
asObjectMemberPropertyCompilerRefs)KtFunction
asCompilerRefsWithJvmOverloads,KtProperty
asClassMemberPropertyCompilerRefs,KtCallableDeclaration
asTopLevelCompilerRefs0KtCallableDeclaration
asObjectMemberCompilerRefs/KtCallableDeclaration
asClassMemberCompilerRefs!KtProperty
asPropertyCompilerRefs&KtNamedFunction
asFunctionCompilerRefs,KtCallableDeclaration
asCallableCompilerRefs2KtNamedFunction
asObjectMemberFunctionCompilerRefs"KtClassOrObject
asClassCompilerRefString
asClassCompilerRef&KtConstructor
asConstructorCompilerRef%Any
asPropertyOrParameterCompilerRefsRow
immutableScrollableTextArea$RowBuilder
rowWithImmutableTextFieldRow
immutableTextField$FqNameWrapper
asJavaCompilerClassRef-PsiElement
searchReferencesOrMethodReferences>PsiElement
buildProcessDelegationCallJavaConstructorUsagesTask:PsiElement
buildProcessDelegationCallConstructorUsagesTask@PsiElement
buildProcessDelegationCallKotlinConstructorUsagesTask1PsiElement
processDelegationCallConstructorUsages PsiNamedElement
getAccessorNamesKtParameter
descriptorKtDeclaration
descriptor.PsiNamedElement
getClassNameForCompanionObjectKtParameter
isDataClassProperty&KtParameter
dataClassComponentFunction#KtParameter
asComponentFunctionName&PsiElement
getReceiverTypeSearcherInfoKtFile
getDefaultImportsKtFile
forceResolveReferencesPsiElement
extractReceiverType/PsiReference
isExtensionOfDeclarationClassUsage%PsiReference
isKotlinConstructorUsageKtDeclaration
constructor$PsiReference
isCallableOverrideUsageKtParameter
propertyDescriptor+PsiReference
isUsageInContainingDeclarationKtParameter
descriptorCompatPsiFile
scriptDefinitionExists&KtElement
getConstructorCallDescriptorFuzzyType
toPsiClassKtDeclaration
descriptorCompat+PsiReference
checkUsageVsOriginalDescriptor$PsiElement
resolveTargetToDescriptor'HierarchySearchRequest
searchInheritorsPsiClass
isInheritable!PsiMethod
forEachOverridingMethodProcessor
consumeHierarchy'KtNamedDeclaration
hasOverridingElement'PsiMethod
forEachOverridingMethodCompatPsiMethod
forEachImplementationPsiElement
isOverridableElement'HierarchySearchRequest
searchOverriders&PsiClass
forEachDeclaredMemberOverride+KtNamedDeclaration
forEachOverridingElement%PsiElement
toPossiblyFakeLightMethods+CallableDescriptor
isImplicitInvokeFunctionSliceProducer
produceAndProcessVirtualFile
pathBeforeJ2K"ClassDescriptor
findDeclaredEquals$ClassDescriptor
findDeclaredHashCode$ClassDescriptor
findDeclaredFunction$ClassDescriptor
findDeclaredToStringRefactoringCase
tryCreateAndRunList
randomElementsList
randomElementProject
filesList
toRandomSequenceList
randomElementOrNull*KtReferenceExpression
getImportableTargets&DeclarationDescriptor
importableFqName#KotlinType
canBeReferencedViaImport.DeclarationDescriptor
canBeReferencedViaImport(DeclarationDescriptor
canBeAddedToImportProject
useCompositeAnalysis#TargetPlatform
findAnalyzerServices#SimplePlatform
findAnalyzerServices!ModuleDescriptor
moduleSourceInfoModuleDescriptor
moduleInfo&Project
libraryToSourceAnalysisEnabled*MutableMap
initIDESpecificAnalysisSettingsModule
languageVersionSettings"PsiElement
languageVersionSettings.Module
shouldUseProjectLanguageVersionSettings"Module
withLanguageVersionSettingsKtFile
forcedTargetPlatform"Project
getLanguageVersionSettingsKtElement
builtIns%Module
computeLanguageVersionSettings-Module
getAndCacheLanguageLevelByDependenciesModule
isHMPPEnabledEKotlinCommonCompilerArgumentsHolder
isKotlinLanguageVersionConfiguredProject
platformModule
platform)Project
isKotlinLanguageVersionConfiguredKtElement
platform(MutableMap
configureMultiplatformSupportModule
implementsCommonModuleModule
getStableName%ResolutionFacade
dataFlowValueFactoryResolutionFacade
ideService(ResolutionFacade
languageVersionSettings ResolutionFacade
frontendServiceVirtualFile
isKotlinWorksheetTextEditor
getScratchFileLogger
printDebugMessageVirtualFile
isKotlinScratch+ScratchExpression
linesInformationIsCorrect)TextEditor
parentScratchEditorWithPreview+TextEditor
findScratchFileEditorWithPreviewScratchExpression
heightDocument
insertStringAtLineMarkupModel
highlightLinesDocument
getLineContent%JpsPluginSettings
versionWithFallbackField
safeTypeStackFrame
safeVisibleVariables&Location
safeKotlinPreferredLineNumberStackFrameProxy
safeLocationReferenceType
safeSourceName"ReferenceType
safeAllLineLocationsLocation
safeSourceNameStackFrameProxy
safeStackFrameMethod
safeArgumentsClassType
safeAllInterfaces!ValueDescriptorImpl
safeCalcValueLocalVariableProxyImpl
safeTypeMethod
safeAllLineLocationsLocation
safeMethodMethod
safeReturnTypeReferenceType
safeFields(StackFrameProxyImpl
safeVisibleVariables#StackFrameProxyImpl
safeThreadProxyMethod
safeVariablesMethod
safeLocationsOfLineLocation
safeLineNumber"StackFrameProxyImpl
safeThisObject-StackFrameProxyImpl
safeVisibleVariableByNameKtFile
platformMatchesString
simpleNamePsiElement
getLineString
toJdiNameMethod
verifyMethodInt
isReturnOpcode(Method
isIRBackendLateinitVariableGetterMethod
isLateinitVariableGetter)Method
isOldBackendLateinitVariableGetter4Method
isIRBackendLateinitVariableGetterReturningAny#Method
isSimpleMemberVariableGetter Method
isJVMStaticVariableGetter#Method
isSimpleStaticVariableGetterMethod
isSimpleGetter)SourcePosition
isInsideProjectWithCompose+Method
getInlineFunctionOrArgumentVariablesDebugProcess
findTargetClasses8Method
getInlineFunctionAndArgumentVariablesToBordersMapLocation
getClassNameJdiType
isSubtypeType
isSubtypeType
getClassDescriptorAsmType
getClassDescriptor&ClassNameCalculator
getClassNameCompatReferenceType
isInKotlinSources"ReferenceType
containsKotlinStrata&DebugProcessImpl
invokeInManagerThread$DebuggerContextImpl
canRunEvaluationLocation
visibleVariables'StackFrameProxyImpl
isOnSuspensionPoint'ReferenceType
containsKotlinStrataAsync$ReferenceType
isInKotlinSourcesAsyncLocation
isInKotlinSources!DebugProcessImpl
canRunEvaluation8DebuggerSettings
leaveOnlyFirstOccurenceOfSteppingFilter*DebuggerSettings
addSteppingFilterIfNeededDebugProcess
isDexDebugVirtualMachine
isDexDebug EvaluationStatus
contextLanguageEvaluationStatus
usedEvaluator)EvaluationStatus
compilingEvaluatorFailed#EvaluationStatus
classLoadingFailed,KotlinCodeFragmentEditor
withToStringWrapper3KotlinCodeFragmentEditor
withSuspendFunctionWrapper!List
filterCodeFragmentClassFilesOutputFile
internalClassNameType
isPrimitiveTypeType
isBoxedTypeValue
asmTypeAsmType
isRefTypeValue
isRefTypeAsmType
isPrimitiveTypeType
asmTypeJdiType
asmTypeType
isRefTypeAsmType
isBoxedType CompiledDataDescriptor
mainClassKtCallExpression
callNameKtCallExpression
previousCallTerminatorStreamCall
withArgsStreamCall
typeAfterStreamCall
typeBeforeIntermediateStreamCall
withArgs$SuspendContextImpl
getLocationCompat'String
getSignatureWithoutFirstArgumentPsiMethod
matchesMutableMap
increment!KtDeclaration
getLightClassMethodKtElement
getLinesRange
toClosedRange SourcePosition
getTopmostElementList
filterAlreadyExecutedKtFunction
isSamLambda7ValueParameterDescriptor
isSamLambdaParameterDescriptor+PropertyAccessorDescriptor
getJvmMethodName0KtFunction
getParameterAndResolvedCallDescriptor#DeclarationDescriptor
getMethodName+KotlinType
getFirstAbstractMethodDescriptor.List
collectInlineFunctionArgumentRangesToSkip(SuspendContextImpl
getSourcePositionLine8SourcePosition
collectInlineFunctionArgumentRangesToSkip&MutableList
addDefaultParametersRangesKtElement
getLineRangePsiElement
contains#MutableList
addLambdaArgumentRanges$SuspendContextImpl
getSourcePosition,Method
isSyntheticMethodForDefaultParameters<CallableMemberDescriptor
containsInlineClassInValueArguments-SmartPsiElementPointer
getElementInReadActionClosedRange
toLineNumberRange'PositionManager
getCalledInlineFunction#LocalVariable
isInlinedFromFunctionArrayReference
toTypedList*RunConfigurationBase
isGradleConfiguration/JavaParameters
isKotlinxCoroutinesDebugDisabled)RunConfigurationBase
isMavenConfiguration-CoroutineInfoData
toCompleteCoroutineInfoDataLocation
formatJavaStackFrame
formatStackFrameItem
formatStackFrameProxyImpl
formatDebugProcessImpl
findFirstFrameType
isSubTypeOrSameMethod
isInvokeMethod
isInvokeSuspend-StackFrameProxyImpl
continuationVariableValue+ThreadReferenceProxyImpl
supportsEvaluation(SuspendContextImpl
invokeInManagerThreadType
isCoroutineScope1DefaultExecutionContext
findCoroutineMetadataType#SuspendContextImpl
executionContextLocation
isInvokeSuspend%StackFrameProxyImpl
thisVariableValueLocation
isFilterFromBottomMethod
isSuspendLambdaLocation
sameLineAndMethodType
isBaseContinuationImplDDefaultExecutionContext
findCancellableContinuationImplReferenceTypeLocation
getSuspendExitMode!StackFrameProxyImpl
variableValue)Location
safeCoroutineExitPointLineNumber?DefaultExecutionContext
findDispatchedContinuationReferenceTypeReferenceType
isContinuationReferenceType
isSuspendLambda.Location
isInvokeSuspendWithNegativeLineNumber Location
isFilteredInvokeSuspend*StackTraceElement
isCreationSeparatorFrameMethod
hasContinuationParameter%SuspendContextImpl
supportsEvaluationLocation
isFilterFromTopLocation
findPositionType
isAbstractCoroutineMethod
isGetCoroutineSuspended+Array
getSingleCoroutineFrameValueContainerDebugProcessImpl
suspendContext*MirrorOfBaseContinuationImpl
spilledValuesFieldVariable
toJavaValue'DebugProcessImpl
invokeInSuspendContext$PsiMethod
hasAppropriateKotlinOriginKtLightMethod
getSourceOrigin"SourcePosition
getMethodDescriptorPsiMethod
getMethodDescriptor2LocalVariableProxyImpl
wrapSyntheticInlineVariable"KtCallableDeclaration
isInlineOnlyPsiClass
collectPropertiesApplicabilityResult
handle&PsiElementPattern
withPatternConditionIdePlatformKind
tooling IdePlatformKind
isCompatibleWithDeclarationDescriptor
isIgnored-DeclarationDescriptor
isKotlinTestDeclarationKtPsiFactory
createWhiteSpace)DescriptorRenderer
withDefaultValueOption$DescriptorRenderer
withNoAnnotationsKotlinType
collectAllTypes'DeclarationDescriptor
additionalClasses%CallableDescriptor
explicitParameters%DeclarationDescriptor
collectAllTypesKotlinType
isMutableCollectionDKtNameReferenceExpression
getPrimaryConstructorParameterWithSameName$KotlinIndicesHelper
getClassesByNameCallTypeAndReceiver
toFilterClassDescriptor
inScopeKtTypeReference
classDescriptor/QuickFixFactory
asKotlinIntentionActionsFactoryKtExpression
elvisOrEmptyPsiElement
moveCaretToEnd KtTypeReference
classForRefactorIntentionAction
detectPriority KtDotQualifiedExpression
replaceQuickFixesPsiBasedFactory
coMap!PsiAnnotation
getActualTargetListKtClass
addAnnotationTargetsList
toArgumentListStringKotlinTarget
asNameString%KtAnnotationEntry
getActualTargetList.KtAnnotationEntry
getRequiredAnnotationTargetsKotlinType
isJClass"KtExpression
shouldHaveNotNullType!ApiVersion
toMavenArtifactVersion"KtDeclaration
canAddActualModifier7KtClassOrObject
collectDeclarationsForAddActualModifierKtNamedDeclaration
selected#KtDeclaration
makeActualWithParentsKtCallableDeclaration
repair$AnnotationDescriptor
isValidInModule%KtNamedDeclaration
getTypeDescriptionCompanion
typesToString<TypeAccessibilityChecker
isCorrectAndHaveAccessibleModifiers4TypeAccessibilityChecker
findAndApplyExistingClasses(KtPsiFactory
createClassHeaderCopyByText+KtModifierListOwner
anyInaccessibleModifier+CallableMemberDescriptor
checkAccessibility KtPsiFactory
repairSuperTypeList"KtPsiFactory
generateClassOrObject!KtNamedDeclaration
isAlwaysActual$KtCallableDeclaration
repairOverrideClassKind
actionPriorityClassKind
toIdeaClassKindTypeInfo
isUnit6KtSimpleNameExpression
getCreatePackageFixIfApplicableString
checkClassNameKtExpression
guessTypeForClassKotlinType
toClassTypeInfoString
checkPackageName!KotlinType
hasTypeParametersToAddTypeInfo
ofThisTypeInfo
forceNotNullTypeInfo
noSubstitutions&KtExpression
getExpressionForTypeGuess"KtCallExpression
getParameterInfosKotlinType
getTypeParametersKotlinType
renderLongKotlinType
renderShort$TypePredicate
getRepresentativeTypes)KtCallElement
getTypeInfoForTypeArgumentsKotlinType
containsKtExpression
guessTypesKotlinType
substituteKotlinType
renderSingle"KotlinType
containsStarProjectionsKtNamedDeclaration
guessTypeKotlinType
getFunctionTypeKotlinType
render KotlinType
decomposeIntersection2EditorNotificationPanel
createComponentActionLabelBinaryVersion
compareToProject
forEachAllUsedLibrariesFile
flattenDirMessageDigest
updatePsiFile
adjustLineIndent PsiFile
commitAndUnblockDocumentDocument
adjustLineIndent)KtNamedDeclaration
getReturnTypeReference*KtNamedDeclaration
getReturnTypeReferencesList
getTypeByRenderedType*CallableBuilderConfiguration
createBuilder1CodeStyleSettings
supposedKotlinCodeStyleDefaults&CodeStyleSettings
kotlinCustomSettingsPsiFile
rightMarginOrDefault&CodeStyleSettings
kotlinCommonSettingsPsiFile
kotlinCommonSettings)CodeStyleSettings
kotlinCodeStyleDefaultsPsiFile
kotlinCustomSettingsSpacingBuilder
beforeInsideRuleBuilder
spacesNoLineBreakSpacingBuilder
afterInsideASTNode
startOfDeclaration/CommonCodeStyleSettings
createSpaceBeforeRBracePsiElement
addCommaAfterPsiElement
canAddTrailingComma4KotlinCodeStyleSettings
addTrailingCommaIsAllowedFor/PsiElement
canAddTrailingCommaWithRegistryCheck*TrailingCommaContext
commaExistsOrMayExist.IndentCalculatorFactory
createIndentCalculator,SemanticEditorPosition
textOfCurrentPositionASTNode
isFirstParameterASTNode
isCallASTNode
unwrapQualifierASTNode
isCallChainWithoutWrapASTNode
qualifierReceiver&ASTNode
suppressBinaryExpressionIndentASTNode
receiverIsCallASTNode
prevList
indexOfBlockWithTypeASTNode
isQualifierPositionStrategy
continuationIfPersistentLibraryKind
platformLibraryEx
effectiveKindTargetPlatformKind
libraryKindNodeDescriptor
addReference"NodeDescriptor
incrementUsageCount%PsiElement
isOverrideHierarchyElementPsiElement
nextWhiteSpaceOrNull$PsiElement
isConcatenationExpressionPsiElement
trimIndentPsiElement
firstNonCommentChildKtBinaryExpression
joinable%MigrationInfo
isLanguageVersionUpdateKtElement
indentHandler)KotlinCallableStubBase
isDeclaredInObject!KotlinStubWithFqName
modifierList%JvmFileClassUtil
stringFromAnnotation2KotlinExtensionsByReceiverTypeIndex
indexExtension&ValueArgument
stringTemplateExpressionKtTypeElement
indexLookupElement
priorityKtElement
isDirectlyInLoopBodyKtElement
inReturnExpressionName
labelNameToTail"PsiElement
isLastOrSingleStatement"PsiElement
isInsideKtTypeReference#LookupElement
suppressAutoInsertionKtElement
isRightOperandInElvis PrefixMatcher
asStringNameFilterPrefixMatcher
asNameFilterInsertionContext
isAfterDot$KtCodeFragment
extraCompletionFilterLookupElement
putUserDataDeepElementPattern
and KtDeclarationWithBody
returnType(ThisItemLookupObject
createLookupElement)LookupElementPresentation
prependTailTextKotlinType
fqTypeLookupElement
getUserDataDeep4BasicLookupElementFactory
createLookupElementForTypeLookupElement
withReceiverCast$LookupElement
decorateAsStaticMember9DeclarationDescriptor
isArtificialImportAliasedDescriptorElementPattern
andNotElementPattern
or9ImportableFqNameClassifier
isImportableDescriptorImportedOffsetMap
tryGetOffsetFunction1
orFunction1
toNameFilter&LookupElement
keepOldArgumentListOnTabLookupElement
assignPriorityLookupElement
isDslMemberReferenceVariants
plusUserDataHolder
argList#KtExpression
findLastCallExpression#KtCallExpression
requiresTypeParams*ValueArgument
placedOnItsOwnPositionInCall*KtValueArgument
canBeUsedWithoutNameInCall%DeclarationDescriptor
substituteFixedCollection
matchExpectedInfo.MutableCollection
addLookupElementsForNullable!Collection
filterCallableExpectedFuzzyType
matchExpectedInfoLookupElement
addTail(CallableDescriptor
callableReferenceType#MutableCollection
addLookupElements2DeclarationDescriptor
fuzzyTypesForSmartCompletion&LookupElement
addTailAndNameSimilarityLookupElement
withOptions LookupElement
keywordProbability+LookupElement
assignSmartCompletionPriority!CharSequence
indexOfSkippingSpaceCharSequence
isCharAtDocument
isTextAt$LookupElement
withLineIndentAdjusterCharSequence
skipSpacesString
indentLinesAfterFirst$CharSequence
skipSpacesAndLineBreaksString
unindent&CompletionKeywordHandler
createLookups.CompletionParameters
isUseSiteAnnotationTarget&ElementAndTextList
convertCodeToKotlinElementAndTextList
linesCountPath
getPsiFileModule
getBuildScriptPsiFile!Module
getBuildScriptSettingsFile%Project
getTopLevelBuildScriptPsiFileModule
getBuildScriptFile$Module
getBuildScriptSettingsPsiFile,Module
getTopLevelBuildScriptSettingsPsiFile%State
assertApplicableInMultiplatform(GradleVersionProvider
fetchGradleVersionGradleVersionInfo
scope1GradleBuildScriptManipulator
usesNewMultiplatform)GradleBuildScriptManipulator
useNewSyntax+GradleVersionProvider
gradleVersionFromFile!KotlinGradleFacade
getManipulatorCollection
getContainingFilesKtDeclaration
processAllUsages#KtDeclaration
processAllExactUsages0ConfigurationFromContext
isJpsJunitConfigurationQuery
applyFilter%ExternalSystemRunTask
presentableName+GradleProjectSettings
loadLastModifiedFilesDataInput
readListDataOutput
writeListCollection
collectErrors*KotlinDslScriptsModel
toListOfScriptModels'DataNode
getResolvedVersionByModuleDataModule
gradleModuleBuilderModule
settingsScriptBuilderModuleData
konanTargets#Module
compilerArgumentsBySourceSet(KotlinFacetSettings
configureOutputPathsModule
sourceSetName)KtExpression
isTargetSourceSetDeclarationDataNode
isHmppDataNode
isResolved DataNode
pureKotlinSourceFolders(DataNode
kotlinTaskPropertiesBySourceSet*DataNode
kotlinGradleProjectDataNodeOrFail&DataNode
kotlinGradleProjectDataOrNullDataNode
coroutines$DataNode
additionalVisibleSourceSets*DataNode
kotlinGradleProjectDataNodeOrNullDataNode
implementedModuleNamesDataNode
hasKotlinPlugin&DataNode
kotlinGradleProjectDataOrFailDataNode
dependenciesCacheDataNode
kotlinNativeHome%DataNode
compilerArgumentsBySourceSetDataNode
platformPluginId"ProjectResolverContext
getMppModelCompanion
addDependency#IdeaKpmFragment
computeResourceType!IdeaKpmFragment
computeSourceTypeIdeaKpmFragment
isTestFragmentIdeaKpmFragment
resourceDirs#IdeaKpmFragmentCoordinates
fullNameIdeaKpmFragment
sourceDirsCompanion
getCompilationsCompanion
buildDependencies>Companion
populateModuleDependenciesBySourceSetVisibilityGraphDataNode
castOKotlinMppPopulateModuleDependenciesContext
getDependenciesFromVisibleSourceSets2Companion
populateModuleDependenciesByCompilationsIKotlinMppPopulateModuleDependenciesContext
isDependencyPropagationAllowedVKotlinMppPopulateModuleDependenciesContext
findCompilationsToPropagateDependenciesFromEKotlinMppPopulateModuleDependenciesContext
resolveVisibleDependencies9Companion
populateModuleDependenciesByPlatformPropagationList
dependencyIntersectionAKotlinMppPopulateModuleDependenciesContext
getRegularDependenciesJKotlinMppPopulateModuleDependenciesContext
getCompilationsWithDependenciesFKotlinMppPopulateModuleDependenciesContext
getIntransitiveDependencies:KotlinMppPopulateModuleDependenciesContext
getDependenciesKlibInfo
ideNamePsiElement
resolveAllReferencesKtExpression
mustBeConstantKtParameter
isSetterParameterPsiElement
isBlockComment.KtNameReferenceExpression
findSingleDescriptor=KtNameReferenceExpression
prevElementWithoutSpacesAndCommentsDeclarationDescriptor
isInRoot(DeclarationDescriptor
isTopLevelCallableValueParameterDescriptor
render6KtDotQualifiedExpression
getLeftMostReceiverExpression(ResolvedCall
canBeReplacedWithInvokeCall9KtPsiFactory
appendSemicolonBeforeLambdaContainingElementKtDeclaration
isFinalizeMethodKtExpression
ifBranchesOrThis$KtQualifiedExpression
toResolvedCallKtExpression
negate$KtQualifiedExpression
callExpressionKtExpression
isSizeOrLengthKtExpression
isCountCall1KtExpression
receiverTypeIfSelectorIsSizeOrLengthKtExpression
specialNegation#CallableDescriptor
isInvokeOperator,KtCallExpression
canBeReplacedWithInvokeCallClassDescriptor
isRange3KtQualifiedExpression
isReceiverExpressionWithValueKtExpression
isExitStatement*KtBlockExpression
getParentLambdaLabelNameKtCallExpression
isMethodCall ResolvedCall
resolvedToArrayType,KtDotQualifiedExpression
deleteFirstReceiver0BuilderByPattern
appendCallOrQualifiedExpressionKotlinType
isFlexibleRecursive)FunctionDescriptor
isOperatorOrCompatible#KtDotQualifiedExpression
isToString"KtCallExpression
isArrayOfFunctionCallableDescriptor
receiverType-KtDotQualifiedExpression
replaceFirstReceiver/KtCallExpression
singleLambdaArgumentExpression&KtExpression
hasResultingIfWithoutElse'KotlinType
reflectToRegularFunctionType*KtElement
isReferenceToBuiltInEnumFunctionKtIfExpression
branchesKtElement
isOne'Sequence
lastWithPersistedElementOrNullKtContainerNode
descriptionKtElement
isZero"KtExpression
getCallableDescriptor KtQualifiedExpression
calleeName#KtPropertyAccessor
singleExpressionString
hasUnderscoreKtConstantExpression
isNumericKtExpression
getArguments*KtThrowExpression
getContainingDeclaration"KtDeclaration
findThrowsAnnotation$KtPsiFactory
createCollectionLiteralValueArgument
hasTypeFqName
fqNameIsExistsPsiComment
nextCommentPsiComment
commentTextPsiElement
isEndOfLineCommentPsiComment
prevComment1KtStringTemplateExpression
singleExpressionOrNull$KtAnnotationEntry
doAddUseSiteTarget*KtAnnotationEntry
applicableUseSiteTargets"KtAnnotationEntry
addUseSiteTarget1KtDestructuringDeclaration
noTypeReferenceEntriesKtExpression
unwrapIfLabeled.KtCallableDeclaration
hasDifferentSetsOfUsages&KtVariableDeclaration
countWriteUsages$KtVariableDeclaration
hasWriteUsagesKtCallableDeclaration
hasUsagesKtExpression
isFalseConstant KtExpressionWithLabel
targetLoopKtExpression
isSimpleName"PsiChildRange
withoutLastStatementKtExpression
previousStatementKtExpression
isConstant#PsiChildRange
withoutFirstStatement!KtCallableDeclaration
countUsagesKtExpression
isPlusPlusOf/KtExpression
extractStaticFunctionCallArgumentsKtExpression
isTrueConstantKtExpression
isZeroConstant!KtLoopExpression
deleteWithLabelsKtExpression
nextStatement KtExpression
isVariableReferenceMatchResult
generateCallChain&KtLambdaExpression
findParameterUsagesMatchingState
unwrapBlock,KtExpression
containsEmbeddedBreakOrContinue1KtExpression
findVariableInitializationBeforeLoop,KtExpression
countEmbeddedBreaksAndContinuesKtExpression
isStableInLoop#KtLambdaExpression
analyzeInContextKtExpression
hasNoSideEffect,KtExpression
isSimpleCollectionInstantiationKtExpression
isRangeLiteral%DeclarationDescriptor
isCollectionAddCondition
hasUsagesOfFunctionDescriptor
isAnyEqualsKtExpression
isAnyEquals-KtExpression
getWhenConditionSubjectCandidate!KtWhenExpression
introduceSubject&KtWhenExpression
getSubjectToIntroduceKtWhenCondition
toExpression0KtExpression
hasCandidateNameReferenceExpression"KtPsiFactory
combineWhenConditions2BuilderByPattern
appendConditionWithSubjectRemoved#KtExpression
isTrivialStatementBody;KtThrowExpression
throwsNullPointerExceptionWithNoArguments=KtIfExpression
fromIfKeywordToRightParenthesisTextRangeInThis#KtExpression
anyArgumentEvaluatesTo@KtNameReferenceExpression
inlineIfDeclaredLocallyAndOnlyUsedOnce-KtBinaryExpression
inlineLeftSideIfApplicableKtExpression
isNullExpressionKtExpression
hasFirstReceiverOfKtExpression
isElseIf!KtExpression
convertToIfStatement+KtBinaryExpression
expressionComparedToNull+KtExpression
isClauseTransformableToLetOnly)KtExpression
convertToIfNotNullExpressionKtExpression
toDataFlowValue)KtExpression
isNullExpressionOrEmptyBlockKtExpression
insertSafeCallsKtExpression
isStableVal%KtExpression
isStableSimpleExpressionKtExpression
evaluatesTo)KtIfExpression
introduceValueForCondition4KtSafeQualifiedExpression
inlineReceiverIfApplicableKtExpression
checkedExpression,KtIfExpression
buildSelectTransformationData&KtExpression
convertToIfNullExpression4KtPostfixExpression
inlineBaseExpressionIfApplicableKtExpression
hasNullableType"KtIfExpression
shouldBeTransformed.KtExpression
readWriteAccessWithFullExpressionKDocName
mainReferenceCompat+KtElement
resolveMainReferenceToDescriptorsKtElement
mainReferenceCompat)KtReferenceExpression
mainReferenceCompat"KtReference
canBeResolvedViaImport*KtSimpleNameExpression
mainReferenceCompat KtElement
canBeResolvedViaImportPsiReference
getImportAlias)DeclarationDescriptor
findPsiDeclarations2AbstractKtReference
renameImplicitConventionalCall KtReference
resolveToDescriptors"MutableCodeToInline
introduceValueString
nameHasConflictsInScope MutableCodeToInline
toNonMutable,MutableCodeToInline
collectDescendantsOfType+MutableCodeToInline
forEachDescendantOfTypeCodeToInline
toMutablePsiElement
updateWhiteSpacesPsiElement
addWhiteSpace&UsageReplacementStrategy
replaceUsages&UsageReplacementStrategy
processUsages(KtSimpleNameExpression
nameAndDescriptor4UsageReplacementStrategy
replaceUsagesInWholeProject<ResolutionScope
collectSyntheticStaticMembersAndConstructors&SyntheticScopes
forceEnableSamAdapters MemberScope
collectStaticMembers$KtBinaryExpression
isRangeExpressionGlobalSearchScope
selectNearestProject
resolveClass'Project
resolveFqNameOfJavaClassByIndex%Project
resolveFqNameOfKtClassByIndex PsiElement
isNameReferenceInCall4Project
ensureNoRefactoringRequestsBeforeRefactoring,Project
runRefactoringAndKeepDelayedRequests&Project
getOrCreateRefactoringRequests1KtElement
addToBeShortenedDescendantsToWaitingSetKtElement
isToBeShortened"Project
delayedRefactoringRequests KtElement
addToShorteningWaitSetKtExpression
hasIterableType!KtDeclaration
isAnonymousFunction$KtElement
isNamedDeclarationWithBody!KtExpression
isOperationReference"KtElement
isBlockBodyInDeclarationKtExpression
isSelectorKtElement
isNamedDeclaration&KtProperty
isCustomPropertyDeclarationPsiElement
isAnnotationClass#KtExpression
getRelevantDeclaration"VirtualFile
isKotlinDecompiledFile'ClassDescriptor
isDslHighlightingMarker+KtDeclaration
navigateToExpectedUsagesTitle%KtDeclaration
navigateToExpectedTitle0KtDeclaration
allNavigatableExpectedDeclarations#KtDeclaration
navigateToActualTitle)KtDeclaration
navigateToActualUsagesTitle.KtDeclaration
allNavigatableActualDeclarations#Diagnostic
getRealDiagnosticFactory-PsiMethod
isMethodWithDeclarationInOtherClass"KtClass
styleIdForMarkerAnnotation#KtElement
firstApplicableExpression!DeclarationDescriptor
isEnumClass!KtExpression
isApplicableReceiverKtUserType
applicableExpressionKtExpression
selector-KtDotQualifiedExpression
applicableExpression7KtDotQualifiedExpression
firstExpressionWithoutReceiver+DeclarationDescriptor
isEnumCompanionObjectKtElement
declarationDescriptorDocument
areAnchorsOnOneLinePsiElement
markerDeclarationKtNamedDeclaration
nameAnchor$KtNamedDeclaration
requiresNoMarkers)KtDeclaration
findMarkerBoundDeclarations'KtNamedDeclaration
expectOrActualAnchor+PsiElement
getWrappingPrefixExpressionIfAny#KtWhenEntry
isTrueConstantCondition#KtWhenExpression
deleteFalseEntries!KtWhenExpression
replaceTrueEntry$KtWhenEntry
isFalseConstantConditionPsiElement
findExistingEditorKtCallExpression
applyTo KtDotQualifiedExpression
applyToKtExpression
nameUsedKtBinaryExpression
applyToKtBinaryExpression
isApplicable9KtDotQualifiedExpression
hasNullableReceiverExtensionCall KtCallExpression
isLetMethodCallKtCallExpression
isApplicable%KtDotQualifiedExpression
isApplicable#KtLambdaExpression
getParameterName,KtDotQualifiedExpression
hasLambdaExpression*KtFunctionLiteral
valueParameterReferencesKtExpression
isApplicableKtExpression
isReturnOrNothingKtIfExpression
hasRedundantElse$KtIfExpression
lastSingleElseKeyword&KtPrefixExpression
isInAnnotationEntry$KtNamedFunction
isAmbiguouslyDerived$KtEnumEntry
valueArgumentListIfEmpty%KtValueArgument
parentCallExpressions)KtExpression
findLambdaExpressionByOffsetKtFunctionLiteral
removeArrow!KtCallExpression
isApplicableCall(KtValueArgument
getLambdaOrNamedFunctionKtNamedDeclaration
describeKtExpression
setTypeIfNeedKtClass
hasOverriddenMemberKtEnumEntry
hasOverriddenMemberKtClass
createDescription#KtExpression
isSubtypeOfFormattable'KtLambdaExpression
getImplicitParameter3KtLambdaExpression
getParentImplicitParameterLambda6KtNameReferenceExpression
isImplicitParameterReference&KtFunctionLiteral
findLambdaReturnType%KtReturnExpression
expectedReturnTypeKtExpression
canBeUsedAsValueKtExpression
toIntConstantKtExpression
sizeOrLengthCall!KtCallableDeclaration
isVarOrOpen1KtCallableDeclaration
isOverridingNullableNothingKtCallableDeclaration
check$KotlinType
isReadOnlyCollectionOrMapKotlinType
classDescriptorKtExpression
deparenthesize&KtCallExpression
isPairConstructorCallKtIfExpression
branchKtExpression
replaceWithBranchKtExpression
pairKtFunctionLiteral
lastStatementKtCallExpression
lambda#Array
registerWithElementsUnwrapped&KtPostfixExpression
getReplacementDataPsiElement
startInPlaceRename$KtWhenExpression
findDeclarationNear'KtExpression
previousPropertyFromParentKtProperty
action KtValueArgument
lambdaExpressionKotlinType
isListOrSubtypeKotlinType
isMutableListKotlinType
isList!KotlinType
isMutableListOrSubtypeKtFile
findAllDiagnosticsKtFile
findAllSuppressedPlacesKtExpression
isNaNExpressionPsiElement
isWhitespaceOrQuote.KtBlockStringTemplateEntry
hasWhitespaceAround*KtExpression
getTopmostParenthesizedParentKtExpression
isNullLiteralKtExpression
parenthesize#KtExpression
getParenthesizedParent,KtDestructuringDeclaration
primaryParametersKtTypeReference
isObjectPsiElement
asPsiClassKotlinType
toDfTypeNotNullableKotlinType
canBeNull!ClassDescriptor
getTypeConstraintKotlinType
toPsiPrimitiveTypeKtExpression
getKotlinTypeKotlinType
toDfTypeKotlinType
getArrayElementTypeKotlinType
isInheritorAnyKotlinType
findParentsKotlinType
isThrowable.KtDotQualifiedExpression
getArgumentExpressionResolvedCall
isCalling1ResolvedCall
hasLastFunctionalParameterWithResultKotlinType
isCollection!KtCallExpression
implicitReceiverClassDescriptor
isListOrSetKotlinType
isMapKtCallExpression
isCallingKotlinType
isIterableKotlinType
isFunctionOfAnyKind.KtCallExpression
isTransformationOrTermination"KtCallExpression
isLazyTerminationKtCallExpression
isTerminationKtCallExpression
hasReturn+KtQualifiedExpression
collectCallExpression#KtQualifiedExpression
findCallChain/IfThenToSelectData
clausesReplaceableBySafeCallDataContext
hostEditorDataContext
psiElement"KtDeclarationWithBody
getBodyScope(DeclarationDescriptor
getContainingScope-PsiElementFactory
createReferenceListWithRoleKtElement
renderTrimmedPsiDirectory
toDirectoryWrapper"MoveDestination
toDirectoryWrapper!KtDeclaration
withExpectedActuals0DeclarationDescriptor
explicateAsTextForReceiver!DialogWrapper
showWithTransaction,KtExpression
replaceWithCopyWithResolveCheck"PsiElement
getExtractionContainersPsiElement
getUsageContext#PsiElement
isInsideInjectedFragmentKtNamedDeclaration
isAbstract PsiNamedElement
isInterfaceClassPsiElement
canRefactor"PsiMethod
checkDeclarationConflict&DeclarationDescriptor
getThisLabelNamePsiFile
isInjectedFragment#Project
checkConflictsInteractivelyFqNameUnsafe
hasIdentifiersOnlyPsiElement
isTrueJavaMethodKtElement
validateElementKtFile
createTempCopyFqName
hasIdentifiersOnly0KtExpression
removeTemplateEntryBracesIfPossible ImplicitReceiver
explicateAsText$PsiElement
isInKotlinAwareSourceRoot%PsiElement
getAllExtractionContainers&KtNamedDeclaration
isCompanionMemberOf3KtDeclaration
resolveToExpectedDescriptorIfPossible0KtNamedDeclaration
isConstructorDeclaredProperty(KtSimpleNameExpression
internalUsageInfoList
mapWithReadActionInProcess>KtElement
processInternalReferencesToUpdateOnPackageNameChange%KtSimpleNameExpression
isExtensionRef:KtElement
getInternalReferencesToUpdateOnPackageNameChangeKtFile
updatePackageDirectiveKtNamedDeclaration
typeKtClass
defaultType KotlinMoveTarget
getTargetModulePsiJavaFile
shouldFixFqName*KtNamedDeclaration
addOpenModifierIfNeededKtFile
allElementsToMoveEditor
findSimpleNameReferenceKtExpression
isInvokeCall%PsiElement
writeOrReadWriteExpressionPsiElement
javaMemberToInline8NewJavaToKotlinConverter
convertToKotlinNamedDeclarationKtElement
replaceWithTargetThisKtElement
newFqNameKtElement
newTypeText)KtNamedDeclaration
addAnnotationWithSpace+KtNamedDeclaration
canMoveMemberToJavaClassKtClass
makeAbstract(KtNamedDeclaration
isAbstractInInterfaceKtParameter
toProperty-KtClassOrObject
getSuperTypeEntryByDescriptor$KtProperty
mustBeAbstractInInterfaceKtParameter
needToBeAbstractPsiClass
isSourceOrTarget+KotlinPullUpData
checkInnerClassToInterface)KotlinPullUpData
checkAccidentalOverrides KotlinPullUpData
checkVisibility/KotlinPullUpData
getClashingMemberInTargetClass/KotlinPullUpData
checkClashWithSuperDeclaration(DeclarationDescriptor
renderForConflicts&KtNamedDeclaration
deleteWithCompanionKtNamedFunction
getOverloads%DeclarationDescriptor
canonicalRenderPsiElement
isOperator"PsiElement
representativeContainerResolvedCall
noReceivers!PsiNamedElement
renderDescription#LexicalScope
getRelevantDescriptorsKotlinType
isCollectionLikeOfPsiFile
findElementForRename1PsiElement
getOverriddenFunctionWithDefaultValues%KtExpression
extractableSubstringInfo!PsiElement
substringContextOrThis#KtExpression
substringContextOrThis.PsiElement
findElementByCopyableDataAndClearIt#KotlinPsiRange
getPhysicalTextRange$ExtractableSubstringInfo
replaceWith5KtExpression
mustBeParenthesizedInInitializerPosition2PsiElement
findExpressionsByCopyableDataAndClearIt1PsiElement
findExpressionByCopyableDataAndClearItKotlinPsiRange
highlightKotlinPsiRange
preview"ExtractableCodeDescriptor
validateKotlinType
isMeaningful'ExtractionData
createTemporaryCodeBlock#KtNamedDeclaration
getGeneratedBodyExtractionData
performAnalysis#KotlinType
processTypeIfExtractable KotlinBuiltIns
defaultReturnTypeKotlinType
renderForMessage&DeclarationDescriptor
renderForMessage!ExtractionData
analyzeControlFlowKotlinType
isExtractable#KotlinBuiltIns
defaultParameterTypeList
getExitPointsKtDeclaration
renderForMessage#ExtractionData
getDefaultVisibility*ExtractionData
getResultTypeAndExpressions0ExtractionData
checkDeclarationsMovingOutOfScope5ExtractionData
getLocalDeclarationsWithNonLocalUsages*KtTypeParameter
collectRelevantConstraints(List
getVarDescriptorsAccessedAfterwardsList
getModifiedVarDescriptors$TypeParameter
collectReferencedTypes#ExtractionData
getLocalInstructionsExtractionData
isLocal%ExtractionData
isVisibilityApplicable!KotlinType
collectReferencedTypes#ExtractionData
suggestFunctionNames%ExtractionData
getExperimentalMarkers)ExtractionData
createTemporaryDeclaration$KtSimpleNameExpression
resolveResultExtractionData
extractReceiver"ExtractionData
inferParametersInfo0ExtractableCodeDescriptor
getOccurrenceContainer(ExtractableCodeDescriptor
findDuplicates#KtExpression
isJumpElementToReplace6ExtractionGeneratorConfiguration
getDeclarationPattern4ExtractionGeneratorConfiguration
getSignaturePreview4ExtractionGeneratorConfiguration
generateDeclarationKotlinType
isSpecial*KtReturnExpression
isReturnForLabelRemovalControlFlow
possibleReturnTypesControlFlow
toDefaultExtractableCodeDescriptor
copyControlFlow
copyParameter
nameForRef%IntroduceTypeAliasData
getTargetScope0IntroduceTypeAliasData
getApplicableVisibilitiesIntroduceTypeAliasData
analyze.IntroduceTypeAliasDescriptor
generateTypeAlias!KtTypeReference
typeParameterInfo%IntroduceTypeAliasDescriptor
validateKtTypeReference
resolveInfoSignature
receiverTypeParameter
defaultValueParameter
modifiers*DeclarationDescriptor
toFunctionDescriptor/IntroduceParameterDescriptor
performRefactoringMemberInfoBase
toJavaMemberInfoMemberInfo
toKotlinMemberInfo.PsiNamedElement
qualifiedClassNameForRendering%PsiMember
toKtDeclarationWrapperAware%KotlinMemberInfo
getChildrenToAnalyze'PsiNamedElement
getClassDescriptorIfAny2KtNamedDeclaration
resolveToDescriptorWrapperAware KtImportDirective
isSafeToDeletePsiElement
canDeleteElement!PsiElement
removeOverrideModifierPsiMethod
cleanUpOverridesKotlinTypeInfo
renderTypeKotlinTypeInfo
isEquivalentToKotlinTypeInfo
render%KotlinMethodDescriptor
returnTypeInfo'KotlinMethodDescriptor
receiverTypeInfoPsiElement
toValVarKtParameter
setValOrVarChangeInfo
asKotlinChangeInfoPsiElement
isCaller%KotlinType
renderTypeWithSubstitutionKtElement
isInsideOfCallerBodyKotlinType
copyAsSimpleType$DeclarationDescriptor
createDeepCopy%KtNamedDeclaration
getDeclarationBodyKotlinMethodDescriptor
modifyChangeInfo
toJetChangeInfo/KotlinChangeInfo
originalBaseFunctionDescriptorKotlinChangeInfo
oldNameKotlinChangeInfo
kind%KotlinChangeInfo
getAffectedCallablesUsageInfo
unwrapped VirtualFile
getLibraryKindForJar-FileBasedIndexExtension
hasSomethingInPackage FileContent
fqNameFromJsMetadata!String
substringAfterLastNullable"String
substringBeforeLastNullable(ExternalSystemTaskId
findResolvedProject!Project
syncNonBlockingReadActionModule
externalCompilerVersionModule
getBuildSystemType ModuleSourceRootGroup
allModulesModule
toModuleGroupModule
getWholeModuleGroupList
excludeModule
externalProjectPathStringBuilder
appendIndentBrStringBuilder
appendBr"KotlinVersion
whatIsNewPageVersionKotlinVersion
campaignVersionKotlinVersion
dropHotfixPart/RepositoryDescription
toGroovyRepositorySnippet$DependencyScope
toGradleCompileScope/RepositoryDescription
toKotlinRepositorySnippet&KotlinProjectConfigurator
canConfigureMethod
invokeCatchingClass
getMethodOrNullClassLoader
loadClassOrNullClass
getDeclaredMethodOrNullKotlinSourceSet
isDependsOn6KotlinSourceSetContainer
resolveAllDependsOnSourceSets#KotlinSourceSetContainer
sourceSets;KotlinSourceSetContainer
resolveDeclaredDependsOnSourceSets$KotlinSourceSetContainer
isDependsOnTask
getIsIncrementalTask
getPureKotlinSourceRootsTask
getPackagePrefixTask
getKotlinPluginVersion/KotlinTaskPropertiesBySourceSet
acknowledgeTask$KotlinMPPGradleModel
findCompilation2KotlinMPPGradleModel
compilationDependsOnSourceSet$KotlinMPPGradleModel
getCompilations+KotlinSourceSetProto
allDependsOnSourceSetsKotlinDependency
deepCopyAny
getNamed
compilationsProject
getTargetsProject
getTargetNamed
getCompileKotlinTaskName.MultiplatformModelImportingContext
getPropertyProject
getPropertyAny
callReflectiveAny
callReflectiveGetterAny
callReflectiveAnyGetterCollection
onlyNewDependenciesKtFile
canBeDecompiledToJava/KtExpression
isLambdaReturnValueHintsApplicable3KtLambdaExpression
getNameOfFunctionThatTakesLambdaASTNode
isFollowedByNewLine KtExpression
isUnclearExpression#KtExpression
isAnnotatedWithComment&KtExpression
isClassOrPackageReferenceString
withSpacesRemoved*File
toJpsVersionAgnosticKotlinBundledPathModule
getSpecialAnnotations(KtClassOrObject
getStructureDeclarations(CachedAnnotationNames
getAnnotationNamesPsiElement
withKind&SearchEverywhereFoundElementInfo
toPsiClassDescriptor
toSimpleTypeString
removeTypeParametersIElementType
binaryExprOpNameKotlinType
renderNames,MatchingHandler
withinHierarchyTextFilterSetKtDeclaration
resolveKotlinType!WithProgressProcessor
updateStateMutableMap
getOrPutIfNotNullString
asSafeFqNameString
asSetterNameString
escapedList
mutateString
asGetterNameList
replace%KtDeclaration
fqNameWithoutCompanionsPsiClass
classKindPsiMember
visibilityJvmClassKind
toJkPsiMember
modality#PsiMember
handleProtectedVisibilityList
withFormattingFrom$JKFormattingOwner
withFormattingFrom!JKFormattingOwner
containsNewLineAny
withPsiAndFormattingFrom!JKFormattingOwner
clearFormattingString
asLabelJKTypeElement
present%JKTreeElement
forEachDescendantOfType!JKExpression
nullIfStubExpressionJKTreeElement
identifier$JKExpression
asLiteralTextWithPrefixJKExpression
callOnJKInheritanceInfo
presentJKVariable
hasWritableUsagesJKOperator
isEquals$JKAnnotationMemberValue
toExpressionJKVariable
findUsages JKExpression
unboxFieldReferenceJKClass
primaryConstructor0JKFieldAccessExpression
isInDecrementOrIncrementJKExpression
asStatementJKExpression
parenthesizeJKStatement
isEmpty.JKFieldAccessExpression
asAssignmentFromTargetJKStatement
statementsJKClass
declarationList"JKClass
getOrCreateCompanionObject#JKAnnotationList
annotationByFqNameList
toArgumentListJKClass
getCompanion!JKClass
isObjectOrCompanionObjectJKElement
psi-JKExpression
parenthesizeIfCompoundExpressionJKTreeElement
forEachDescendantJKExpression
qualifiedJKClass
isLocalClass&JKOtherModifiersOwner
hasOtherModifierJKModifierElement
modifier$JKModifiersListOwner
forEachModifier'JKOtherModifiersOwner
elementByModifierJKMutabilityOwner
mutabilityJKVisibilityOwner
visibilityJKModalityOwner
modalityKProperty0
detachedKProperty0
detachJKElement
parentOfTypeJKElement
parentsJKTreeElement
copyTreeAndDetachJKTreeElement
copyTreeJKElement
detachedJKSymbol
containingClassJKSymbol
isUnresolvedJKSymbol
isEnumConstantJKSymbol
isStaticMemberJKSymbol
isUnnamedCompanionJKSymbol
getDisplayFqNameJKSymbol
deepestFqNameJKType
arrayFqName!JKJavaPrimitiveType
toLiteralTypeJKType
asTypeElementJKType
applyRecursiveKtTypeReference
toJKJKType
asPrimitiveTypeJKType
updateNullabilityJKType
isUnitJKJavaPrimitiveType
kotlinNamePsiType
isKotlinFunctionalType JKJavaPrimitiveType
isNumberType*JKType
replaceJavaClassWithKotlinClassType#JKType
updateNullabilityRecursivelyJKType
arrayInnerTypeJKType
isCollectionTypeJKClassSymbol
isArrayTypeJKClassSymbol
asTypeJKClassSymbol
isStringTypeJKClassSymbol
isInterface"JKJavaPrimitiveType
isStrongerThanJKType
isInterfaceJKType
isArrayTypeJKType
isStringTypeString
escapedAsQualifiedNameState
constraintBoundConstraintBound
isUnusedConstraint
copyKtTypeReference
hasUnknownLabelPsiElement
elementInfoKtTypeElement
hasUnknownLabelPsiElement
getLabelClassReference
descriptorBoundType
enhanceWithBoundType
typeVariableTypeVariable
asBoundTypeBoundType
withEnhancementFromClassDescriptor
classReferenceBoundType
isReferenceToClassTypeVariable
isFixedTypeVariable
setStateIfNotFixedOption
getOrNull2RecursiveApplicableConversionBase
moduleApiVersionKtPsiFactory
createGetterKtDeclaration
typeKtReferenceExpression
resolvePsiElement
isInRangeList
descendantsOfTypeKtElement
hasUsagesOutsideOfKtPsiFactory
createSetter(KtExpression
unpackedReferenceToPropertyCollection
mapAllSettingsOwner
enumSettingImplPanel
kmpWizardLink!TypeConstructor
supertypesWithAny3ClassifierDescriptorWithTypeParameters
constructors-FunctionDescriptor
shouldNotConvertToProperty-ClassDescriptor
findCallableMemberBySignature;SyntheticJavaPropertyDescriptor
suppressedByNotPropertyList&DeclarationDescriptor
isJavaDescriptor+ClassifierDescriptorWithTypeParameters
kindIdentificatorOwner
idPropertyInfo
isFakeString
fixSetterParameterName&MultiplatformSourcesetIR
sourcesetNameIrsOwner
firstIrOfTypeIrsOwner
irsOfTypeList
irsOfTypeOrNullIrsOwner
withIrsIrsOwner
freeIrsIrsOwner
irsOfTypeOrNullIrsOwner
withoutIrsList
distinctAndSorted,MultiplatformModuleIR
neighbourTargetModules"LibraryDependencyIR
isKotlinStdlibSourcesetType
toDependencyTypeDependencyType
getGradleName-MultiplatformModulesStructureIR
updateTargets0MultiplatformModulesStructureIR
updateSourceSetsBuildFileIR
targetsBuildSystemIR
renderList
removeSingleIRDuplicatesIRsListBuilderFunction
buildIterable
mapComputeIterable
mapComputeM	Parser
orMap
parseValueAny
classMismatchErrorParsingState
withSettingsParser
parseAny
parseAsTaskResult
flatMapTaskResult
mapFailureTaskResult
recoverTaskResult
mapSequence
sequenceFailFirstTaskResult
raiseIterable
mapSequenceIterable
sequenceIgnoreAny
asSuccessTaskResult
andThenIgnoringTaskResult
plusTaskResult
mappendTaskResult
asNullableIterable
mapSequenceIgnoreTaskResult
withAssertTaskResult
isSuccessIterable
sequenceTaskResult
onSuccessTaskResult
mappendMTaskResult
onFailureTaskResult
getOrElseTaskResult
ignoreTaskResult
andThenWriter
createMppFilesWriter
applyMppStructureString
indentedWriter
createSimpleFilesString
asPathFunction1
andThenNullable
String
div
Any
safeAsPath
asStringWithUnixSlashesFunction1
andThen
Any
ignoreAny
asSingletonListReader
getUnspecifiedSettingsReader
moduleByReference!ValidationResult
withTargetIfNullValidationResult
toResultValidationResult
withTargetReader
validateList ValidationResult
isSpecificErrorSettingValidator
withTargetParsingContext
parseSettingsMapPluginSetting
referenceReader
isBuildSystemAvailableKotlinVersionKind
isStableReader
parseYamlSpring
timesConstraints
setConstraints
getSpring
unaryMinusSpring
plusInt
asSpringSpring
minusWizardContext
getNextButton,ToolbarDecorator
createPanelWithPopupHandlerValidationError
asHtml JTextField
withOnUpdatedListenerJComponent
addBorderModule
iconModuleSubType
iconString
asHtmlModuleConfigurator
iconModuleType
iconModuleKind
icon#DisplayableSettingItem
fullTextHtml"SettingComponent
handleValueUpdateLibraryArtifact
render'SettingReference
createSettingComponentProjectTemplate
iconReader
valueForSettingJComponent
firstNonPanelOrNull$ColoredListCellRenderer
renderModuleReader
availableTemplatesForModule
kindTextReader
pomIRReader
projectNameReader
projectPathList
withAllSubModulesPath
urlModuleSubType
isIOSModuleSubType
isNativeDesktopModuleType
correspondingStdlibBuildFilePrinter
printBuildFile#ModulesToIrsState
stateForSubModule"Reader
settingsGradleBuildFileData#SettingsWriter
applyProjectTemplateModule
javaPackage+List
filterOutOnlyDefaultPluginRepositoriesWriter
allModulesPaths&PluginSettingsOwner
addBuildSystemData,BuildSystemType
getDefaultPluginRepositoriesReader
allIRModules+Reader
getPluginRepositoriesWithDefaultOnesBuildSystemType
isGradle$Repository
isDefaultPluginRepositoryReader
buildSystemType'ModulePath
considerSingleRootModuleModeWriter
forEachModuleWriter
updateModulesWriter
updateBuildFilesModule
isRootModuleModule
pathSourceset
pathFileDescriptor
asSrcOf+FileTemplateDescriptorWithPath
withSettingsFileDescriptor
asResourceOfIterable
foldPredicatesIterable
foldTransformersWriter
applyTemplateToModuleTemplateApplicationResult
plusTemplate
settingsList
applyAllModule
createTargetAccessIrModuleType
createDefaultTarget PluginSettingReference
withValuePluginSetting
withValueKotlinTestFramework
isPresent$GradleIRListBuilder
commonCssSupport&GradleIRListBuilder
applicationSupportModule
getConfiguratorSettings&Reader
allSettingsOfModuleConfiguratorModuleConfigurator
settingsModuleType
defaultTargetModuleConfigurator
moduleType+Module
cacheInvalidatingOnRootModifications3Project
cacheByClassInvalidatingOnRootModificationsModule
cacheByClass2Module
cacheByClassInvalidatingOnRootModifications,Project
cacheInvalidatingOnRootModificationsIdePlatformKind
resolutionString
isNextMessageString
colonString
substringBeforeAndTrimString
startsWithSeverityPrefixString
amendNextLinesIfNeededString
substringAfterAndTrimInt
skipDriveOnWin/JavaPropertyDescriptor
getResourceReferenceType-JavaPropertyDescriptor
getAndroidResourceTypeKtClass
tryDeleteInitBlock&KtBlockExpression
isEmptyWriteToParcelKotlinType
isArrayOfParcelable'KtAnnotationEntry
isTransientAnnotation KtDeclaration
isDescribeContents$KtClass
findOrCreateDescribeContents!KtClass
findOrCreateWriteToParcelKotlinType
isIBinderKotlinType
isListOfIBinderKotlinType
isListOfParcelable'KtClass
findOrCreateParcelableSupertype.KtTypeReference
isParcelableSuccessorReferenceKtClass
canRemoveParcelableKtClass
findOrCreateCreatorKtClass
saveKtDeclaration
isWriteToParcelKtClass
reimplementParcelable'KtExpression
isCallToSuperWriteToParcelKtClass
addFieldReadsKtClass
findOrCreateConstructorKotlinType
isBundleKotlinType
isArrayOfIBinderKotlinType
isSparseBooleanArrayKtClass
canAddParcelableKotlinType
getNameKtClass
canRedoParcelableKtClass
superExtendsParcelable!KtTypeReference
extendsParcelable%KtConstructor
isConstructorFromParcel"KtDeclaration
isParcelablePropertyKtClass
findDescribeContents/KtExpression
isReadFromParcelPropertyAssignment"KtClass
createSecondaryConstructorKtProperty
isTransient'PropertyDescriptor
formatReadFromParcelKtExpression
isReadFromParcel&PropertyDescriptor
formatWriteToParcelKtParameter
isParcelParameter!KtClass
findConstructorFromParcel%KtTypeReference
isParcelableReferenceKtClass
isParcelizeKtClass
findParcelableSupertypeKotlinType
isArrayOfStringKtClass
addFieldWrites&KtClass
removeParcelableImplementationKotlinType
isListOfString)KtDeclaration
addNewLineBeforeDeclarationKtClass
implementParcelableKtSuperTypeList
findParcelable!KotlinType
isSubclassOfParcelableKtTypeReference
fqNameEqualsKtClass
findCreatorKtClass
findWriteToParcel2KotlinMPPGradleModel
androidCompilationsForVariant/IdeModuleSourceSet
androidCompilationNameSuffixDataNode
sourceSetsByName<KotlinMPPGradleModel
findRootOrIntermediateAndroidSourceSets)IdeModuleSourceSet
getRootKotlinSourceSet!Module
androidExtensionsIsEnabled+ModuleInfo
androidExtensionsGlobalCacheImpl ModuleInfo
findAndroidModuleInfo%ModuleInfo
androidExtensionsIsEnabled*ModuleInfo
androidExtensionsIsExperimental&Module
androidExtensionsIsExperimentalModule
getOptionValueInFacet"AndroidFacet
getPrimaryManifestXml+AndroidFacet
cachedValueFromPrimaryManifestPsiClass
isInProject<MavenClassRegistryManager
collectFixesFromMavenClassRegistryIterable
firstNotNullResultArray
firstNotNullResultSequence
toUrlsPsiClass
isVisibleInXmlModule
isSourceModified*ModuleClassLoaderImpl
hasLoadedAnyUserCodeModule
externalLibraries(ModuleClassLoaderImpl
isUserCodeUpToDateModule
getExternalLibraryJars!Module
getLibraryDependenciesJars"UserDataHolder
getOrCreateHatcheryModuleClassLoader
isCompatible,ModuleClassLoader
areTransformationsUpToDateUserDataHolder
getOrCreate-ExternalAndroidLibrary
getResolvedPackageName/ExternalAndroidLibrary
registerLibraryResourcesProject
getProjectPropertiesDataContext
moduleList
sortToApplyProject
isEnableJetifierProject
disableJetifierProject
isAndroidxProject
setAndroidxPropertiesAndroidxName
getNameInProjectProject
hasAndroidxPropertyAction
getNameGithubAccount
isGHEAccountGithubAccount
nameWithServer%GHPullRequestFileViewedState
isViewed(GithubAccount
loadWatchedReposSkipErrors!GithubAccount
loadAssociatedRepos"GHSimpleLoadingModel
getResultFlow#ChangesTree
showPullRequestProgressChangesTree
getPullRequestFilesString
convertToHtmlBaseLoginDialog
getAuthDataGHLoginRequest
loginWithTokenGHLoginRequest
loginWithOAuthGHLoginRequest
configure$GHLoginRequest
loginWithOAuthOrToken#GHLoginRequest
isLoginUniqueCheckerGHAccountAuthData
updateAccount!GHAccountAuthData
registerAccount JComponent
setPaddingCompensatedJTextField
tryParseServerJTextField
serverValidGithubAccount
isGHAccountGitLabApi
getCurrentUserGitLabApi
loadImageDataNode
processModule1ExternalSystemTaskExecutionSettings
containsTasks$SdkComboBox
addJavaHomeReferenceItem+SdkLookupProvider
resolveGradleJvmReference*SdkComboBox
addGradleJavaHomeReferenceItem(SdkComboBox
addUsefulGradleJvmReferences)SdkComboBox
getSelectedGradleJvmReference)SdkComboBox
setSelectedGradleJvmReferenceModuleData
setBuildSrcModule&ModuleData
setCompositeBuildGradlePathModuleData
getGradlePath ModuleData
setDirectoryToRunTask&ModuleData
getCompositeBuildGradlePathModuleData
isBuildSrcModule ModuleData
getDirectoryToRunTask1SdkLookupProvider
nonblockingResolveGradleJvmInfo2GradleJvmResolutionContext
canUseGradleJavaHomeJdk+GradleJvmResolutionContext
canUseProjectSdk,GradleJvmResolutionContext
canUseJavaHomeJdk(GradleJvmResolutionContext
findGradleJvm PsiClass
getRuntimeQualifiedNamePsiClass
isParameterizedVirtualFile
isGradleFilePsiFile
isGradleFile%GroovyFileBase
getVersionCatalogsDataLogger
errorKtProperty
hasBackingFieldModule
getGradleProjectPath$RepositoryModel
toArtifactRepositoryCell
visibleIfCell
enableIfCell
labelTableCell
showValueHintCell
bindIntText#JTextComponent
getValidatedIntValueJTextField
columns	Cell
rowsCell
bindSelectedCell
whenStateChangedFromUiCell
actionListenerCell
selectedCell
bindState"MutableProperty
toNullableProperty$KMutableProperty0
toNullableProperty#KMutableProperty0
toMutablePropertyPanel
buttonGroupCell
whenItemSelectedFromUiComboBox
columnsCell
bindItemCell
bindItemNullableButtonsGroup
bindCell
bindIntValueMutableMap
registerGaps
toJBEmptyBorder#JBCefBrowser
executeJavaScriptAsync"TargetPresentation
speedSearchTextHorizontalBarChart
datasetsHorizontalBarChart
datasetBarDataHolder
datasetCategoryLineChart
datasetsXYLineChart
datasetGridChartWrapper
gridGrid
formatXYLineDataset
generateXYLineDataset
valuesGrid
yPainterChartWrapper
findScaleCategoryLineChart
datasetChartWrapper
marginsXYLineChart
datasetsCategoryDataHolder
datasetXYDataHolder
datasetXYChartComponent
rangesGrid
xPainterDoubleArray
shiftLeftByTwoDouble
orZeroDouble
curveToRow
attachSubRowsEnabledCellBuilder
bindValueToProperty FileChooserDescriptor
chooseFileRow
segmentedButtonRow
buttonSelectorAbstractButton
selectedComponentPredicate
not#JTextComponent
enteredTextSatisfiesJComboBox
selectedValueMatchesComponentPredicate
orJComboBox
selectedValueIsComponentPredicate
and	Number
toRow
enableSubRowsIfRowBuilder
buttonGroupRow
enableIfInnerCell
buttonGroupRowBuilder
fullRowLC
setInsetsLC
applyUINumericRange
asRangeJTextComponent
bindIntPropertyCellBuilder
noGrowY#KMutableProperty0
toNullableBindingKMutableProperty0
toBindingCellBuilder
withValueBindingPropertyBinding
toNullableCellBuilder
applyToComponentCell
sliderCellBuilder
withTextBindingCellBuilder
selectedCellBuilder
labelTableCellBuilder
withSelectedBindingCellBuilder
actsAsLabel!Component
isToolbarDecoratorPanelComponent
isPanelWithToolbarJTextPane
appendProcessOutputJPasswordField
charsAbstractButton
focusInsetsAbstractButton
viewBoundsRow
fontSizeComboBoxProject
getTrustedStateProject
isTrustedProject
setTrustedRow
installNameGeneratorsCell
installNameGeneratorsCoroutineScope
repaintQueueJComponent
setMinimumWidthWizardContext
projectOrDefaultDialogPanel
withVisualPadding*DialogPanel
setMinimumWidthForAllRowLabelsAction
textSplitter
secondComponentLengthSplitter
firstComponentLength#RecoveryAction
performUnderProgressRunAnythingContext
getPathIterable
toPluginDescriptorsIterable
toPluginSet*PropertiesComponent
ignoreLanguageDetector1PluginRepositoryAuthProvider
getCustomHeadersSafe*PluginRepositoryAuthProvider
canHandleSafe%XMLStreamReader2
consumeChildElements$XMLStreamReader
consumeChildElements.PluginManagerConfigurableForOrgState
isAllowed0PluginManagerConfigurableForOrgStateRule
matches"BaseEventId
getIfInitializedOrNullLogger
infoOrDebug!RequestBuilder
setHeadersViaTunerTreePath
asAbstractTreeNodeAbstractTreeNode
asVirtualFile#AbstractTreeNode
bookmarkOccurrenceAbstractTreeNode
asDescriptorStatusText
initializeTreePath
findFolderNodeProjectViewNode
findFileIcon*ProjectViewNode
computeScratchPresentation'ProjectViewNode
computeExternalLocation!AbstractTreeNode
bookmarksManager!AbstractTreeNode
parentFolderNodeAbstractTreeNode
parentRootNode(ProjectViewNode
computeDirectoryChildrenAny
asAbstractTreeNodeBookmark
bookmarksManagerAnActionEvent
bookmarksManager"Bookmark
firstGroupWithDescription#JComponent
registerEditSourceActionAnActionEvent
selectedGroupNode#JTree
registerNavigateOnEnterAction%JComponent
registerBookmarkTypeActionAnActionEvent
bookmarkNodes AnActionEvent
bookmarksViewStateAnActionEvent
bookmarksViewAnActionEvent
contextBookmarkLeafOccurrence
elementsUpCollection
runProcessorsCollection
compound%PsiLanguageInjectionHost
contentRangeTextRange
unionSegment
rangePsiElement
withNextSiblingsShred
innerRangePsiElement
childrenOfTypeSequence
skipTokensPsiElement
siblingsPsiElement
prevLeafsPsiElement
nextLeafPsiFile
hasErrorElementInRangePsiElement
prevLeafPsiElement
parentsWithSelfPsiElement
parentOfTypesPsiElement
contextOfTypePsiElement
findParentInFilePsiElement
parentsOfType"SequenceScope
walkUpToCommonParent#SequenceScope
yieldAndVisitChildren"PsiElement
findTopmostParentInFilePsiElement
descendantsOfType"PsiElement
findTopmostParentOfTypePsiFile
elementsAroundOffsetUpPsiFile
leavesAroundOffsetPsiElement
nextLeafsPsiElement
descendants SequenceScope
elementsAtOffsetUp#SequenceScope
visitChildrenAndYieldPsiFile
elementsAtOffsetUpPsiElement
findParentOfTypePsiElement
isAncestorPsiElement
parentOfTypeExecutorService
submitSafe!SingleTaskController
sendRequestsVcsLogColumn
isVisibleVcsLogUiProperties
updateOrderVcsLogColumn
getWidthVcsLogUiProperties
moveColumnVcsLogUiProperties
removeColumn!VcsLogUiProperties
changePropertyVcsLogColumn
setWidth,VcsLogUiProperties
supportsColumnsReordering#VcsLogUiProperties
getPropertyValue"VcsLogUiProperties
getColumnsOrderVcsLogUiProperties
addColumn!VcsLogColumn
withColumnProperties*VcsLogUiProperties
supportsColumnsTogglingVcsLogColumn
changeVisibilityDataPack
containsAllRefsModel
findBranchDataPack
subgraphDifferenceDataPack
findBranchDataPack
exclusiveCommitsRefsModel
isBranchHeadModification
connectRowsCollapsedGraph
modifyModification
hideRowIterable
maxOrDefaultLinearGraph
exclusiveNodes&LiteLinearGraph
getCorrespondingParentLinearGraph
getReachableNodesLiteLinearGraph
exclusiveNodesLinearGraph
subgraphDifferenceLiteLinearGraph
isAncestorIterable
minOrDefaultModification
hasDottedEdgesLinearGraph
findAncestorNodeMultiMap
unionVcsLogUiEx
jumpToNearestCommitInt2ObjectMap
removeAllCollection
firstNotNull"VcsLogTextFilter
caseSensitiveTextCollection
matchesNothing&VcsLogFilterCollection
getPresentationVcsLogFilterCollection
matchesVcsLogFilterCollection
withoutVcsLogFilter
withPrefixVcsLogFilterCollection
with#CommitContext
isOnlyRunCommitChecksCommitContext
amendData&NonModalCommitPromotionState
toEventId'CommitContext
commitWithoutChangesRoots"CommitWorkflowUi
getDisplayedPaths$CheckinProjectPanel
isNonModalCommit!CommitWorkflowUi
getIncludedPathsString
fixUnderscoreMnemonicJBOptionButton
getBottomInsetCommitContext
amendAuthorData"AnActionEvent
getProjectCommitModeCommitOptions
isEmptyCommitOptions
allOptions$ChangesBrowserNode
subtreeRootObjectJBLabel
setWarningJBLabel
setError'CommitOptions
changeListSpecificOptions+CommitOptions
saveChangeListSpecificOptions!CommitExecutor
getPresentableTextString
removeEllipsisSuffixCommitOptions
changeListChanged(ActionToolbar
getShowCommitOptionsButtonCommitOptions
saveState$CommitContext
isCleanupCommitMessageCommitOptions
restoreStateCommitContext
isAmendCommitModeCollection
toPartialAwareSetDiffViewer
isEditorBasedDiffViewer
editorsDiffViewer
editorCollection
diverged!Collection
getCommonCurrentBranchDvcsBranchSettings
setGrouping$DvcsBranchSettings
isGroupingEnabled0CommitWorkflowHandler
getCommitAndPushActionNameAsyncPromise
setCommit!SearchTarget
hasTextSearchStringsUsageHandler
getSearchStringSearchTarget
displayStringSearchTarget
showScopeChooserSearchTarget
targetKeySearchVariant
toUsageActionList
splitByPredicateSupplier
asAsyncSupplier"DocumentationContentUpdater
asFlowContent
isReusableContent
toolWindowUICoroutineScope
updateContentTab'DocumentationPopupUI
updateFromRequests!CoroutineScope
updateFromRequestsLookup
elementFlowFlow
asRequestFlow(DocumentationTarget
documentationRequest(CoroutineScope
computeDocumentationAsyncQuery
mappingNotNullElement
toByteArray!Element
toBufferExposingByteArray Element
getAttributeBooleanValueElement
addOptionTagElement
getOrCreateRectangle
bottomCenterRectangle
topCenterRectangle
centerRectangle
positionEditor
getCaretVisualPositionURI
withQueryURI
withFragmentURI
fromRawPartsURI
withPathURI
changeQuery URI
newURIWithFragmentParametersURI
fragmentParametersURI
queryParametersURI
withSchemeURI
withPortAny
castSafelyToAtomicReference
getValueAny
applyIfAtomicReference
setValueAny
alsoIfNullPath
copyRecursivelyPath
sizeOrNullPath
isFilePath
deleteWithParentsIfEmpty	Path
copyPath
systemIndependentPath
Path
writePath
safeOutputStream	Path
movePath
createSymbolicLinkPath
inputStreamIfExistsPath
isAncestorPath
writeChildPath
basicAttributesIfExistsPath
deleteChildrenStartingWithPath
lastModifiedPath
readChars	Path
sizePath
directoryStreamIfExistsPath
deletePath
getDirectoryTree&DirectoryContentSpec
assertIsMatchedBy-DirectoryContentSpec
generateInVirtualTempDirFile
assertMatchesPath
assertMatches!AutoCloseable
runClosingOnFailureString
encodeUrlQueryParameterReader
readCharSequenceString
decodeBase64ByteBuffer
toByteArrayHttpRequest
referrerHttpRequest
hostBootstrap
handler'EventLoopGroup
serverSocketChannelClassBootstrap
connectRetrying ChannelFuture
addChannelListenerByteBuf
readUtf8+HttpRequest
isWriteFromBrowserWithoutOriginHttpRequest
isRegularBrowserChannel
uriSchemeHttpRequest
isLocalOriginUrl
hostHttpRequest
userAgentEventLoop
shutdownIfOioHttpRequest
origin!Channel
closeAndShutdownEventLoopByteBuf
releaseIfError!DirectoryContentBuilder
classFileJsonGenerator
arrayJsonGenerator
objAccessModifier
toAsmCodeLanguageLevel
toAsmCodeByteArray
convertToTextDirectorySpecBase
toStringErrorReporter
assertTrue(CompletableFuture
awaitWithCheckCanceled!ProcessHandler
withOutputCapturedDeferred
awaitWithCheckCanceled#Component
addPropertyChangeListener JEditorPane
addHyperLinkListener$SharedFlow
collectLatestUndispatchedString
escLBrString
findTextRangeString
trimMiddleCharArray
nullizeString
nullize3ProjectIndexingHistoryImpl
aggregateStatsPerIndexer!ProjectIndexingHistoryImpl
toJson4ProjectIndexingHistoryImpl
aggregateStatsPerFileType#ScanningStatistics
toJsonStatistics*IndexingFileSetStatistics
toJsonStatisticsIndexedFile
toJsonSlowIndexedFile
toJsonIndexingTimes
toJson'ProjectIndexingHistoryImpl
getFileCountScannedFile
toJsonTimeNano
toMillis+PortableFilePath
hasPresentablePathMatchingHtmlBuilder
trElement
addAttrIfNotEmptyHtmlBuilder
ulHtmlBuilder
printUnifiedHtmlBuilder
textHtmlBuilder
h1HtmlBuilder
printHtmlBuilder
theadHtmlBuilder
printRuntimeInfoHtmlBuilder
textareaHtmlBuilder
divHtmlBuilder
inputHtmlBuilder
printAppInfoHtmlBuilder
liHtmlBuilder
tableHtmlBuilder
scriptHtmlBuilder
thHtmlBuilder
tdHtmlBuilder
titleHtmlBuilder
label JsonIndexDiagnostic
generateHtmlHtmlBuilder
rawTextHtmlBuilder
linkHtmlBuilder
strongHtmlBuilder
bodyHtmlBuilder
hrHtmlBuilder
tbodyHtmlBuilder
styleHtmlBuilder
plusHtmlBuilder
htmlHtmlBuilder
headMap
reverseSequence
withPreviousArray
asJBIterableMutableList
addAllIfNotNull	List
initCollection
mapSmartSetCollection
map2ArrayStream
getIfSingleList
headTailOrNullIterator
forEachGuaranteedMutableList
addIfNotNullArray
mapInPlaceList
tailOrEmptyCollection
forEachLoggingErrors"Collection
mapNotNullLoggingErrorsIterator
stopAfterCollection
filterSmartCollection
minimalElementsCollection
mapSmartNotNullCollection
filterSmartMutableOptional
orNullMutableMap
putValueArray
map2ArrayCollection
toArrayArray
forEachGuaranteedStream
isEmptyArray
streamCollection
mapSmartStream
notNullizeArray
mapSmart	List
tailMutableList
catchIterable
asJBIterableList
toMutableSmartListList
headTailCollection
forEachGuaranteed&BaseHtmlLexer
isTagEmbedmentStartToken'BaseHtmlLexer
isAttributeEmbedmentTokenPsiFile
allReferencesAroundPsiFile
referencesAtPsiFile
allDeclarationsPsiFile
allDeclarationsAroundXTransformation
karasiqueQueryRequest
andThenWordRequest
andThenWordRequest
occurrenceProcessorParametersRequest
andThenRequests
andThenTextOccurrence
walkUpIntRange
lengthIntRange
withOffsetPsiElement
parentsSdk
isBasedOnCredentialsType%ProgressIndicatorEx
subscribeOnCancelDisposable
doIfAliveLifetime
createNestedDisposableDisposable
defineNestedLifetimeDisposable
createLifetimeGraphics2D
fill2DRectGraphics2D
paint2DLineGraphics2D
fill2DRoundRectISource
adviseIdeGlassPane
mouseMovedIdeGlassPane
childAtMouseJComponent
childAtMouseLifetime
runBackgroundAsync!Lifetime
launchUnderModalProgress*Lifetime
startUnderBackgroundProgressAsyncLifetime
runModalAsync%Lifetime
startUnderModalProgressAsync&Lifetime
launchUnderBackgroundProgressDeferred
toPromise,CoroutineScope
startChildLongBackgroundAsync1CoroutineScope
startChildNonUrgentBackgroundAsync(CoroutineScope
launchChildLongBackgroundCompletableFuture
toPromise"CoroutineScope
startChildOnUiAsync&CoroutineScope
launchChildIOBackgroundLifetime
startOnUiAsyncLifetime
launchOnUiAnyModality*CoroutineScope
startChildIOBackgroundAsyncLifetime
startIOBackgroundAsyncLifetime
launchIOBackground-CoroutineScope
launchChildNonUrgentBackgroundCoroutineScope
launchChildOnUi!Lifetime
startLongBackgroundAsyncLifetime
launchOnUi&Lifetime
startNonUrgentBackgroundAsyncLifetime
launchLongBackground"Lifetime
launchNonUrgentBackgroundComboBox
collectionModel#TextFieldWithBrowseButton
emptyTextIterable
naturalSortedTreeModel
asSequenceJComponent
putUserDataJComponent
getUserDataListModel
asSequence ExtendableTextField
addExtensionTreeModel
getTreePathProject
getModulesDialogValidation
asWarningWithParameter
andDialogValidation
andWithParameter
transformResultWithTwoParameters
asWarningDialogValidation
withOKEnabledWithParameter
withOKEnabledWithTwoParameters
withOKEnabledWithTwoParameters
andWithParameter
asWarning DialogValidation
transformResult!WithTwoParameters
transformResultWithParameter
invoke*WithParameter
forTextFieldWithBrowseButtonWithParameter
forTextComponentWithTwoParameters
forProperty WithParameter
transformParameterWithTwoParameters
invokeWithParameter
forPropertyWithParameter
trimParameterPresentation
scaleIconBlock
shiftSide
getRange
startDocument
lineOffsets	Range
endCharSequence
lineOffsets%AnActionEvent
isFromLocalChangesPlace#AnActionEvent
isToggleCommitEnabled AnActionEvent
isFromLocalChangesVcsContext
getCommonVcsVcsContext
getRoots-AnActionEvent
getContextCommitWorkflowHandlerLocalChangeList
authorDateLocalChangeList
changeListDataLocalChangeList
authorOriginInfo
getTextActionToolbar
getGearButtonFileStatus
attributesInt
formatIntChangesTree
isLeafSelectedProject
isCommitToolWindowShown!ContentManager
selectFirstContentVirtualFile
saveIgnoredFileDescriptor
toText!AnActionEvent
findDiffPreviewFileARepositoryLocationCommittedChangesPanel
setCommittedChangesFilterString
getSubject#Project
getCommittedChangesProviderDisposable
usePair
toNotNullPair
component1Pair
component2File
systemIndependentPathHtmlChunk
plusElement
buildChildrenRegistryValue
withValueJComponent
whenFocusGainedJComponent
whenFirstFocusGainedComboBox
whenItemSelectedJTextComponent
whenTextModifiedIdeaPluginDescriptor
kind-String
splitByDotsJoiningIncorrectIdentifiers6String
substringAfterLastDotNotFollowedByIncorrectChar Project
isExternalStorageEnabledProject
getProjectCachePathProject
getProjectCacheFileName#Project
getExternalConfigurationDirModule
guessModuleDirProject
modifyModulesProject
getProjectDataPathProject
guessProjectDirCollection
mapWithProgressProgressIndicator
withPushPopCollection
forEachWithProgressProgressIndicator
scaleFractionProgressSink
asContextElementCoroutineScope
progressSinkCoroutineContext
progressSinkProgressDialogUI
updateFromSink!CoroutineScope
showModalIndicator"ProgressIndicatorEx
updateFromSinkCoroutineScope
showIndicator/PersistentStateComponent
reloadApplicationStateProject
servicesComponentManager
stateStoreProject
serviceIfCreatedProject
serviceOrNullProject
serviceLogger
runAndLogExceptionAny
thisLoggerResult
getOrLogExceptionLogger
trace JComboBox
whenItemSelectedFromUiJTextComponent
whenTextChangedJComboBox
whenItemSelectedComponent
whenKeyTyped JCheckBox
whenStateChangedFromUiTreeModel
addTreeModelListenerItemSelectable
whenItemSelectedJTextComponent
whenCaretMovedDropDownLink
whenItemSelectedListModel
addListDataListenerItemSelectable
addItemListenerComponent
addMouseListenerJTextComponent
addCaretListenerTableView
whenTableChangedJComboBox
addPopupMenuListenerComponent
whenKeyReleasedJTree
whenTreeChangedDocument
whenTextChangedComponent
whenMouseReleasedComponent
whenMousePressedItemSelectable
whenStateChangedTableViewModel
whenTableChangedComponent
addFocusListenerDocument
addDocumentListenerComponent
whenKeyPressedDisposable
whenDisposed$TableViewModel
addTableModelListener*JComboBox
whenPopupMenuWillBecomeInvisible/TextFieldWithBrowseButton
whenTextChangedFromUi)TextFieldWithBrowseButton
whenTextChangedComponent
whenFocusGainedComponent
whenFocusLostTreeModel
whenTreeChanged$JTextComponent
whenTextChangedFromUiComponent
onceWhenFocusGainedListModel
whenListChangedComponent
addKeyListenerObservableMutableProperty
bindThreeStateCheckBox
bindComponent
bindVisibleAtomicBoolean
lockOrSkipJTextComponent
bind%ObservableMutableProperty
bindStorageStatusText
bindTextFieldWithBrowseButton
bind'TextFieldWithBrowseButton
bindEmptyText,ObservableMutableProperty
bindBooleanStorageJComboBox
bindJCheckBox
bindDropDownLink
bind
JList
bindComponent
bindEnabled$ComponentWithEmptyText
bindEmptyTextJLabel
bind
JTree
bind$ObservableProperty
joinCanonicalPathObservableProperty
transformObservableProperty
minusObservableProperty
xorObservableProperty
isNull&ObservableProperty
joinPresentablePathObservableMutableProperty
trimObservableProperty
equalsToObservableProperty
isNotNullObservableProperty
notNullObservableProperty
timesObservableProperty
notObservableProperty
notEqualsToObservableProperty
orObservableProperty
plus#ObservableProperty
toUiPathPropertyObservableProperty
divObservableProperty
trim*ObservableMutableProperty
toUiPathPropertyObservableProperty
and+ObservableOperationTrace
onceAfterOperation,ObservableOperationTrace
onceBeforeOperation#ObservableOperationTrace
asProperty/ObservableOperationTrace
whenOperationCompletedObservableMutableProperty
mapGraphProperty
comapGraphProperty
mapGraphProperty
transformObservableMutableProperty
comapModalityState
asContextElementDispatchers
EDTJob
cancelReadJob-ExpirableExecutor
coroutineDispatchingContext ExpirableExecutor
withConstraint CoroutineContext
contextModalityAppUIExecutor
inWriteActionAppUIExecutor
withConstraint%AppUIExecutor
inUndoTransparentAction)AppUIExecutor
coroutineDispatchingContextDisposable
cancelJobOnDisposalCompanion
composeExpiration Expiration
cancelJobOnExpirationExpiration
invokeOnExpirationCompanion
currentRuntime'RuntimeChooserModel
fetchCurrentRuntimeGraphProperty
getAndSubscribe&RuntimeChooserModel
fetchAvailableJbrsList
sortedForUIDocument
doCalculateCrc!UserDataHolder
findOrCalculateCrcUserDataHolder
getCachedCrcVirtualFile
calculateCrcDocument
calculateCrcVirtualFile
doCalculateCrcUserDataHolder
setCachedCrc#SdkComboBox
setSelectedJdkReferenceSdkComboBox
addJdkReferenceItem#SdkComboBox
getSelectedJdkReference%SdkLookupProvider
resolveJdkReference)ExternalOptionState
unlinkExternalOptions0SdkLookupProvider
nonblockingResolveSdkBySdkName2SdkLookupProvider
nonblockingResolveProjectJdkInfo"SdkLookupProvider
executeSdkLookup+SdkLookupProvider
nonblockingResolveSdkInfo4SdkLookupProvider
nonblockingResolveSdkInfoBySdkName+SdkLookupProvider
nonblockingResolveJdkInfo*SettingsFragmentsContainer
addPathFragment2SettingsFragmentsContainer
addDistributionFragment-SettingsFragmentsContainer
addVariantFragment;SettingsFragmentsContainer
addLabeledSettingsEditorFragmentDSettingsFragmentsContainer
addRemovableLabeledSettingsEditorFragment4SettingsFragmentsContainer
addSettingsEditorFragment/SettingsFragmentsContainer
addVmOptionsFragment1SettingsEditorFragment
modifyLabeledComponentSize!SettingsFragmentsContainer
addTag6SettingsFragmentsContainer
addWorkingDirectoryFragment/SettingsFragmentsContainer
addBeforeRunFragment'SettingsEditorFragment
applyToComponent(SettingsFragmentsContainer
addVariantTagHSettingsFragmentsContainer
addRemovableLabeledTextSettingsEditorFragment1SettingsFragmentsContainer
addEnvironmentFragment1SettingsFragmentsContainer
addCommandLineFragment/ExternalSystemUnlinkedProjectAware
getProjectIdLExternalSystemUnlinkedProjectAware
linkAndLoadProjectWithLoadingConfirmation,DependencyAnalyzerView
setSelectedDependency,SimpleColoredComponent
customizeCellRendererData
getDisplayTextJComponent
setPreferredWidthJBLoadingPanel
bindLoadingTextCardLayoutPanel
bindJBLoadingPanel
bindAnAction
asActionButton"Element
getMandatoryAttributeValueJEditorPane
toHTMLJEditorPane
readHTMLProject
isDirectoryBasedProject
stateStore%SequenceScope
waitAndResumeBreakpoint5ExecutionWithDebuggerToolsTestCase
processBreakpointsJComponent
boldString
toReadableLogEvent
escapeLogEventAction
addEscapedData(RunnerAndConfigurationSettings
isRunning*RunnerAndConfigurationSettings
shortenName"AbstractWslDistribution
getWslPathAbstractWslDistribution
getTool,AbstractWslDistribution
createWslCommandLine"AbstractWslDistribution
runCommandWSLDistribution
executeOnWsl#WSLDistribution
expectOneLineOutput5WSLDistribution
executeInShellAndGetCommandOnlyStdout8RunnerAndConfigurationSettings
isNewSerializationAllowedCollection
forEachManaged$RunConfiguration
cloneBeforeRunTasks"ListTableWithButtons
setEmptyState'ListTableWithButtons
setVisibleRowCount+RunnerAndConfigurationSettings
isOfSameType+LanguageRuntimeConfiguration
getRuntimeType!RunProfile
getEffectiveTargetNameProject
defaultTargetName7TargetEnvironmentAwareRunProfile
getEffectiveTargetName,TargetEnvironmentConfiguration
getTargetType+JComponent
fixHighlightingOfUiDslComponents8TargetBasedSdkAdditionalData
getTargetEnvironmentRequestSdk
isBasedOnTargetType"String
ensureEndsWithFileSeparator TargetEnvironment
getTargetPaths&String
normalizeFileSeparatorCharacterTargetEnvironment
getLocalPaths%String
removeRepetitiveFileSeparators%TargetEnvironment
collectPathMappingsString
normalizeRelativePathString
replaceFileSeparatorPtyOptions
toLocalPtyOptions"TargetEnvironment
resolveLocalPathIterable
toLinkedSetFunction1ExternallySynchronized
tryMapToSynchronizedVolume2TargetEnvironmentRequest
getUploadRootForLocalPath-TargetEnvironmentFunction
andThenJoinToString>TargetEnvironmentRequest
getTargetEnvironmentValueForLocalPathUploadRoot
getTargetUploadPath$TargetEnvironment
downloadFromTarget/TargetEnvironmentFunction
getRelativeTargetPath*LocalPortBinding
getTargetEnvironmentValueIterable
joinToStringFunction"DownloadRoot
getTargetDownloadPathTargetEnvironmentFunction
plusTargetEnvironment
getTargetPathBuilder
buildFromQuotaState
toQuotaStateQuotaOptions
toQuotaOptionsDeferred
blockingGetPublicKey
rsaEncrypt#ByteString
performRsaTransformationPrivateKey
rsaDecrypt"ByteArray
performRsaTransformationCompanion
createSocketTransport"DaemonHandshakeTransport
encrypted!Companion
createUnixFifoTransport&Companion
createProcessStdoutTransportQuotaManager
runIfPermittedClass
getResourcePath MultiCloseable
registerCloseable Companion
createDaemonConnectionCompanion
startInProcessServerDataContext
editConfigurationDataContext
runToolbarDataExecutionEnvironment
isRunning#ExecutionEnvironment
getDisplayNameAnActionEvent
configurationAnActionEvent
arrowIcon&ExecutionEnvironment
showToolWindowTabAnActionEvent
isActiveProcessDataContext
setConfiguration)ExecutionEnvironment
isProcessTerminatingAnActionEvent
idAnActionEvent
runToolbarData"AnActionEvent
isProcessTerminatingDataContext
configurationAnActionEvent
setConfiguration RunContentDescriptor
environmentAnActionEvent
environment)ExecutionEnvironment
getRunToolbarProcessAnActionEvent
mainState#ProgressIndicator
createSubProgressLifetime
onTerminationOrNowURI
addPathSuffixXValueNodeImpl
isPinnedXValueNodeImpl
getPinInfo"XValueNodeImpl
parentPinToTopValueXValueNodeImpl
canBePinned"ClientId
assertClientIdConsistencyClientId
isCurrentClientId
asContextElementActivity
runChildSpanBuilder
useSpan
useSpanBuilder
useWithScope$PsiElement
virtualFormattingListenerFile
getOuterProjectPsiFile
isFormattingSupportedLogger
debugDimension
isNotEmptyTopic
subscribe!Dispatchers
ApplicationThreadPoolRow
closeButtonPositionComboBoxRow
radioButtonCell
radioButtonCell
checkBoxRow
checkBoxPanel
caretStopRowString
capitalizeWordsInt
asTabPlacementRow
tabPlacementComboBoxIterable
performOperationOnEachEditor
assertFolded$InlayPresentation
fireContentChanged#InlayHintsSink
addCodeVisionElement%ProviderWithSettings
withSettingsCopy+ProviderWithSettings
getCollectorWrapperFor$InlayHintsProvider
getActualSettingsInlayHintsProvider
withSettingsInlayPresentation
dimension0ProviderWithSettings
getPlaceholdersCollectorFor!InlayPresentation
fireUpdateEvent5InlayParameterHintsProvider
hasDisabledOptionHintInfoMethodInfo
toPatternString
toPatternElementElement
attributeValueElement
extractPatternsGraphics2D
withTranslatedPoint
translateNewMouseEvent
mouseButtonIntentionAction
wrappedActionIdIntentionAction
invokeAsActionMutableList
swapList
getTopSortedIdListEditor
lensContextOrThrow"RangeMarker
codeVisionEntryOrThrowEditor
lensContextContainer
getMousePositionSafeEditor
editorMouseListenerEditor
mousePressed!ScrollingModel
visibleAreaChangedEditor
mouseReleasedJComponent
windowAncestorEditor
mouseRelativePointEditor
mousePointEditor
mouseEnteredComponent
getMousePositionSafe)CodeVisionEntryExtraActionModel
isEnabled CodeVisionEntry
contextAvailableCodeVisionEntry
tooltipTextAnchoring
isNearAnchoring2D
isInsideAnchoring
isFarAnchoring
isInsideAnchoring
isOutsideLayoutResult
locationLayoutResult
sizeRectangle
inflateRectangle
smartClipRectangle
getCenterRectangle
setRightRectangle
mapRectangle
setTopRectangle
verticalSmartClipRectangle
horizontalSmartClipRectangle
setBottomRectangle
setLeftCodeVisionEntry
painter%ItemPresentation
getColoredAttributes!ItemPresentation
getContainerTextPsiElement
gtdTargetNavigatablePsiElement
psiNavigatableTargetData
ctrlMouseDataTargetData
ctrlMouseInfoTargetData
elementAtOffsetTargetData
highlightRangesTargetData
toGTDActionDataGTDActionData
toGTDUActionDataSequence
navigationTargetsTargetData
typeSymbolsReferenced
typeSymbolsDeclared
typeSymbolsFontSize
migrateV1ToV2FontSize
migrateV2ToV3Pointer
commandNamePointer
progressTitlePointer
presentableTextCoroutineScope
appendUsages!CoroutineScope
previewRenameAsyncTextOptions
isEmptyCollection
dereferenceOrNull'TemplateState
addTemplateResultListenerTemplateState
getNewName'TemplateState
getOriginSegmentEndOffset*SuggestedRefactoringSupport
anchorByOffsetPsiElement
startOffsetPsiElement
createSmartPointerPsiElement
endOffsetDocumentEvent
oldRangeRangeMarker
rangeDocumentEvent
newRange<SuggestedRefactoringSupport
changeSignatureAvailabilityRange0SuggestedRefactoringAvailabilityIndicator
update9SignatureChangePresentationModel
dropRedundantConnections1SignatureChangePresentationModel
checkCorrectnessList
hasModifications@SignatureChangePresentationModel
addMovedEffectForAllConnectionsList
forAllFragments4SignatureChangePresentationModel
improvePresentationTextFragment
hasModifications<SignatureChangePresentationModel
dropObviousSingleConnection&TextFragment
addMovedEffectIfConnectedDouble
ceilToInt%SignatureChangePresentationModel
dumpTextRange
stripWhitespaceTextRange
stripTextRange
extendTextRange
extendWithWhitespace1SuggestedRefactoringStateChanges
parameterMarkers(SuggestedRefactoringSupport
anchorOffsetInt
xProject
closeAllBalloonsJComponent
smallFontFunctionJComponent
mediumFontFunction(ChangesTree
setupCodeReviewProgressModelTabInfo
appendCountTabInfo
setUnreadTooltipTabInfo
setTextTabInfo
appendUnreadIcon#EditorTextField
installCancelAction#EditorTextField
installSubmitAction%CommentTextFieldModel
submitWithCheck%CommentTextFieldModel
isSubmitAllowedHttpApiClient
loadImageListModel
itemsListModel
findIndexString
toKebabCaseIonWriter
listIonReader
list0String
trimTrailingWhitespacesAndAddNewlineAtEOF#MutableList
catchAndStoreExceptionsAny
requireIsApplication
serviceIfCreated%InspectionProfileImpl
disableAllTools-ProjectInspectionProfileManager
createProfilePath
refreshVfsVirtualFile
writeChildFileSystem
file1ComponentManager
registerOrReplaceServiceInstance(ComponentManager
registerServiceInstance0ComponentManager
registerComponentImplementation"ComponentManager
registerExtension3ComponentManager
getServiceImplementationClassNames*ComponentManager
registerComponentInstanceComponentManager
replaceService#Description
getOwnOrClassAnnotationProject
use#Project
runInLoadComponentStateMode-CodeInsightTestFixture
assertInjectedLanguage.CodeInsightTestFixture
assertInjectedReference.DefaultLightProjectDescriptor
withKotlinStdlibInspectionProfileImpl
edit TextRange
excludeLeadingLinefeedDocument
areRangesAdjacentCompanion
getInstanceVirtualFileUrl
toPath VirtualFileUrl
isEqualOrParentOf(JpsImportedEntitySource
toExternalSourceVirtualFile
toVirtualFileUrlVirtualFileUrl
virtualFile*ContentRootEntity
getSourceRootsComparator+ModuleEntity
findGlobalLibsFromDependencies$ModuleEntity
findSdkFromDependenciesModuleEntity
isModuleUnloadedModuleEntity
findModuleBridgeElement
getAttributeValueStrict'DependencyScope
toEntityDependencyScope!DependencyScope
toDependencyScopeLibraryEntity
findLibraryBridgeLibraryId
findLibraryBridgeEntityId
notThisEntityId
asThisClass
toBuilderClassClass
toImplClass#ReferableWorkspaceEntity
referrersxEntityStorage
toBuilderWorkspaceEntity
referrersxWorkspaceEntity
referrersyEntityId
asStringEntityId
arrayIdEntityId
clazzEntityId
copy WorkspaceEntityData
persistentIdChangeLog
anonymizeEntitySource
anonymize&MutableEntityStorageImpl
serializeDiffEntityStorage
serializeToEntityStorage
anonymize.MutableEntityStorageImpl
getOriginalEntityData+MutableEntityStorageImpl
getOriginalParents*MutableEntityStorageImpl
getOriginalSourceInt
findEntityClassInt
findWorkspaceEntityClass
toClassIdEntityId
asChildEntityId
asParent'AbstractEntityStorage
assertConsistency+AbstractEntityStorage
extractOneToOneParent*EntityStorage
updateOneToManyParentOfChild$EntityStorage
extractOneToManyParent*EntityStorage
extractAbstractOneToOneChild2AbstractEntityStorage
extractAbstractOneToOneChild,AbstractEntityStorage
extractOneToManyParent&EntityStorage
extractOneToManyChildren+EntityStorage
extractOneToAbstractOneParent*AbstractEntityStorage
extractOneToOneChild-EntityStorage
updateOneToManyChildrenOfParent6AbstractEntityStorage
extractOneToAbstractManyChildren1EntityStorage
updateOneToAbstractOneChildOfParent2AbstractEntityStorage
extractOneToAbstractOneChild-AbstractEntityStorage
extractOneToOneChildIds1AbstractEntityStorage
extractOneToManyChildrenIds)EntityStorage
updateOneToOneChildOfParent3AbstractEntityStorage
extractOneToAbstractOneParent2EntityStorage
updateOneToAbstractManyParentOfChild,EntityStorage
extractOneToAbstractManyParent"EntityStorage
extractOneToOneChild.AbstractEntityStorage
extractOneToManyChildren4AbstractEntityStorage
extractOneToAbstractManyParent.EntityStorage
extractOneToAbstractManyChildren)EntityStorage
updateOneToOneParentOfChild*EntityStorage
extractOneToAbstractOneChild1EntityStorage
updateOneToAbstractOneParentOfChild5EntityStorage
updateOneToAbstractManyChildrenOfParent#EntityStorage
extractOneToOneParentPath
toVirtualFileUrlFile
toVirtualFileUrlEntityStorage
isConsistentBidirectionalMultiMap
copyBidirectionalMultiMap
putAll BidirectionalLongMultiMap
putAll JvmSourceSet
gradleQualifiedNameJvmSourceSet
annotationRootJvmSourceSet
javadocRootJvmSourceSet
moduleNameJvmSourceSet
mavenCoordinatesBuilder
externalSystemId:MutableEntityStorage
addLibraryFilesPackagingElementEntity0MutableEntityStorage
addJavaModuleSettingsEntity#SourceRootEntity
equalsAsOrderEntryModuleEntity
getModuleLibrariesEntityStorage
projectLibraries:MutableEntityStorage
addModuleSourcePackagingElementEntity6MutableEntityStorage
addFileCopyPackagingElementEntityModuleEntity
sourceRoots'ModuleDependencyItem
equalsAsOrderEntry?MutableEntityStorage
addContentRootEntityWithCustomEntitySource&MutableEntityStorage
addArtifactEntity>MutableEntityStorage
addModuleTestOutputPackagingElementEntity$MutableEntityStorage
addModuleEntity#SourceRootEntity
asCustomSourceRoot;MutableEntityStorage
getOrCreateExternalSystemModuleOptions1MutableEntityStorage
addModuleCustomImlDataEntity/MutableEntityStorage
addLibraryPropertiesEntity0MutableEntityStorage
addArtifactPropertiesEntity-MutableEntityStorage
addModuleGroupPathEntity7MutableEntityStorage
addDirectoryPackagingElementEntity#MutableEntityStorage
addFacetEntity<MutableEntityStorage
addArtifactOutputPackagingElementEntity5MutableEntityStorage
addArchivePackagingElementEntity&ContentRootEntity
hashCodeAsOrderEntry)MutableEntityStorage
addContentRootEntity(MutableEntityStorage
addSourceRootEntity!SourceRootEntity
asJavaSourceRoot8MutableEntityStorage
addCustomSourceRootPropertiesEntity!LibraryEntity
getCustomProperties#SourceRootEntity
asJavaResourceRoot@MutableEntityStorage
addExtractedDirectoryPackagingElementEntity,MutableEntityStorage
addJavaSourceRootEntity.MutableEntityStorage
addJavaResourceRootEntity$ContentRootEntity
equalsAsOrderEntry%SourceRootEntity
hashCodeAsOrderEntry%MutableEntityStorage
addLibraryEntity4MutableEntityStorage
addCustomPackagingElementEntity1MutableEntityStorage
addArtifactRootElementEntity:MutableEntityStorage
addModuleOutputPackagingElementEntity;MutableEntityStorage
addDirectoryCopyPackagingElementEntity!MutableEntityStorage
addSdkEntityBuilder
eclipsePropertiesBuilder
facetOrderLibraryEntity
externalSystemId-ArtifactEntity
artifactExternalSystemIdEntity'FacetEntity
facetExternalSystemIdEntityModuleEntity
facetOrderFacetEntity
childrenFacetsBuilder
childrenFacets#Builder
facetExternalSystemIdEntity0LibraryFilesPackagingElementEntity
libraryEntity&Builder
artifactExternalSystemIdEntity3ArtifactOutputPackagingElementEntity
artifactEntityBuilder
libraryEntityBuilder
artifactEntityModuleEntity
eclipsePropertiesSecureRandom
generateBytesCredentials
serializeJPasswordField
getTrimmedCharsCredentials
isFulfilledCredentials
hasOnlyUserNameCredentials
isEmptyCharArray
toByteArrayAndClear(CredentialAttributes
toPasswordStoreable*PathMacroManager
createTrackingSubstitutorSchemeManager
saveElement
digest$DataWriter
toBufferExposingByteArrayDataWriter
writeToElement
normalizeRootNameKey
getAndClearStorage
pathElement
deserializeElement
deserializeIntoStreamProvider
write.ComponentStoreImpl
childlessSaveImplementationArray
sortByDeprecatedVirtualFile
getOrCreateChild!ExternalizableScheme
renameScheme ProgressManager
runUnderProgress
Int
scaledInsets
verticalRectangle
bottomInsets
horizontalFlow
throttlePsiElement
elementTypeASTNode
hasTypeHttpResponse
sendHttpResponseStatus
sendHttpResponse
addCommonHeadersHttpResponse
addServerHttpResponse
addNoCache!HttpResponse
addKeepAliveIfNeededHttpResponseStatus
responseByteBuf
readIntoCharBuffer!StringBuilder
appendCommaIfNeededStringBuilder
jsonEscapedStringStringBuilder
jsonByteBuf
addBufferByteBuf
writeAsciiByteBuf
writeByteHttpResponseStatus
orInSafeModeRequestCallback
reject$PsiElement
findUElementByTextFromPsiUElement
findElementByText!UElement
findElementByTextFromPsiPsiElement
nextSiblingsPsiElement
prevSiblingsUFile
asIdentifiers.IndentedPrintingVisitor
visitUFileAndGetResultUFile
asRefNamesMap
foldKeysByLevelMap2
toMutableMap2!Appendable
printMapAsAlignedListsMap2
transformMap2Map
uncurryMap2
filterInnerMap3
transformMap3Appendable
appendReplacingAppendable
printMapMap
transformAppendable
prettyPrintTreeAppendable
withMarginMutableMap
mergeMap!Appendable
printMapAsAlignedTreesMutableMap3
mergeMap3Map3
toMutableMap3MutableMap2
mergeMap2*UastClazz
getImplementedUElementInterfaces&UastClazz
getImplementedUastInterfaces!Class
getBaseClassesAndInterfacesList
asLogStringFile
toVirtualFileModule
getModuleDirSdk
versionVirtualFile
isKotlinFileTypeModule
rootManagerPsiElement
toRangeList
toRangeModule
hasKotlinFacetLogger
debugIfEnabledMutableList
addRange!KtAnnotated
hasJvmFieldAnnotationKtExpression
resolveTypeKtCallExpression
receiverValuePsiElement
isMultiline(KtExpression
getPreviousInQualifiedChain%KtExpression
unwrapBlockOrParenthesisKtExpression
readWriteAccessKtCallExpression
receiverTypeVirtualFile
toPsiFilePsiFile
getLineEndOffsetPsiFile
getLineStartOffsetVirtualFile
toPsiDirectoryPsiElement
getKotlinFqNameKotlinType
fqNameFqName
isImportedModule
isGradleModuleModule
externalProjectIdCachedValuesManager
cacheProject
cacheByClassModule
isAndroidModuleKotlinType
fqNameEqualsDataContext
project"GradleSettings
setupGradleSettingsList
nullizeProject
modulesJvmSubstitutor
toPsiSubstitutorJvmModifier
toPsiModifierInputStream
copyToCloseable
usePath
extensionString
toByteArrayString
toCharArrayLock
withLockCollection
isNullOrEmptyClass
fieldsCountClass
fieldsCountOrDefault
Any
unwrapCommitContext
isPushAfterCommitIterable
containsIterable
sumLongRange
containsJob
cancelAndJoinFlow
onEachFlow
mapString
toBooleanStrictOrNull	Array
sumChar
isLowerCaseAny
ifEmptyString
capitalizeArray
filterToAny
isInstanceOf(BuildActionExecuter
setCancellationToken0GradleProjectSettings
setupGradleProjectSettings0GradleNewProjectWizardStep
generateModuleBuilder'GrReferenceExpression
isDynamicVariable%GrMethodCall
isDynamicVariableInvoked%PsiElement
getLinkedGradleProjectPath#PsiElement
getRootGradleProjectPathPsiFile
isGradleScript!PsiClass
isResolvedInGradleScriptString
trimAccessorNamePsiClass
getTomlHeaderKindString
getTomlHeaderKindPsiMethod
resolveInTomlFile
findSequentChildString
escapeIfNeeded:ExternalSystemTaskExecutionSettings
applyTestConfigurationTargetValue
maybeGetTargetValueTargetValue
maybeGetLocalValuePathMapper
maybeConvertToRemotePathMapper
maybeConvertToLocalLogger
traceIfNotEmptyPsiMethod
canBeAppliedToPsiElement
isGinqUntransformed'GrMethodCall
collectExpressionArguments"PsiElement
markAsGinqUntransformedGrMethodCall
refCallIdentifierPsiElement
ginqParentsGrMethodCall
getSingleArgumentGrMethodCall
callRefNamePsiElement
getStoredGinqPsiElement
isGinqRootPsiElement
getClosestGinqTreeGrBinaryExpression
isLeftShiftGrBinaryExpression
isOr%PsiElement
maybeTableColumnExpressionPsiElement
isTableHeaderGrExpression
isTableRow$GrBinaryExpression
findMaybeTableRowPsiElement
isUnderTableHeaderGrStatement
isTableRow#GrExpression
isTableColumnSeparator$GrBinaryExpression
isInteractionDown3GrBinaryExpression
isInteractionWithCardinalityDownGrExpression
isInteractionCallGrExpression
isInteractionPartGrBinaryExpression
isRightShiftGrExpression
isInteractionDown#GrBinaryExpression
isMultiplicationGrExpression
isInteractionUp GrExpression
isInteractionCallUp0GrBinaryExpression
isInteractionWithResponseDown&GroovyPsiElement
isInsideSpecificationPsiClass
isSpockSpecificationPsiFile
appenderDeclarationsPsiClass
isLogbackConfigPsiElement
isBeforePsiFile
isLogbackConfig#PsiFile
computeAppenderDeclarations%PsiAnnotationMemberValue
booleanValue'PsiAnnotation
findDeclaredDetachedValueGrModifierList
hasAnnotation&PsiAnnotationMemberValue
getArrayValue$PsiAnnotationMemberValue
stringValue&GrFunctionalExpression
processDelegate)GrFunctionalExpression
processDelegatesTo1GrFunctionalExpression
processClosureClassMembers#GrFunctionalExpression
processOwner%GrFunctionalExpression
doGetOwnerType(GrFunctionalExpression
processParameters6GrFunctionalExpression
processDeclarationsWithCallsite.GrFunctionalExpression
processOwnerAndDelegateGrMethodCall
isExplicitCall*GroovyFileImpl
doCollectScriptDeclarationsGrVariable
isDeclaredInGrMethodCall
isImplicitCall GrCodeReferenceElement
doGetKind(GroovyFileImpl
collectScriptDeclarations.GroovyResolveResult
getTypeArgumentsFromResult/GrCodeReferenceElement
shouldInferTypeArguments*GrCodeReferenceElement
isInClosureSafeCast&GrCodeReferenceElement
getDiamondTypes,GrCodeReferenceElement
explicitTypeArguments+GrImportStatement
createImportFromStatementGrModifierList
isFinal GrTypeDefinition
isAbstractClassGrModifierList
isAbstractGrTypeDefinition
isFinalClassGrModifierList
hasPackageScope0GrModifierList
hasOwnEmptyPackageScopeAnnotation"GrVariableDeclaration
isFinalFieldPsiClass
isCodeTraitInt
hasMaskModifier%GrVariableDeclaration
containingClassGrMethod
isAbstractMethodGrModifierList
isStaticPsiParameter
withType"GrReferenceExpression
resolveKinds(GrReferenceExpression
handleSpecialCasesGrMethod
isCompactConstructorPropertyKind
getPropertyNamePropertyKind
getAccessorNamePsiMethod
checkKind!PropertyKind
getPropertyNameInnerPsiType
isBooleanOrBoxedString
isPropertyName-GrTypeDefinition
processBeforeTransformations(GrTypeDefinition
processBeforeConversionGrTypeDefinition
processPhasePsiElement
backwardSiblingsPsiElement
treeWalkUpAndGetPsiElement
skipSameTypeParentsPsiElement
contextsPsiElement
skipParentsOfType"PsiElement
treeWalkUpAndGetElementPsiElement
treeWalkUpGrExpression
isZeroString
hasIntegerSuffix!GrTypeDefinition
getSealedElement GrExpression
isSingleCharLiteralGrIndexProperty
advancedResolve#GrIndexProperty
isSimpleArrayAccess'GrIndexProperty
getArgumentListArgument!GrIndexProperty
getArrayClassTypeGrIndexProperty
multiResolve(GrIndexProperty
getSimpleArrayAccessTypeGrIndexProperty
isClassLiteralGrExpression
isLValueGrExpression
isRValueGrExpression
getRValueGrExpression
isSuperExpression,PsiElement
skipWhiteSpacesAndNewLinesForward!GrOperatorExpression
multiResolve$GrExpression
isApplicationExpressionPsiMethod
isEffectivelyVarArgs.GrCodeReferenceElement
mayContainTypeArgumentsPsiMethod
isClosureCallGrExpression
isThisExpression PsiElement
isWhiteSpaceOrNewLinePsiElement
isNewLineGrExpression
isNullLiteral&GrExpression
skipParenthesesDownOrNull-PsiElement
skipWhiteSpacesAndNewLinesBackward%PsiElement
skipWhiteSpacesAndNewLinesGroovyPsiElement
isFakePsiMethodPattern
withKindIterator
firstOrNull&GrReferenceExpression
createDescriptorGrVariable
createDescriptor(GrFunctionalExpression
getInvocationKind*GrFunctionalExpression
getControlFlowOwner)InvocationKind
weakenIfUsesSafeNavigationPsiBuilder
any PsiBuilder
anyTypeElementParsing&PsiBuilder
capitalizedReferenceParsingPsiBuilder
groovyParser!PsiBuilder
isNextTokenCapitalizedPsiBuilder
state'PsiBuilder
definitelyTypeElementParsingPsiBuilder
lookaheadPsiBuilder
advanceIfPsiBuilder
clearTypeInfo#PsiBuilder
wasDefinitelyTypeElementPsiType
boxIfNecessaryPsiType
devoidPsiType
boxPsiScopeProcessor
checkName&GroovyFileBase
processClassesInPackage"GrStatementOwner
processStatements%PsiScopeProcessor
shouldProcessFields,GrCodeReferenceElement
isAnnotationReference%GroovyResolveResult
asJavaClassResult(PsiScopeProcessor
isNonAnnotationResolvePsiScopeProcessor
shouldProcess&PsiScopeProcessor
shouldProcessClasses)PsiScopeProcessor
shouldProcessPropertiesGrStatementOwner
processLocals%PsiScopeProcessor
isAnnotationResolve0PsiScopeProcessor
shouldProcessDynamicProperties#GroovyFileBase
processClassesInFile%PsiScopeProcessor
shouldProcessLocals"ResolveState
processNonCodeMembers&PsiScopeProcessor
shouldProcessMembersPsiScopeProcessor
getName PsiScopeProcessor
annotationHint&PsiScopeProcessor
shouldProcessMethods-PsiScopeProcessor
shouldProcessTypeParameters4GrTypeDefinition
doProcessInnersInClassAndInterfaces(GrTypeDefinition
processInnerInHierarchy)GrTypeDefinition
doProcessOwnInnerClassesPsiClass
doProcessInnerClasses$GrTypeDefinition
collectOuterClasses0GrTypeDefinition
processInnersInHierarchyNoCache'GrTypeDefinition
doProcessOwnInterfacesPsiClass
doProcessInterfaces&GrTypeDefinition
processInnersInOuters-GrTypeDefinition
processInnersInOutersNoCachePsiElement
isOwnerPsiElement
getOwner-GrReferenceExpression
doResolvePackageOrClass!PsiElement
resolveUnqualifiedTypePsiElement
resolveQualifiedType%GrReferenceExpression
doResolveStaticPsiElement
resolveToField+GrReferenceExpression
resolvePackageOrClass!PsiElement
resolveToLocalVariable%GrReferenceExpression
resolveClassFqn;GrCodeReferenceElement
canResolveToInnerClassOfCurrentClass'PsiElement
processFileLevelDeclarations&GrCodeReferenceElement
getActualParent'GrCodeReferenceElement
processQualifier%GrCodeReferenceElement
processClasses&GrReferenceElement
canResolveToPackagePsiClass
getPackage)GrCodeReferenceElement
resolveAsPartOfFqnPsiElement
processUnqualifiedPsiFile
skipDummies)GrCodeReferenceElement
resolveAsReferencePsiElement
getCurrentClassPsiElement
processInnerClasses4GrReferenceElement
canDelegateToInlineTransformation,GrReferenceElement
canResolveToTypeParameter/GrCodeReferenceElement
resolveAsImportReference0GrCodeReferenceElement
resolveAsPackageReferenceCollection
collapseAccessors#Collection
collapseReflectedMethodsPsiType
processSpreadPsiType
processReceiverTypePsiClassType
processClassTypePsiType
doProcessReceiverTypeArgument
processReceiverPsiClassType
processMapTypePsiType
doProcessReceiverType0$GrReferenceElement
resolvePackageFqnString
isVanillaClassName"GrReferenceElement
resolveClassFqn'GrReferenceExpression
resolveIncompleteList
filterApplicableList
correctStaticScopeGrCall
getArguments%GrTypeDefinition
getInnersOutersCache(GrTypeDefinition
getInnersHierarchyCacheGrTypeDefinition
buildCacheGrTypeDefinition
makeResultCollection
toResolveResults&GroovyMethodResult
checkMapConstructor GroovyFile
validImportStatementsGroovyFile
doGetImportsGroovyFile
getFileImportsGroovyFileBase
resolveGroovyFile
processBindingsGroovyFile
getBindingsGroovyFile
getBindingPsiSubstitutor
putAllPsiClass
typePsiClass
rawTypeInferenceSession
addExpressionGrCodeReferenceElement
complete)GrCodeReferenceElement
getRootTypeElementPsiElement
isTypeElementChild,GrCodeReferenceElement
processTypeParameters1GrCodeReferenceElement
processPackageDeclarations5GrCodeReferenceElement
findTypeParameterListCandidate/GrCodeReferenceElement
processClassDeclarationsConsumer
plusAssign
Array
initConsumer
consumeAllJBConsumer
consumeAllUserDataHolder
removeUserDataTokenSet
minusTokenSet
plusUserDataHolder
getUserDataHolder
withKeyUserDataHolder
setFunction1
andCondition
toPredicateRow
groovySdkComboBox(ModuleBuilder
createSampleGroovyCodeFile1ValidationInfoBuilder
validateGroovySdkWithDialog)NewProjectWizardStep
logGroovySdkFinished'ValidationInfoBuilder
validateGroovySdkAnnotation
createDescriptor1CreateMethodRequest
createPropertyTypeConstraintsJvmClass
toGroovyClassOrNull(GrParameter
eligibleForExtendedInferencePsiType
findSingleClass'List
findTypeWithCorrespondingSupertypePsiType
isGroovyLangObjectPsiType
mapConjunctsPsiClass
allSupersPsiType
isClosureTypeDeepPsiType
erasureIterable
flattenIntersectionsPsiType
resolve*PsiSubstitutor
removeForeignTypeParameters1GroovyPsiElementFactory
createProperTypeParameterPsiType
typeParameterString
insertPsiType
isTypeParameter"PsiSubstitutor
recursiveSubstitute%PsiType
forceWildcardsAsTypeArgumentsPsiTypeParameter
upperBoundPsiElement
properResolve)GroovyMethodCandidate
smartContainingType#GroovyMethodCandidate
smartReceiverPsiSubstitutor
composeGrMethod
forEachParameterUsagePsiType
anyComponent)SearchRequestCollector
adoptSearchRequestGrCall
isClosureCallPsiType
isClosureTypePsiElement
isClosureCallMethod'PresentationFactory
buildRepresentationIterable
intersperse!PsiMethod
isMethodWithLiteralNamePsiFile
getGroovyFilePsiElement
isStringNameElement-GrReferenceElement
isReferenceWithLiteralName,GrReferenceElement
isAnonymousClassReferencePsiElement
isThisOrSuper(PsiElement
getNewNameFromTransformations TransformationContext
plusAssignPsiModifierListOwner
isStaticPsiAnnotation
getPropertyNameGrField
getListenerTypeGrField
getIndexedComponentTypeFileType
isJupyterLanguageURIBuilder
addParameterURIBuilder
addPathSegmentUpdateResult
isEmpty#ProgressIndicator
asProgressMonitor!URIish
toStringWithoutCredentialsStringBuilder
addListStringBuilder
appendCompactListRepository
fixAndGetStateConfig
getRemoteBranchFullNameRepository
fetchRepository
getAheadCommitsCountRepository
readRepository
computeIndexDiffRepository
upstreamRepository
setUpstreamRepository
resetHardRepository
disableAutoCrLfRepository
commitRepository
processChildrenRepository
deletePathRepository
deleteAllFilesRepository
writePathRepository
editEditorConfigPattern
isSubcaseOf!EditorConfigHeader
isEquivalentToEditorConfigHeader
isSubcaseOfEditorConfigHeader
matches#EditorConfigDescriptor
isLeftInPair$EditorConfigDescriptor
isRightInPair$LookupElementBuilder
withSeparatorInLookupElementBuilder
withSuffixAny
ifBlankAny
containsGitRepository
detectFsMonitorSequence
sumWithLimitsGitRepository
workingCopySizeGitRepository
isWorkTreeUsedGitPushTagMode
localizedTitle!GitRepository
getDirectSubmodulesGitRepository
asSubmoduleGitRepository
isSubmodule#GitRepository
isParentRepositoryForCollection
truncatedCollection
toShortenedLogStringList
lastInstanceMap
withoutMap
toShortenedLogStringLightFileStatus
repositoryPathGitLineHandler
appendParametersLightFileStatus
isTrackedGitFileStatusNode
hasGitFileStatus
pathGitFileStatus
hasRootState
getFullyStagedPathsGitStageTracker
statusRootState
getStagedChangesRootState
getStagedState
getStagedState
fileStatusNodes GitFileStatusNode
createConflictState
hasMatchingRootsState
forEachStatusVirtualFile
filePathLightFileStatus
colorLightFileStatus
getPresentationStatusRecord
getPresentationBoolean
toIntGitStashTracker
isNotEmptyGitStashTracker
allStashesVcsLogRangeFilter
asReversedVcsLogRangeFilter
getRangeIndexDataGetter
match#IndexDataGetter
selectSourceCommitsProcessOutput
dumpToStringList
indicesByPredicateImpossible
notifyUndoImpossibleComplete
notifySuccessError
notifyUndoErrorJComboBox
mutableModelJButton
withLeftToolbarBorderJButton
adjustForToolbar#GitRebaseTodoModel
convertToEntriesSet
toStringRepresentationGitRemote
urlCommitContext
isSkipHooksHierarchyEvent
isParentChangedHierarchyEvent
isShowingChangedCommitContext
isSignOffCommitCommitContext
commitAuthorDate'CommitContext
isCommitRenamesSeparately'CheckinProjectPanel
commitAuthorTrackerCommitContext
commitAuthorGitLineHandler
setCommitMessageGitLineHandler
setCommitOptions1TaskTestContext
waitAndUsePreviouslyFoundListItem*TaskTestContext
usePreviouslyFoundListItemComponent
findText#SimpleColoredComponent
getFirstText"SimpleColoredComponent
getFullText*LessonContext
highlightDebugActionsToolbar)TaskRuntimeContext
subscribeForMessageBus&TaskContext
highlightToolbarWithAction TaskContext
checkToolWindowState.TaskContext
showBalloonOnHighlightingComponent,TaskContext
triggerOnQuickDocumentationPopup!LessonContext
highlightRunToolbarTaskContext
waitSmartModeStep)LessonContext
firstLessonCompletedMessage*LessonContext
highlightAllFoundUiWithClass+LessonContext
showInvalidDebugLayoutWarning/LessonContext
restoreRefactoringOptionsInformer#TaskRuntimeContext
closeAllFindTabs(TaskContext
restoreAfterStateBecomeFalse!LessonContext
highlightButtonById!LessonContext
highlightAllFoundUiTaskContext
proceedLinkTaskContext
gotItStep,LessonContext
restoreChangedSettingsInformer(TaskContext
proposeRestoreForInvalidText*TaskTestContext
clickLessonMessagePaneLink#LessonContext
sdkConfigurationTasksString
dropMnemonic6LessonContext
showWarningIfInplaceRefactoringsDisabled&TaskRuntimeContext
lineWithBreakpoints%String
replaceSpacesWithNonBreakSpaceLinkLabel
wrapWithUrlPanelAny
toNullableStringAny
isToStringContains3TaskRuntimeContext
checkWordInSearchEverywhereInput"TaskRuntimeContext
findTextAtCaret&TaskRuntimeContext
textAtCaretEqualsToTaskRuntimeContext
textOnLine"TaskRuntimeContext
textAfterOffset"TaskRuntimeContext
textBeforeCaret%TaskRuntimeContext
findElementAtCaret#TaskRuntimeContext
textBeforeOffset"LessonContext
toggleBreakpointTaskLessonContext
clearBreakpointsPsiElement
getParentOfTypePsiElement
getParentByPredicateString
asSliceByteArray
asSliceGenericByteBuffer
containsByte
isDigitDouble
hasCountLocalDate
minusInstant
plusInstant
minusInstant
untilFile
combineSafeByteReadChannel
toByteArrayByteWriteChannel
writeByteWriteChannel
writeShortByteWriteChannel
writeIntByteReadChannel
copyToInputStream
toByteReadChannelWritableByteChannel
writeReadableByteChannel
readMemory
copyToOutput
writeDoubleOutput
writeLongOutput
writeShortOutput
writeIntOutput
writeFloatOutput
writeFullyInput
readAvailableInput
readFullyBuffer
readTextInput
readShortInput
readLongInput
readIntInput
readFloatInput
readDoubleBuffer
writeFullyBuffer
readAvailableBuffer
readFullyCharsetDecoder
decodeCharsetEncoder
encodeUTF8ByteBuffer
decodeASCII3_arrayByteBuffer
decodeASCIIByteBuffer
decodeASCII3_bufferMutableMap
internCoreProjectDumper
dump#NlComponent
getLiveAndroidAttributeState
isFinished
State
iconLong
toFormattedTimeStringJComponent
scrollToCenterList
toChainInfo AndroidFacet
getLibraryManifestsString
htmlEscape!AppInspectorMessenger
sendCommandType
convertQuad
toShapeLong
nanosToMicrosCell
trimmedTextValidationCell
bindTextCell
textValidation	Cell
textCell
whenTextChangedFromUiCell
columnsCell
bindValueJComponent
originJComponent
removeKeyboardActionJComponent
addKeyboardActionJTextComponent
isTextUnderMouse#ObservableMutableProperty
transformVcsCodeAuthorInfo
getTextVcsCodeAuthorInfo
isMultiAuthor!MutableEntityStorage
modifyEntitySdk
isTargetBasedProcessOutput
checkExitCodeDocument
virtualFileRectangle
rightRectangle
leftRectangle
topArray
elArray
nonEmptyOr
Array
exprString
orAnonymous$PsiModifierListOwner
renderModifiersVirtualFile
getModuleCachedValue
getValue PsiElement
getNullableModuleInfo-KtParameter
resolveToParameterDescriptorIfAny'KtDeclaration
unsafeResolveToDescriptor(KtClassOrObject
resolveToDescriptorIfAny*KtAnnotationEntry
resolveToDescriptorIfAny(KtNamedFunction
resolveToDescriptorIfAnyKtElement
resolveToCallAny
analyzeWithContentKtElement
analyzeAndGetResultKtElement
safeAnalyze(KtElement
analyzeWithContentAndGetResult&KtDeclaration
resolveToDescriptorIfAny#KtProperty
resolveToDescriptorIfAny KtDeclaration
analyzeWithContentProject
gradleProjectSettingsLibInfo
gradleMarkerPsiElement
getLineCount	List
foldReader
settingValuePsiElement
module Editor
addEditorDocumentListenerPromise
onErrorPromise
onSuccessCoroutineScope
futureKClass
castKClass
safeCastKType
javaTypeMap
getValueMutableMap
removeSequence
sumFlow
sampleFlow
debounceKSerializer
nullableSelectBuilder
onTimeout#AtomicRef
findSegmentAndMoveForwardAtomicRef
moveForwardAtomicInt
addConditionally                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         